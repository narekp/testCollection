{
  "info": {
    "_postman_id": "71c5ce25-b75c-4a46-87ca-efb2aed8db6f",
    "name": "01.2 CI (CRUD) Copy",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Demand Partner (CRUD)",
      "item": [
        {
          "name": "Login_admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//No error message",
                  "pm.test(\"No error message\", function () {",
                  "    pm.expect(pm.response.text()).to.not.include(\"Invalid email or password. Please, try again.\");",
                  "});",
                  "",
                  "//Content",
                  "pm.test(\"Contains: token, refreshToken, role\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"token\");",
                  "    pm.expect(pm.response.text()).to.include(\"refreshToken\");",
                  "    pm.expect(pm.response.text()).to.include(\"permissions\");",
                  "});",
                  "",
                  "//Permissions",
                  "pm.test(\"Role is Global Tenant Admin\", function () {",
                  "pm.expect(pm.response.text()).to.include(\"\\\"DSP_WRITE\\\"\");",
                  "pm.expect(pm.response.text()).to.include(\"\\\"DSP_READ\\\"\");",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"token\", jsonData.token);"
                ],
                "type": "text/javascript",
                "id": "600e5775-8e00-4aa7-a793-c81073cf6f9c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "//Save current time before start",
                  "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                ],
                "type": "text/javascript",
                "id": "36bdde89-96e6-4697-b97b-665c8be63d25"
              }
            }
          ],
          "id": "0de2c201-56dc-4d2e-b962-3b6f48c26bf6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
          },
          "response": []
        },
        {
          "name": "Create_dsp_RTB",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"externalId\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Demand Partner\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"ACTIVE\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"ortbVersion\\\":\\\"V2_3\");",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"dspId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "462a4631-fc21-451b-b2fd-ce8cd2b27ce4"
              }
            }
          ],
          "id": "f631fafc-f70b-4c55-bc20-11a42ec6fb95",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Postman: Demand Partner {{currentSprint}} {{startTimestamp}}\",\n  \"auctionMode\": \"FIRST_PRICE\",\n  \"contacts\": {},\n  \"ortbVersion\": \"V2_3\",\n  \"requestFilter\": {\n    \"adTypes\": [],\n     \"countries\": [],\n    \"sizes\": [],\n    \"ssps\": {\n      \"allow\": true,\n      \"values\": []\n    }\n  },\n  \"status\": \"ACTIVE\",\n  \"type\": \"RTB\",\n  \"url\": \"http://qa.com\",\n  \"pricingStrategy\": \"FULL_PRICE\",\n  \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps"
          },
          "response": []
        },
        {
          "name": "Get_dsp_RTB",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"dspId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"externalId\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Demand Partner\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"ACTIVE\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"ortbVersion\\\":\\\"V2_3\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"contacts\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"RTB\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"auctionMode\\\":\\\"FIRST_PRICE\");",
                  "        pm.expect(pm.response.text()).to.include(\"\\\"pricingStrategy\\\":\\\"FULL_PRICE\");",
                  "",
                  "    //\"price: 0\" has been passed and \"price: 0E-8\" recieved. Is it OK?",
                  "    //pm.expect(pm.response.text()).to.include(\"\\\"price\\\":\\\"0E-8\");",
                  "",
                  "    //UPD Price is null already, 0E-8 value returns for the \"share\" field ",
                  "",
                  "});"
                ],
                "type": "text/javascript",
                "id": "90c2c3df-2fd0-44d0-b1ee-a97e56ac9fd3"
              }
            }
          ],
          "id": "376d1235-e556-4fa9-8ebe-27936f198f40",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspId}}"
          },
          "response": []
        },
        {
          "name": "Update_dsp_ortbVersion",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "// Type",
                  "pm.test(\"Type: TAG\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"dspId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"RTB\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"ortbVersion\\\":\\\"V2_5_MEDIAFUSE\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "8a39e80a-873c-4d91-b779-0b22cde9db30"
              }
            }
          ],
          "id": "d986bc8e-550e-4ed5-88f4-bc61e405b319",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Postman: Demand Partner {{currentSprint}} {{startTimestamp}}\",\n  \"auctionMode\": \"FIRST_PRICE\",\n  \"contacts\": {},\n  \"ortbVersion\": \"V2_5_MEDIAFUSE\",\n  \"requestFilter\": {\n    \"adTypes\": [],\n     \"countries\": [],\n    \"sizes\": [],\n    \"ssps\": {\n      \"allow\": true,\n      \"values\": []\n    }\n  },\n  \"status\": \"ACTIVE\",\n  \"type\": \"RTB\",\n  \"url\": \"http://qa.com\",\n  \"labels\": [],\n  \"pricingStrategy\": \"FULL_PRICE\",\n  \"targetings\": [],\n  \"targetingsConj\": \"AND\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspId}}"
          },
          "response": []
        },
        {
          "name": "Update_dsp_auctionMode",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "// Type",
                  "pm.test(\"Type: TAG\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"dspId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"RTB\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"auctionMode\\\":\\\"SECOND_PRICE\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "83cd21f6-3a1a-4d3b-a8eb-d4bcf78c82df"
              }
            }
          ],
          "id": "1a0e8618-7891-49f2-b9d2-9df4926facbe",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Postman: Demand Partner {{currentSprint}} {{startTimestamp}}\",\n  \"auctionMode\": \"SECOND_PRICE\",\n  \"contacts\": {},\n  \"ortbVersion\": \"V2_3\",\n  \"requestFilter\": {\n    \"adTypes\": [],\n     \"countries\": [],\n    \"sizes\": [],\n    \"ssps\": {\n      \"allow\": true,\n      \"values\": []\n    }\n  },\n  \"status\": \"ACTIVE\",\n  \"type\": \"RTB\",\n  \"url\": \"http://qa.com\",\n  \"pricingStrategy\": \"FULL_PRICE\",\n  \"targetingsConj\": \"AND\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspId}}"
          },
          "response": []
        },
        {
          "name": "Update_dsp_without_id",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 500\"] = responseCode.code === 500;",
                  "",
                  "// Type",
                  "pm.test(\"Type: TAG\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"Request method 'PUT' not supported\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "38b209e1-958d-462a-9adc-d71b244d42d1"
              }
            }
          ],
          "id": "b4a701d0-6ac6-4e6a-b693-086f7e8c061d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Postman: Demand Partner {{currentSprint}} {{startTimestamp}}\",\n  \"auctionMode\": \"SECOND_PRICE\",\n  \"contacts\": {},\n  \"ortbVersion\": \"V2_3\",\n  \"requestFilter\": {\n    \"adTypes\": [],\n     \"countries\": [],\n    \"sizes\": [],\n    \"ssps\": {\n      \"allow\": true,\n      \"values\": []\n    }\n  },\n  \"status\": \"ACTIVE\",\n  \"type\": \"RTB\",\n  \"url\": \"http://qa.com\",\n  \"pricingStrategy\": \"FULL_PRICE\",\n  \"targetingsConj\": \"AND\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps"
          },
          "response": []
        },
        {
          "name": "Update_dsp_rtb_status_INACTIVE",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "// Content",
                  "pm.test(\"Contains: id, status: INACTIVE\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"dspId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"INACTIVE\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "47843b49-204d-4c81-bb72-939cd675db11"
              }
            }
          ],
          "id": "c0725943-145b-4bf6-8370-5cd2bd6ab322",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Postman: Demand Partner {{currentSprint}} {{startTimestamp}}\",\n  \"auctionMode\": \"SECOND_PRICE\",\n  \"contacts\": {},\n  \"ortbVersion\": \"V2_3\",\n  \"requestFilter\": {\n    \"adTypes\": [],\n     \"countries\": [],\n    \"sizes\": [],\n    \"ssps\": {\n      \"allow\": true,\n      \"values\": []\n    }\n  },\n  \"status\": \"INACTIVE\",\n  \"type\": \"RTB\",\n  \"url\": \"http://qa.com\",\n  \"pricingStrategy\": \"FULL_PRICE\",\n  \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspId}}"
          },
          "response": []
        },
        {
          "name": "Delete_dsp_RTB",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "890ca4f4-7c0b-431b-a2d6-435060d1e7e7"
              }
            }
          ],
          "id": "0c55b2b7-5ed0-468b-b4c4-a00fa284d18b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspId}}"
          },
          "response": []
        },
        {
          "name": "Get_dsp_RTB_deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "6e6ffc4d-826a-4e59-a488-18b305115c15"
              }
            }
          ],
          "id": "b8b75203-c982-42fd-b606-cbeb9313e607",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspId}}"
          },
          "response": []
        },
        {
          "name": "Create_dsp_type_TAG",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "// Type",
                  "pm.test(\"Type: TAG\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"TAG\");",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"dspId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "96bd5d3c-ff85-455e-a4a9-ef2a3c8482ea"
              }
            }
          ],
          "id": "531ba18e-42a5-4250-8c48-2f36ddd91f00",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Postman: Demand Partner {{currentSprint}} {{startTimestamp}}\",\n  \"auctionMode\": \"FIRST_PRICE\",\n  \"contacts\": {},\n  \"price\": 0,\n  \"ortbVersion\": null,\n  \"requestFilter\": {\n    \"adTypes\": [],\n     \"countries\": [],\n    \"sizes\": [],\n    \"ssps\": {\n      \"allow\": true,\n      \"values\": []\n    }\n  },\n  \"status\": \"ACTIVE\",\n  \"type\": \"TAG\",\n  \"url\": \"http://qa.com\",\n  \"pricingStrategy\": \"FULL_PRICE\",\n  \"targetingsConj\": \"AND\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps"
          },
          "response": []
        },
        {
          "name": "Get_dsp_type_TAG",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "// Type",
                  "pm.test(\"Type: TAG\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"dspId\"))",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"TAG\");",
                  "});",
                  "",
                  "//Set token variable",
                  "//var jsonData = JSON.parse(responseBody);",
                  "//pm.environment.set(\"dspId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "bab3894e-5ea2-45df-9a10-25828fbba978"
              }
            }
          ],
          "id": "d97c583e-a4d8-48db-ad66-ae7130645df6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspId}}"
          },
          "response": []
        },
        {
          "name": "Update_dsp_tag_without_price",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Error message contains:\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"must not be null\");",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "9993b9c6-da92-449a-8ee0-edb45874e692"
              }
            }
          ],
          "id": "8b211780-e99d-405c-bdf7-a17b85c23a35",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Postman: Demand Partner {{currentSprint}} {{startTimestamp}}\",\n  \"auctionMode\": \"FIRST_PRICE\",\n  \"bidfloor\": 0,\n  \"compression\": true,\n  \"contacts\": {\n    \"country\": \"BY\",\n    \"email\": \"so@adoppler.com\",\n    \"phone\": \"+375291111111\",\n    \"responsiblePerson\": \"QA QA\",\n    \"skype\": \"qa_qa\"\n  },\n \"cookieSyncBidirect\": false,\n  \"cookieSyncEnabled\": false,\n  \"cookieSyncRedirectParam\": null,\n  \"cookieSyncUrl\": null,\n  \"cookieSyncUserMacro\": null,\n  \"defaultAppBundleMapping\": \"string\",\n  \"dynamicRps\": true,\n  \"embedded\": true,\n  \"externalId\": null,\n  \"id\": 0,\n  \"ortbVersion\": \"V2_3\",\n  \"price\": null,\n  \"privateAuction\": true,\n  \"requestFilter\": {\n    \"adTypes\": [\n      \"BANNER\"\n    ],\n    \"carriersAllow\": true,\n     \"countries\": [\n      \"BY\",\n      \"BE\"\n    ],\n    \"devices\": [\n      \"MOBILE_TABLET\"\n    ],\n    \"inventoryTypes\": {\n      \"allow\": true,\n      \"values\": [\n        \"DESKTOP_WEB\"\n      ]\n    },\n    \"oses\": [\n      \"ANDROID\"\n    ],\n    \"sizes\": [\n      {\n        \"width\": 576,\n        \"height\": 1024\n      }\n    ],\n    \"ssps\": {\n      \"allow\": true,\n      \"values\": [\n        0\n      ]\n    }\n  },\n  \"requireIfa\": true,\n  \"rpsLimit\": 0,\n  \"share\": 0,\n  \"sharedForAll\": true,\n  \"status\": \"ACTIVE\",\n  \"type\": \"TAG\",\n  \"url\": \"http://qa.com\",\n  \"targetingsConj\": \"AND\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspId}}"
          },
          "response": []
        },
        {
          "name": "Update_dsp_tag_status_INACTIVE",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "// Content",
                  "pm.test(\"Contains: id, status: INACTIVE\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"dspId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"INACTIVE\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "a2cf2398-144d-41fc-9f82-2f8979098901"
              }
            }
          ],
          "id": "259dc0b3-02de-4d3a-9ad8-a1ea7d804893",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Postman: Demand Partner {{currentSprint}} {{startTimestamp}}\",\n  \"auctionMode\": \"FIRST_PRICE\",\n  \"bidfloor\": 0,\n  \"compression\": true,\n  \"contacts\": {\n    \"country\": \"BY\",\n    \"email\": \"so@adoppler.com\",\n    \"phone\": \"+375291111111\",\n    \"responsiblePerson\": \"QA QA\",\n    \"skype\": \"qa_qa\"\n  },\n \"cookieSyncBidirect\": false,\n  \"cookieSyncEnabled\": false,\n  \"cookieSyncRedirectParam\": null,\n  \"cookieSyncUrl\": null,\n  \"cookieSyncUserMacro\": null,\n  \"defaultAppBundleMapping\": \"string\",\n  \"dynamicRps\": true,\n  \"embedded\": true,\n  \"externalId\": null,\n  \"id\": 0,\n  \"ortbVersion\": null,\n  \"price\": 0,\n  \"privateAuction\": true,\n  \"requestFilter\": {\n    \"adTypes\": [\n      \"BANNER\"\n    ],\n    \"carriersAllow\": true,\n     \"countries\": [\n      \"BY\",\n      \"BE\"\n    ],\n    \"devices\": [\n      \"MOBILE_TABLET\"\n    ],\n    \"inventoryTypes\": {\n      \"allow\": true,\n      \"values\": [\n        \"DESKTOP_WEB\"\n      ]\n    },\n    \"oses\": [\n      \"ANDROID\"\n    ],\n    \"sizes\": [\n      {\n        \"width\": 576,\n        \"height\": 1024\n      }\n    ],\n    \"ssps\": {\n      \"allow\": true,\n      \"values\": [\n        0\n      ]\n    }\n  },\n  \"requireIfa\": true,\n  \"rpsLimit\": null,\n  \"share\": 0,\n  \"sharedForAll\": true,\n  \"status\": \"INACTIVE\",\n  \"type\": \"RTB\",\n  \"url\": \"http://qa.com\",\n  \"pricingStrategy\": \"FULL_PRICE\",\n  \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspId}}"
          },
          "response": []
        },
        {
          "name": "Delete_dsp_TAG",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "d36bae80-3e4e-4864-aee5-1d3ed8f3eb5a"
              }
            }
          ],
          "id": "5b314d93-1e2b-4bc5-82fa-d57f2ce93490",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspId}}"
          },
          "response": []
        },
        {
          "name": "Get_dsp_type_TAG_deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "250e4d8a-693e-43a8-8975-1e630f64cb10"
              }
            }
          ],
          "id": "14489a35-180a-49c4-a619-a9ca60e49ee0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspId}}"
          },
          "response": []
        },
        {
          "name": "Delete_dsp_nonexistent_id",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "9d7aec3c-1983-4583-8ed3-8528fcf8a2b9"
              }
            }
          ],
          "id": "2e56cbd7-8e7b-45f2-ba5a-a3625f598ab9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/-1"
          },
          "response": []
        }
      ],
      "id": "0f841ad2-56ee-4877-b03f-b5e6d060e6f7"
    },
    {
      "name": "Publisher (CRUD)",
      "item": [
        {
          "name": "Login_admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//No error message",
                  "pm.test(\"No error message\", function () {",
                  "    pm.expect(pm.response.text()).to.not.include(\"Invalid email or password. Please, try again.\");",
                  "});",
                  "",
                  "//Content",
                  "pm.test(\"Contains: token, refreshToken, role\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"token\");",
                  "    pm.expect(pm.response.text()).to.include(\"refreshToken\");",
                  "    pm.expect(pm.response.text()).to.include(\"permissions\");",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"token\", jsonData.token);"
                ],
                "type": "text/javascript",
                "id": "b67e16ba-5ea3-4405-88fa-429d62257596"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "//Save current time before start",
                  "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                ],
                "type": "text/javascript",
                "id": "b8fb1cdd-d962-4eb0-a8f4-a6ad71cad227"
              }
            }
          ],
          "id": "dac103db-3d13-4b60-a512-de6c57b23386",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
          },
          "response": []
        },
        {
          "name": "Create_publisher",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ab2bef9e-b721-4620-8938-e6e55e4106b9",
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Publisher\");",
                  "});",
                  "",
                  "//Set publisherId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"publisherId\", jsonData.id);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "946a09a6-f08d-4f1e-9c27-0997451bb3fb",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "0bfd4853-5d96-4a0d-a5e6-20c5404f9d0a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Postman: Publisher {{currentSprint}} {{startTimestamp}}\",\n    \"contacts\": {},\n    \"domain\": \"qa.com\",\n    \"paymentDetails\": \"\",\n    \"paymentTerm\": null,\n    \"sellerType\": \"PUBLISHER\",\n    \"status\": \"ACTIVE\",\n    \"type\": \"PUBLISHER\",\n    \"targetingsConj\": \"AND\",\n     \"sellersJsonSettings\": \n    {\n        \"sellerType\": \"PUBLISHER\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps"
          },
          "response": []
        },
        {
          "name": "Get_publisher",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"publisherId\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "3373a487-98ac-4a8c-97f2-f017770daddf"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "6f3347e0-8e80-4489-bbd0-18ec8f887593"
              }
            }
          ],
          "id": "cc62b292-1422-41d1-9226-a22bd2abcb53",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}}"
          },
          "response": []
        },
        {
          "name": "Update_publisher_seller_type",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "171287de-ab7e-4fdd-a4ba-cf2247b27b65",
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"publisherId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"sellerType\\\":\\\"INTERMEDIARY\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "417ab45b-95c5-4cbb-a26a-d4380f1c40a4",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "f1c4e500-966f-4aa4-be03-a4acd384b671",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"type\": \"PUBLISHER\",\n    \"externalId\": \"71134469\",\n    \"status\": \"ACTIVE\",\n    \"name\": \"Postman: Publisher Sprint 8 2020-11-30T13:03:03.801Z\",\n    \"contacts\": {\n        \"responsiblePerson\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"skype\": null,\n        \"country\": null\n    },\n    \"thirdPartyAdm\": \"\",\n    \"thirdPartyAdmEnabled\": false,\n    \"dsps\": null,\n    \"requiredAdmResponse\": null,\n    \"domain\": \"qa.com\",\n    \"paymentTerm\": null,\n    \"paymentDetails\": \"\",\n    \"group\": null,\n    \"marginPercentage\": null,\n    \"tmax\": null,\n    \"sellerType\": \"INTERMEDIARY\",\n    \"adInsertion\": null,\n    \"thirdPartyId\": null,\n    \"xandrPlacementId\": null,\n    \"publisherExchanges\": [],\n    \"logoBase64\": null,\n    \"sharedForAll\": false,\n    \"sharedSettings\": [],\n    \"adsTxtEntry\": \"ads-test3.env.geomotiv.com, 71134469, DIRECT\",\n    \"blackLists\": {\n        \"ips\": null,\n        \"advDomains\": null,\n        \"appBundles\": null,\n        \"creativeIds\": null,\n        \"siteDomains\": null,\n        \"categories\": {\n            \"allow\": false,\n            \"values\": []\n        }\n    },\n    \"rtbVersion\": null,\n    \"publisherType\": \"TAG_ONLY\",\n    \"supplySources\": [],\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"adPod\": {\n        \"adPodDuration\": null,\n        \"adPodCount\": null,\n        \"adPodType\": null,\n        \"responseMode\": null,\n        \"adPodLayouts\": [],\n        \"serveIncomplete\": false,\n        \"fallbackMode\": false,\n        \"deduplicationTypes\": []\n    },\n    \"secured\": false,\n    \"fraudRiskThreshold\": null,\n    \"includePixalateBeacon\": null,\n    \"pixalateBeaconChance\": null,\n    \"targetingsConj\": \"AND\",\n     \"sellersJsonSettings\": \n    {\n        \"sellerType\": \"INTERMEDIARY\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}}"
          },
          "response": []
        },
        {
          "name": "Update_publisher_add_dsps_filter",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "434bb8bb-a511-4303-95fe-c4e498ed1d71",
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"allow\\\":true,\\\"values\\\":[25445]\");    ",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "b09a6b8b-3f0c-4d7d-82a4-08236187a06f",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "4934a13c-ff24-4c10-ac86-d434159b99ec",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"type\": \"PUBLISHER\",\n    \"externalId\": \"71134469\",\n    \"status\": \"ACTIVE\",\n    \"name\": \"Postman: Publisher Sprint 8 2020-11-30T13:03:03.801Z\",\n    \"contacts\": {\n        \"responsiblePerson\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"skype\": null,\n        \"country\": null\n    },\n    \"thirdPartyAdm\": \"\",\n    \"thirdPartyAdmEnabled\": false,\n     \"dsps\": {\n        \"allow\": true,\n        \"values\": [\n            25445\n        ]\n    },\n    \"requiredAdmResponse\": null,\n    \"domain\": \"qa.com\",\n    \"paymentTerm\": null,\n    \"paymentDetails\": \"\",\n    \"group\": null,\n    \"marginPercentage\": null,\n    \"tmax\": null,\n    \"sellerType\": \"INTERMEDIARY\",\n    \"adInsertion\": null,\n    \"thirdPartyId\": null,\n    \"xandrPlacementId\": null,\n    \"publisherExchanges\": [],\n    \"logoBase64\": null,\n    \"sharedForAll\": false,\n    \"sharedSettings\": [],\n    \"adsTxtEntry\": \"ads-test3.env.geomotiv.com, 71134469, DIRECT\",\n    \"blackLists\": {\n        \"ips\": null,\n        \"advDomains\": null,\n        \"appBundles\": null,\n        \"creativeIds\": null,\n        \"siteDomains\": null,\n        \"categories\": {\n            \"allow\": false,\n            \"values\": []\n        }\n    },\n    \"rtbVersion\": null,\n    \"publisherType\": \"TAG_ONLY\",\n    \"supplySources\": [],\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"adPod\": {\n        \"adPodDuration\": null,\n        \"adPodCount\": null,\n        \"adPodType\": null,\n        \"responseMode\": null,\n        \"adPodLayouts\": [],\n        \"serveIncomplete\": false,\n        \"fallbackMode\": false,\n        \"deduplicationTypes\": []\n    },\n    \"secured\": false,\n    \"fraudRiskThreshold\": null,\n    \"includePixalateBeacon\": null,\n    \"pixalateBeaconChance\": null,\n    \"targetingsConj\": \"AND\",\n     \"sellersJsonSettings\": \n    {\n        \"sellerType\": \"PUBLISHER\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}}"
          },
          "response": []
        },
        {
          "name": "Update_publisher_status_INACTIVE",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5f587169-ebde-429a-8fca-3949d8c6bb69",
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"publisherId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"INACTIVE\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "55f66b74-3758-42e5-b741-e86a08cf7301",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "c60fb7d5-a584-4f6f-9a19-a68835b7141b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"type\": \"PUBLISHER\",\n    \"externalId\": \"71134469\",\n    \"status\": \"INACTIVE\",\n    \"name\": \"Postman: Publisher Sprint 8 2020-11-30T13:03:03.801Z\",\n    \"contacts\": {\n        \"responsiblePerson\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"skype\": null,\n        \"country\": null\n    },\n    \"thirdPartyAdm\": \"\",\n    \"thirdPartyAdmEnabled\": false,\n    \"dsps\": null,\n    \"requiredAdmResponse\": null,\n    \"domain\": \"qa.com\",\n    \"paymentTerm\": null,\n    \"paymentDetails\": \"\",\n    \"group\": null,\n    \"marginPercentage\": null,\n    \"tmax\": null,\n    \"sellerType\": \"INTERMEDIARY\",\n    \"adInsertion\": null,\n    \"thirdPartyId\": null,\n    \"xandrPlacementId\": null,\n    \"publisherExchanges\": [],\n    \"logoBase64\": null,\n    \"sharedForAll\": false,\n    \"sharedSettings\": [],\n    \"adsTxtEntry\": \"ads-test3.env.geomotiv.com, 71134469, DIRECT\",\n    \"blackLists\": {\n        \"ips\": null,\n        \"advDomains\": null,\n        \"appBundles\": null,\n        \"creativeIds\": null,\n        \"siteDomains\": null,\n        \"categories\": {\n            \"allow\": false,\n            \"values\": []\n        }\n    },\n    \"rtbVersion\": null,\n    \"publisherType\": \"TAG_ONLY\",\n    \"supplySources\": [],\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"adPod\": {\n        \"adPodDuration\": null,\n        \"adPodCount\": null,\n        \"adPodType\": null,\n        \"responseMode\": null,\n        \"adPodLayouts\": [],\n        \"serveIncomplete\": false,\n        \"fallbackMode\": false,\n        \"deduplicationTypes\": []\n    },\n    \"secured\": false,\n    \"fraudRiskThreshold\": null,\n    \"includePixalateBeacon\": null,\n    \"pixalateBeaconChance\": null,\n    \"targetingsConj\": \"AND\",\n     \"sellersJsonSettings\": \n    {\n        \"sellerType\": \"PUBLISHER\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}}"
          },
          "response": []
        },
        {
          "name": "Delete_publisher",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "846b3c83-9feb-40cf-83f8-3bca4e4d1c8f",
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "c6667092-ab6e-46f1-9821-373626536daf",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "3243d266-eedf-4f30-98c6-7415414f2036",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}}"
          },
          "response": []
        },
        {
          "name": "Get_publisher_deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "a0f164cd-f8e6-4ccb-a93d-61ca29f844e0"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "a6812225-0f60-4ba1-b05d-911f1bb248d3"
              }
            }
          ],
          "id": "7c3acd1d-fe52-4e7a-a941-895694228c54",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}}"
          },
          "response": []
        },
        {
          "name": "Create_publisher_with_ssp_sources",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b73b8a0a-2db0-41d3-aa59-cfba56e2b820",
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content publisherExchanges",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"publisherExchanges\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"publisherExchangeId\\\"\");",
                  "    //TODO \"exchangeId\": 80563 is hardcoded for Test 3",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"exchangeId\\\":80563\");",
                  "    //TODO \"exchangeId\": 25239 is hardcoded for Test 3",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"exchangeId\\\":25239\");",
                  "});",
                  "",
                  "//Set publisherId variable to delete it ",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"publisherId\", jsonData.id);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "37ffa305-7112-4dea-8245-3f9fe302df03",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "c582a94a-20ab-4c35-a81c-1c2e437297b8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Postman: Publisher {{currentSprint}} {{startTimestamp}}\",\n    \"contacts\": {},\n    \"domain\": \"qa.com\",\n    \"paymentDetails\": \"\",\n    \"paymentTerm\": null,\n    \"sellerType\": \"PUBLISHER\",\n    \"status\": \"INACTIVE\",\n    \"type\": \"PUBLISHER\", //EXCHANGE\n    \"publisherExchanges\": [\n        {\n            \"exchangeId\": 25239,\n            \"publisherExchangeId\": \"{{currentSprint}} {{startTimestamp}}\"\n        },\n        {\n            \"exchangeId\": 80563,\n            \"publisherExchangeId\": \"{{currentSprint}} {{startTimestamp}}\"\n        }\n    ],\n    \"targetingsConj\": \"AND\"/*,\n     \"sellersJsonSettings\": \n    {\n        \"sellerType\": \"PUBLISHER\"\n    },\n    \"exchangeType\": \"RTB\",\n    \"pricingStrategy\": \"FIXED_PRICE\"*/ \n    \n    \n//Были раньше у паблишера publisherExchanges а теперь уже нет и что это такое?\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps"
          },
          "response": []
        },
        {
          "name": "Delete_publisher",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "2185d5e3-0a7e-42ab-ba51-9ed63932019c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "a43ce560-e0c0-4cae-a918-1e247f1670f3"
              }
            }
          ],
          "id": "73672c4b-b381-4cf2-aefb-76f6898da27c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}}"
          },
          "response": []
        },
        {
          "name": "Create_publisher_logo_limit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "091627d0-41e6-4e4f-8743-98391862c1cb",
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 413\"] = responseCode.code === 413;",
                  "",
                  "//Content [TMP-1281]",
                  "pm.test(\"Contains error\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"File size is too large: 204 KB > 164 KB\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "996f0e57-4b04-4e57-be88-90241343dad9",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "cd73643c-4c7c-483d-a11b-f91f9ac712fb",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": null,\n  \"name\": \"Postman: Publisher {{currentSprint}} {{startTimestamp}}\",\n  \"adInsertion\": \"CSAI\",\n  \"contacts\": {\n    \"country\": \"BY\",\n    \"email\": \"so@adoppler.com\",\n    \"phone\": \"+375291111111\",\n    \"responsiblePerson\": \"QA QA\",\n    \"skype\": \"qa_qa\"\n  },\n  \"cookieSyncBidirect\": false,\n  \"cookieSyncEnabled\": false,\n  \"cookieSyncRedirectParam\": null,\n  \"cookieSyncUrl\": null,\n  \"cookieSyncUserMacro\": null,\n  \"domain\": \"qa.com\",\n  \"dsps\": null,\n  \"externalId\": null,\n  \"group\": \"Publisher Group 1\",\n  \"marginPercentage\": \"10\",\n  \"paymentDetails\": \"Details\",\n  \"paymentTerm\": \"NET_0\",\n  \"publisherExchanges\": [],\n  \"requiredAdmResponse\": false,\n  \"sellerType\": \"PUBLISHER\",\n  \"status\": \"INACTIVE\",\n  \"thirdPartyAdm\": \"TAG\",\n  \"thirdPartyAdmEnabled\": true,\n  \"thirdPartyId\": \"100500\",\n  \"tmax\": \"1000\",\n  \"type\": \"PUBLISHER\",\n  \"logoBase64\":\"\",\n    \"targetingsConj\": \"AND\",\n\n     \"sellersJsonSettings\": \n    {\n        \"sellerType\": \"PUBLISHER\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps"
          },
          "response": []
        },
        {
          "name": "Update_publisher_without_id",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 500\"] = responseCode.code === 500;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\Request method 'PUT' not supported\\\"\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "6835d9de-4738-4d6e-8c16-82cb46abfca8"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "da5d36ff-0f4d-4ff4-b3e4-53f55c9b65b8"
              }
            }
          ],
          "id": "7954251e-73fa-41a1-84d5-ab871f2f76eb",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"type\": \"PUBLISHER\",\n    \"externalId\": \"71134469\",\n    \"status\": \"INACTIVE\",\n    \"name\": \"Postman: Publisher Sprint 8 2020-11-30T13:03:03.801Z\",\n    \"contacts\": {\n        \"responsiblePerson\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"skype\": null,\n        \"country\": null\n    },\n    \"thirdPartyAdm\": \"\",\n    \"thirdPartyAdmEnabled\": false,\n     \"dsps\": {\n        \"allow\": true,\n        \"values\": [\n            25445\n        ]\n    },\n    \"requiredAdmResponse\": null,\n    \"domain\": \"qa.com\",\n    \"paymentTerm\": null,\n    \"paymentDetails\": \"\",\n    \"group\": null,\n    \"marginPercentage\": null,\n    \"tmax\": null,\n    \"sellerType\": \"INTERMEDIARY\",\n    \"adInsertion\": null,\n    \"thirdPartyId\": null,\n    \"xandrPlacementId\": null,\n    \"publisherExchanges\": [],\n    \"logoBase64\": null,\n    \"sharedForAll\": false,\n    \"sharedSettings\": [],\n    \"adsTxtEntry\": \"ads-test3.env.geomotiv.com, 71134469, DIRECT\",\n    \"blackLists\": {\n        \"ips\": null,\n        \"advDomains\": null,\n        \"appBundles\": null,\n        \"creativeIds\": null,\n        \"siteDomains\": null,\n        \"categories\": {\n            \"allow\": false,\n            \"values\": []\n        }\n    },\n    \"rtbVersion\": null,\n    \"publisherType\": \"TAG_ONLY\",\n    \"supplySources\": [],\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"adPod\": {\n        \"adPodDuration\": null,\n        \"adPodCount\": null,\n        \"adPodType\": null,\n        \"responseMode\": null,\n        \"adPodLayouts\": [],\n        \"serveIncomplete\": false,\n        \"fallbackMode\": false,\n        \"deduplicationTypes\": []\n    },\n    \"secured\": false,\n    \"fraudRiskThreshold\": null,\n    \"includePixalateBeacon\": null,\n    \"pixalateBeaconChance\": null,\n    \"targetingsConj\": \"AND\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps"
          },
          "response": []
        },
        {
          "name": "Create_ssp_exchange",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e22aed26-ca56-4c20-ae2f-340ac15b3c73",
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: SSP\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"EXCHANGE\");",
                  "});",
                  "",
                  "",
                  "//Set publisherId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"sspId\", jsonData.id);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "fbba3b57-ddc7-4599-85f6-879bd687277e",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "739b2cf5-3b5c-468e-a334-1cada8541c22",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Postman: SSP {{currentSprint}} {{startTimestamp}}\",\n    \"contacts\": {},\n    \"domain\": \"qa.com\",\n    \"paymentDetails\": \"\",\n    \"paymentTerm\": null,\n    \"sellerType\": \"PUBLISHER\",\n    \"status\": \"ACTIVE\",\n    \"type\": \"EXCHANGE\",\n    \"pricingStrategy\": \"FIXED_PRICE\",\n    \"targetingsConj\": \"AND\",\n\n     \"sellersJsonSettings\": \n    {\n        \"sellerType\": \"PUBLISHER\"\n    },\n    \"exchangeType\": \"RTB\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps"
          },
          "response": []
        },
        {
          "name": "Delete_ssp_exchange",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "f79a0cc7-64c6-4365-961f-3db507f3f44a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "286086e5-ca76-4398-bf9a-c1939cc4d5dc"
              }
            }
          ],
          "id": "18134b58-8cda-477c-a70c-810fbd9e6593",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{sspId}}"
          },
          "response": []
        },
        {
          "name": "Get_ssp_deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "10d33514-7fb4-43c4-94b5-0e01637a0374"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "f64cc42c-0993-4d4b-8799-9e85130d0aca"
              }
            }
          ],
          "id": "34cdaa48-8dfb-4d19-b94f-ead95c00aad0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{sspId}}"
          },
          "response": []
        },
        {
          "name": "Create_ssp_exchange_null_strategy",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "52af67f5-e0f3-47bb-ac1c-66c25c15a184",
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"pricingStrategy\");",
                  "    pm.expect(pm.response.text()).to.include(\"must not be null\");",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "8cbfe53e-036f-45f4-b798-7d9405a0abee",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "8c7c632c-5444-4654-ac62-d3eb9e1fa46e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Postman: Publisher {{currentSprint}} {{startTimestamp}}\",\n    \"contacts\": {},\n    \"domain\": \"qa.com\",\n    \"paymentDetails\": \"\",\n    \"paymentTerm\": null,\n    \"sellerType\": \"PUBLISHER\",\n    \"status\": \"ACTIVE\",\n    \"type\": \"EXCHANGE\",\n    \"pricingStrategy\": null,\n    \"targetingsConj\": \"AND\",\n\n     \"sellersJsonSettings\": \n    {\n        \"sellerType\": \"PUBLISHER\"\n    },\n    \"exchangeType\": \"RTB\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps"
          },
          "response": []
        }
      ],
      "id": "11f6695a-69e5-4aca-a943-d6e66d6df6cb"
    },
    {
      "name": "SiteApp (CRUD)",
      "item": [
        {
          "name": "Login_admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: token, refreshToken, role\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"token\");",
                  "    pm.expect(pm.response.text()).to.include(\"refreshToken\");",
                  "    pm.expect(pm.response.text()).to.include(\"permissions\");",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"token\", jsonData.token);"
                ],
                "type": "text/javascript",
                "id": "e4d70f64-8ed1-48a3-afb4-358b733cd250"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "//Save current time before start",
                  "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                ],
                "type": "text/javascript",
                "id": "012d86ad-0126-4a5e-8c2f-c2fe0012bd73"
              }
            }
          ],
          "id": "2be0053d-8fab-4858-9be2-d0820c3fdb31",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
          },
          "response": []
        },
        {
          "name": "Create_inventory",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: SiteApp\");  ",
                  "});",
                  "",
                  "//Set publisherId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"siteAppId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "0f550bc0-aff4-4a65-aacd-8b73eb09fd67"
              }
            }
          ],
          "id": "8063d7e8-01c7-401a-a747-ccf0f32e7c34",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Postman: SiteApp {{currentSprint}} {{startTimestamp}}\",\n    \"domain\": null,\n    \"ssp\": 1977267,\n    \"status\": \"ACTIVE\",\n    \"type\": \"CTV_OTT\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/inventories"
          },
          "response": []
        },
        {
          "name": "Get_inventory",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"siteAppId\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "fcb695dc-1148-467c-9b2e-fb107b1d3381"
              }
            }
          ],
          "id": "e6b9bd8f-dd23-4d8c-acb3-9ce8b4251909",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/inventories/{{siteAppId}}"
          },
          "response": []
        },
        {
          "name": "Update_inventory_type",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"siteAppId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"ACTIVE\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"DESKTOP_WEB\"); ",
                  "});"
                ],
                "type": "text/javascript",
                "id": "5f79a073-cd5a-4665-83c2-37f5c89c69e9"
              }
            }
          ],
          "id": "e1769328-6924-4422-8bdf-422ff4934074",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ssp\": 1977267,\n    \"name\": \"Postman: SiteApp {{currentSprint}} {{startTimestamp}}\",\n    \"type\": \"DESKTOP_WEB\",\n    \"domain\": null,\n    \"status\": \"ACTIVE\",\n    \"categories\": [],\n    \"blockedCategories\": [],\n    \"languages\": [],\n    \"group\": null,\n    \"dsps\": null,\n    \"thirdPartyId\": null,\n    \"sharedForAll\": false,\n    \"sharedSettings\": [],\n    \"appBundle\": null,\n    \"appStoreUrl\": null,\n    \"publisherInventories\": []\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/inventories/{{siteAppId}}"
          },
          "response": []
        },
        {
          "name": "Update_inventory_status_INACTIVE",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"siteAppId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"INACTIVE\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "f1f56f43-943e-4ccc-a109-c5f961d9901a"
              }
            }
          ],
          "id": "03a0b7e4-8672-4c55-9917-0d1d6db4db17",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ssp\": 1977267,\n    \"name\": \"Postman: SiteApp {{currentSprint}} {{startTimestamp}}\",\n    \"type\": \"DESKTOP_WEB\",\n    \"domain\": null,\n    \"status\": \"INACTIVE\",\n    \"categories\": [],\n    \"blockedCategories\": [],\n    \"languages\": [],\n    \"group\": null,\n    \"dsps\": null,\n    \"thirdPartyId\": null,\n    \"sharedForAll\": false,\n    \"sharedSettings\": [],\n    \"appBundle\": null,\n    \"appStoreUrl\": null,\n    \"publisherInventories\": []\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/inventories/{{siteAppId}}"
          },
          "response": []
        },
        {
          "name": "Delete_inventory",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "143d2a44-2745-4719-91dd-d7f6b717f39f"
              }
            }
          ],
          "id": "5e148957-bb35-4315-b4d9-ea844e6a3a1a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/inventories/{{siteAppId}}"
          },
          "response": []
        },
        {
          "name": "Get_inventory_deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "78a46780-28c1-42b5-ba75-e2ac2ef45a5a"
              }
            }
          ],
          "id": "fd8d3824-1205-47a0-8199-ac787d467f8d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/inventories/{{siteAppId}}"
          },
          "response": []
        },
        {
          "name": "Create_inventory_with_publisher_inventories",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3482e509-2d1e-47a8-929d-501eca4b4872",
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"publisherInventories\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"exchangeInventoryId\");",
                  "});",
                  "",
                  "//Set publisherId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"siteAppId\", jsonData.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "b1a1ad71-b012-4a92-9f13-e67e41a07ca9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "//What are publisher inventories \n//FAILD: Expectedto include 'publisherInventories', Site/app is still created\n//What are exchangeId\" and \"exchangeInventoryId\" in publisherInventories\n\n{\n    \"id\": null,\n    \"name\": \"Postman: SiteApp {{currentSprint}} {{startTimestamp}}\",\n    \"domain\": null,\n    \"languages\": [],\n    \"ssp\": 1977267,\n    \"publisherInventories\": [\n        {\n            \"exchangeId\": 70173,\n            \"exchangeInventoryId\": \"{{startTimestamp}}\"\n        }\n    ],\n    \"status\": \"INACTIVE\",\n    \"type\": \"CTV_OTT\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/inventories"
          },
          "response": []
        },
        {
          "name": "Delete_inventory",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "158a79af-de83-4dc9-8a07-be27ae8062f2"
              }
            }
          ],
          "id": "82b5ecff-1e20-4df6-8be7-17eb9e79167a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/inventories/{{siteAppId}}"
          },
          "response": []
        },
        {
          "name": "Create_inventory_invalid_type",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fe9acb90-2e4a-4a1d-bee7-3996771526df",
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Error message contains:\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"not one of the values accepted for Enum class: [DESKTOP_WEB, CTV_OTT]\");",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "9b638cf3-6b24-47b3-b1f0-b29095224ad3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Postman: SiteApp {{currentSprint}} {{startTimestamp}}\",\n    \"domain\": null,\n    \"ssp\": 1977267,\n    \"status\": \"ACTIVE\",\n    \"type\": \"some_invalid_type\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/inventories"
          },
          "response": []
        },
        {
          "name": "Update_inventory_without_id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a0c2ac2e-caf4-4b58-86b8-125c13f65f85",
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 500\"] = responseCode.code === 500;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "3c3b9548-5377-4370-8758-b64aa4851948",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "//do not see the purpose of having this test and why do we need to send appBundle for example\n{\n    \"ssp\": 1977267,\n    \"name\": \"Postman: SiteApp Sprint 8 2020-11-30T15:56:21.803Z\",\n    \"type\": \"DESKTOP_WEB\",\n    \"domain\": null,\n    \"status\": \"INACTIVE\",\n    \"categories\": [],\n    \"blockedCategories\": [],\n    \"languages\": [],\n    \"group\": null,\n    \"dsps\": null,\n    \"thirdPartyId\": null,\n    \"sharedForAll\": false,\n    \"sharedSettings\": [],\n    \"appBundle\": null,\n    \"appStoreUrl\": null,\n    \"publisherInventories\": []\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/inventories"
          },
          "response": []
        }
      ],
      "id": "d429bfab-57ad-4801-83d0-60ac410fe8de"
    },
    {
      "name": "AdUnit (CRUD)",
      "item": [
        {
          "name": "Login_admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//No error message",
                  "pm.test(\"No error message\", function () {",
                  "    pm.expect(pm.response.text()).to.not.include(\"Invalid email or password. Please, try again.\");",
                  "});",
                  "",
                  "//Content",
                  "pm.test(\"Contains: token, refreshToken, role\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"token\");",
                  "    pm.expect(pm.response.text()).to.include(\"refreshToken\");",
                  "    pm.expect(pm.response.text()).to.include(\"permissions\");",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"token\", jsonData.token);"
                ],
                "type": "text/javascript",
                "id": "96e9680a-6672-4077-a7a7-bf7ad6e4f49f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "//Save current time before start",
                  "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                ],
                "type": "text/javascript",
                "id": "8c02f85f-0966-4f2b-b5c7-4eb4124186de"
              }
            }
          ],
          "id": "a3f136e8-d4c2-424f-a997-b8f1fe68af56",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
          },
          "response": []
        },
        {
          "name": "Create_adunit_banner",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: BANNER AD Unit (Create)\");",
                  "});",
                  "",
                  "//Set adunitId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"adunitId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "a950891a-96c9-47d6-9d47-54ac39568daf"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "759c51f1-32ba-4540-906e-51932605ad44"
              }
            }
          ],
          "id": "281d72cc-425d-487e-9666-f9f76eadfaab",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: BANNER AD Unit (Create) {{currentSprint}} {{startTimestamp}}\",\n    \"inventory\": 161177,\n    \"attributes\": {\n        \"size\": {\n            \"width\": 88,\n            \"height\": 31\n        }\n    },\n    \"pricingStrategy\": \"FULL_PRICE\",\n    \"status\": \"ACTIVE\",\n    \"type\": \"BANNER\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits"
          },
          "response": []
        },
        {
          "name": "Get_adunit_banner",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//some test text",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: BANNER AD Unit (Create)\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "9a9cf09d-622b-4b7c-ab74-5801ef0e6a94"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "4f616799-4e65-4519-8750-4f20400401d7"
              }
            }
          ],
          "id": "858ed7db-1a94-4a06-a05c-7543d73dfe04",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits/{{adunitId}}"
          },
          "response": []
        },
        {
          "name": "Update_adunit_banner",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: BANNER AD Unit (Update)\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"ACTIVE\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "0b8885ac-a4e1-46b1-b3c3-84b64c7c4ab2"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "09856fd0-5e6c-432b-b976-1b3157b36469"
              }
            }
          ],
          "id": "8961487b-7daf-4404-bf7a-e76b9156205f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Postman: BANNER AD Unit (Update) {{currentSprint}} {{startTimestamp}}\",\n    \"adPod\": {\n        \"adPodCount\": null,\n        \"adPodDuration\": null,\n        \"adPodLayouts\": [],\n        \"adPodType\": \"NONE\",\n        \"fallbackMode\": false,\n        \"responseMode\": null,\n        \"serveIncomplete\": false\n    },\n    \"admType\": \"DIV\",\n    \"auctionModifier\": false,\n    \"battrs\": [],\n    \"bidfloor\": null,\n    \"pricingStrategy\": \"FULL_PRICE\",\n    \"categories\": [\n        \"IAB1\"\n    ],\n    \"dealStrategy\": \"DEFAULT\",\n    \"deals\": [],\n    \"dsps\": null,\n    \"fixedPrice\": false,\n    \"inventory\": 161177,\n    \"keywords\": null,\n    \"margin\": null,\n    \"maxBitrate\": null,\n    \"mimes\": [],\n    \"minBitrate\": null,\n    \"overrideCategories\": true,\n    \"overrideKeywords\": false,\n    \"overrideSize\": true,\n    \"passbackAdTag\": null,\n    \"playbackMethod\": null,\n    \"position\": \"HEADER\",\n    \"privateAuction\": false,\n    \"sharedForAll\": false,\n    \"sharedSettings\": [],\n    \"attributes\": {\n        \"size\": {\n            \"width\": 88,\n            \"height\": 31\n        }\n    },\n    \"skipDelay\": null,\n    \"skippable\": false,\n    \"ssp\": 78744,\n    \"startDelay\": null,\n    \"status\": \"ACTIVE\",\n    \"thirdPartyIds\": [],\n    \"vastTagParams\": [],\n    \"vastTagSecured\": false,\n    \"type\": \"BANNER\",\n    \"videoMaxDuration\": null,\n    \"videoMinDuration\": null,\n    \"inventoryType\": null\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits/{{adunitId}}"
          },
          "response": []
        },
        {
          "name": "Update_adunit_banner_status_INACTIVE",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: BANNER AD Unit (Update)\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"INACTIVE\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "4c6b1533-d027-42ae-a50d-eb346a44958b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "5abac8b9-d1e5-4ad4-a98c-d89eec522986"
              }
            }
          ],
          "id": "ba790782-38c7-4aab-83b3-cbaefdc6a30c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Postman: BANNER AD Unit (Update) {{currentSprint}} {{startTimestamp}}\",\n    \"adPod\": {\n        \"adPodCount\": null,\n        \"adPodDuration\": null,\n        \"adPodLayouts\": [],\n        \"adPodType\": \"NONE\",\n        \"fallbackMode\": false,\n        \"responseMode\": null,\n        \"serveIncomplete\": false\n    },\n    \"pricingStrategy\": \"FULL_PRICE\",\n    \"admType\": \"DIV\",\n    \"auctionModifier\": false,\n    \"battrs\": [],\n    \"bidfloor\": null,\n    \"categories\": [\n        \"IAB1\"\n    ],\n    \"dealStrategy\": \"DEFAULT\",\n    \"deals\": [],\n    \"dsps\": null,\n    \"fixedPrice\": false,\n    \"inventory\": 161177,\n    \"keywords\": null,\n    \"margin\": null,\n    \"maxBitrate\": null,\n    \"mimes\": [],\n    \"minBitrate\": null,\n    \"overrideCategories\": true,\n    \"overrideKeywords\": false,\n    \"overrideSize\": true,\n    \"passbackAdTag\": null,\n    \"playbackMethod\": null,\n    \"position\": \"HEADER\",\n    \"privateAuction\": false,\n    \"sharedForAll\": false,\n    \"sharedSettings\": [],\n    \"attributes\": {\n        \"size\": {\n            \"width\": 88,\n            \"height\": 31\n        }\n    },\n    \"skipDelay\": null,\n    \"skippable\": false,\n    \"ssp\": 78744,\n    \"startDelay\": null,\n    \"status\": \"INACTIVE\",\n    \"thirdPartyIds\": [],\n    \"vastTagParams\": [],\n    \"vastTagSecured\": false,\n    \"type\": \"BANNER\",\n    \"videoMaxDuration\": null,\n    \"videoMinDuration\": null,\n    \"inventoryType\": null\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits/{{adunitId}}"
          },
          "response": []
        },
        {
          "name": "Delete_adunit_banner",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "69b2b384-d1f1-4ed1-bc49-b903990fd41a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "ec819f88-dd73-459d-855b-48df94f70794"
              }
            }
          ],
          "id": "b23f73a9-57a6-4c23-806a-ff144a640bbe",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits/{{adunitId}}"
          },
          "response": []
        },
        {
          "name": "Get_adunit_banner_deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "bc3c4469-fb04-4d23-9769-4f1043377115"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "ff448908-e07c-489c-9619-e0e53b9f2df6"
              }
            }
          ],
          "id": "a0c1a1a1-c888-43d8-b0f2-d8265d37318b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits/{{adunitId}}"
          },
          "response": []
        },
        {
          "name": "Create_adunit_video",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: VIDEO AD Unit (Create)\");",
                  "});",
                  "",
                  "//Set adunitId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"adunitId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "a4ff7d3a-30b3-450d-ab7e-75cf3b61c847"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "4e839975-cc7e-464c-befb-501afbdd900a"
              }
            }
          ],
          "id": "6f1e016d-ffc0-46e0-bd6c-1a62dd28b0f4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: VIDEO AD Unit (Create) {{currentSprint}} {{startTimestamp}}\",\n    \"inventory\": 161177,\n    \"status\": \"INACTIVE\",\n    \"type\": \"VIDEO\",\n    \"pricingStrategy\": \"FULL_PRICE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits"
          },
          "response": []
        },
        {
          "name": "Get_adunit_video",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: VIDEO AD Unit (Create)\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "9fdd616b-b391-4e02-80bb-e1dc44847758"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "e4639d08-fed4-4414-acdd-43fee57aec02"
              }
            }
          ],
          "id": "52518b5e-63d2-45fa-8b41-589ac35f3f53",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits/{{adunitId}}"
          },
          "response": []
        },
        {
          "name": "Update_adunit_video",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: VIDEO AD Unit (Update)\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "0287d4f6-750e-4d8f-87d3-615dddb13a02"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "baaf87fb-1adb-4d35-a5f3-5f69dde687d0"
              }
            }
          ],
          "id": "9d15ce47-b504-4a20-b43e-bcc5f2fb9933",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: VIDEO AD Unit (Update) {{currentSprint}} {{startTimestamp}}\",\n    \"adPod\": {\n        \"adPodCount\": null,\n        \"adPodDuration\": null,\n        \"adPodLayouts\": [],\n        \"adPodType\": \"NONE\",\n        \"fallbackMode\": false,\n        \"responseMode\": null,\n        \"serveIncomplete\": false\n    },\n    \"pricingStrategy\": \"FULL_PRICE\",\n    \"admType\": null,\n    \"auctionModifier\": false,\n    \"battrs\": [],\n    \"bidfloor\": null,\n    \"categories\": [],\n    \"dealStrategy\": \"DEFAULT\",\n    \"deals\": [],\n    \"dsps\": null,\n    \"fixedPrice\": false,\n    \"inventory\": 161177,\n    \"keywords\": null,\n    \"margin\": null,\n    \"maxBitrate\": null,\n    \"mimes\": [\n        \"video/mp4\"\n    ],\n    \"minBitrate\": null,\n    \"overrideCategories\": true,\n    \"overrideKeywords\": false,\n    \"overrideSize\": true,\n    \"passbackAdTag\": null,\n    \"playbackMethod\": null,\n    \"position\": null,\n    \"privateAuction\": false,\n    \"sharedForAll\": false,\n    \"sharedSettings\": [],\n    \"size\": null,\n    \"skipDelay\": null,\n    \"skippable\": false,\n    \"ssp\": 78744,\n    \"startDelay\": null,\n    \"status\": \"INACTIVE\",\n    \"thirdPartyIds\": [],\n    \"vastTagParams\": [],\n    \"vastTagSecured\": false,\n    \"type\": \"VIDEO\",\n    \"videoMaxDuration\": null,\n    \"videoMinDuration\": null,\n    \"inventoryType\": null\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits/{{adunitId}}"
          },
          "response": []
        },
        {
          "name": "Update_adunit_video_status_INACTIVE",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: VIDEO AD Unit (Update)\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "bbf6f6e5-22df-4967-b0e3-ab6d6590988a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "832f34f6-edf3-4eb6-9236-9f13fe2ade42"
              }
            }
          ],
          "id": "013d5626-c6c9-461c-914c-00433ba2e9f7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: VIDEO AD Unit (Update) {{currentSprint}} {{startTimestamp}}\",\n    \"adPod\": {\n        \"adPodCount\": null,\n        \"adPodDuration\": null,\n        \"adPodLayouts\": [],\n        \"adPodType\": \"NONE\",\n        \"fallbackMode\": false,\n        \"responseMode\": null,\n        \"serveIncomplete\": false\n    },\n    \"admType\": null,\n    \"auctionModifier\": false,\n    \"battrs\": [],\n    \"bidfloor\": null,\n    \"categories\": [],\n    \"dealStrategy\": \"DEFAULT\",\n    \"deals\": [],\n    \"dsps\": null,\n    \"pricingStrategy\": \"FULL_PRICE\",\n    \"fixedPrice\": false,\n    \"inventory\": 161177,\n    \"keywords\": null,\n    \"margin\": null,\n    \"maxBitrate\": null,\n    \"mimes\": [\n        \"video/mp4\"\n    ],\n    \"minBitrate\": null,\n    \"overrideCategories\": true,\n    \"overrideKeywords\": false,\n    \"overrideSize\": true,\n    \"passbackAdTag\": null,\n    \"playbackMethod\": null,\n    \"position\": null,\n    \"privateAuction\": false,\n    \"sharedForAll\": false,\n    \"sharedSettings\": [],\n    \"size\": null,\n    \"skipDelay\": null,\n    \"skippable\": false,\n    \"ssp\": 78744,\n    \"startDelay\": null,\n    \"status\": \"INACTIVE\",\n    \"thirdPartyIds\": [],\n    \"vastTagParams\": [],\n    \"vastTagSecured\": false,\n    \"type\": \"VIDEO\",\n    \"videoMaxDuration\": null,\n    \"videoMinDuration\": null,\n    \"inventoryType\": null\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits/{{adunitId}}"
          },
          "response": []
        },
        {
          "name": "Delete_adunit_video",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "d8a166c4-a21b-432e-bac2-5480ce0c0475"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "236ccfa2-2fcf-49a2-92c0-c5572d5dc19b"
              }
            }
          ],
          "id": "ae90c53d-12d8-4626-ad13-7f1bf2888a9c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits/{{adunitId}}"
          },
          "response": []
        },
        {
          "name": "Get_adunit_video_deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "19488150-f86d-40e9-b642-f32bf3638d9c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "e8f6003e-751a-49ad-a3de-53f0da76535e"
              }
            }
          ],
          "id": "6089e659-1ff1-4c7d-843e-1a53ef89caba",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits/{{adunitId}}"
          },
          "response": []
        },
        {
          "name": "Create_adunit_video_inventory_is_required",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: error message\", function () {",
                  "   var jsonData = JSON.parse(responseBody);",
                  "   pm.expect(jsonData.message).to.eql(\"Resource is not found\");",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "17dfa075-9fef-4cf0-afd1-b02043d0d61f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "37574f65-c0bd-4f3e-88d2-1b578c7152a1"
              }
            }
          ],
          "id": "f6437d17-d205-44d3-b75a-7c806554f3f3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: VIDEO AD Unit (Create) {{currentSprint}} {{startTimestamp}}\",\n    \"status\": \"INACTIVE\",\n    \"type\": \"VIDEO\",\n    \"pricingStrategy\": \"FULL_PRICE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits"
          },
          "response": []
        },
        {
          "name": "Create_adunit_video_type_is_required",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: erroe\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"must not be null\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "556423cd-c1b4-4126-ac65-7228f08c9964"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "ed596235-6550-4860-a9aa-c2478585faea"
              }
            }
          ],
          "id": "4b1a48f3-76bd-4b9d-b27d-cf93e32446b6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: VIDEO AD Unit (Create) {{currentSprint}} {{startTimestamp}}\",\n    \"inventory\": 161177,\n    \"status\": \"INACTIVE\",\n    \"pricingStrategy\": \"FULL_PRICE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits"
          },
          "response": []
        },
        {
          "name": "Update_adunit_video_nonexistent_id",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "886a2122-feaf-45dd-a47b-df9794054108"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "2631867c-90e1-4981-9331-dbb6e79cfdce"
              }
            }
          ],
          "id": "b72e5560-2c1e-476b-94a1-033b7d1d3e8a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: VIDEO AD Unit (Update) {{currentSprint}} {{startTimestamp}}\",\n    \"adPod\": {\n        \"adPodCount\": null,\n        \"adPodDuration\": null,\n        \"adPodLayouts\": [],\n        \"adPodType\": \"NONE\",\n        \"fallbackMode\": false,\n        \"responseMode\": null,\n        \"serveIncomplete\": false\n    },\n    \"pricingStrategy\": \"FULL_PRICE\",\n    \"admType\": null,\n    \"auctionModifier\": false,\n    \"battrs\": [],\n    \"bidfloor\": null,\n    \"categories\": [],\n    \"dealStrategy\": \"DEFAULT\",\n    \"deals\": [],\n    \"dsps\": null,\n    \"fixedPrice\": false,\n    \"inventory\": 161177,\n    \"keywords\": null,\n    \"margin\": null,\n    \"maxBitrate\": null,\n    \"mimes\": [\n        \"video/mp4\"\n    ],\n    \"minBitrate\": null,\n    \"overrideCategories\": true,\n    \"overrideKeywords\": false,\n    \"overrideSize\": true,\n    \"passbackAdTag\": null,\n    \"playbackMethod\": null,\n    \"position\": null,\n    \"privateAuction\": false,\n    \"sharedForAll\": false,\n    \"sharedSettings\": [],\n    \"size\": null,\n    \"skipDelay\": null,\n    \"skippable\": false,\n    \"ssp\": 78744,\n    \"startDelay\": null,\n    \"status\": \"INACTIVE\",\n    \"thirdPartyIds\": [],\n    \"vastTagParams\": [],\n    \"vastTagSecured\": false,\n    \"type\": \"VIDEO\",\n    \"videoMaxDuration\": null,\n    \"videoMinDuration\": null,\n    \"inventoryType\": null\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adunits/123"
          },
          "response": []
        }
      ],
      "id": "132a23ae-df5c-4982-917a-08fea3f4d663"
    },
    {
      "name": "AdPod (CRUD)",
      "item": [
        {
          "name": "Login_admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//No error message",
                  "pm.test(\"No error message\", function () {",
                  "    pm.expect(pm.response.text()).to.not.include(\"Invalid email or password. Please, try again.\");",
                  "});",
                  "",
                  "//Content",
                  "pm.test(\"Contains: token, refreshToken, role\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"token\");",
                  "    pm.expect(pm.response.text()).to.include(\"refreshToken\");",
                  "    pm.expect(pm.response.text()).to.include(\"permissions\");",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"token\", jsonData.token);"
                ],
                "type": "text/javascript",
                "id": "b57b4951-3f77-4949-ad7b-16b162e40958"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "//Save current time before start",
                  "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                ],
                "type": "text/javascript",
                "id": "effaee79-f2e6-4b0c-bd98-63bc2665f8d0"
              }
            }
          ],
          "id": "a71c649e-dbb5-4a43-a34e-ce4cf9d1bf57",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
          },
          "response": []
        },
        {
          "name": "Create_ad_pod_layout_immediate",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Ad pod layout\");",
                  "});",
                  "",
                  "//Set publisherId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"adPodId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "668de4f2-00ea-4212-8969-4c1ca8ac8915"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "860c9840-b04a-43a4-ace9-3712c397abf7"
              }
            }
          ],
          "id": "d866b915-e7d7-4a58-a3d9-805158c2e7cb",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: Ad pod layout {{currentSprint}} {{startTimestamp}}\",\n    \"status\": \"ACTIVE\",\n    \"slots\": [\n        {\n            \"duration\": 15,\n            \"type\": \"IMMEDIATE\"\n        },\n        {\n            \"duration\": null,\n            \"type\": \"IMMEDIATE\"\n        }\n    ],\n    \"type\": \"REGULAR_SLOTS_SMARTPOD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts"
          },
          "response": []
        },
        {
          "name": "Get_ad_pod_layout_immediate",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Ad pod layout\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "72781dff-a4bd-42ca-895d-23fc25833048"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "fe0fb4ff-014c-4cb7-a9a8-13717cd17662"
              }
            }
          ],
          "id": "567fc497-4351-4eaa-845f-ccb8858989df",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId}}"
          },
          "response": []
        },
        {
          "name": "Update_ad_pod_layout_slot_type",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: erroe\", function () {",
                  "   var jsonData = JSON.parse(responseBody);",
                  "   pm.expect(jsonData.slots[0].type).to.equal(\"INTRO\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "3063c576-a15c-41f1-9dc4-da7a8da94771"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "bbc9c2ff-4987-4e27-b1b8-ad4bd783b46f"
              }
            }
          ],
          "id": "0dc28170-f78a-4067-8484-094807abe448",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test ad pod\",\n    \"status\": \"ACTIVE\",\n    \"slots\": [\n        {\n            \"duration\": null,\n            \"type\": \"INTRO\"\n        },\n        {\n            \"duration\": null,\n            \"type\": \"IMMEDIATE\"\n        }\n    ],\n    \"type\": \"REGULAR_SLOTS_SMARTPOD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId}}"
          },
          "response": []
        },
        {
          "name": "Update_ad_pod_layout_slot_intro_immediate_outro",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    pm.expect(jsonData.slots).to.have.lengthOf(3);",
                  "});"
                ],
                "type": "text/javascript",
                "id": "5815cbcb-b0e2-4c4b-8e78-513f7aad1b44"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "822db624-95c6-4b1b-8811-06238d46a89c"
              }
            }
          ],
          "id": "8506df38-4a9d-4454-8a48-2cbdd9348f00",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Postman: Ad pod layout {{currentSprint}} {{startTimestamp}}\",\n    \"status\": \"INACTIVE\",\n    \"slots\": [\n        {\n            \"duration\": null,\n            \"type\": \"INTRO\"\n        },\n        {\n            \"duration\": null,\n            \"type\": \"IMMEDIATE\"\n        },\n        {\n            \"duration\": 15,\n            \"type\": \"OUTRO\"\n        }\n    ],\n    \"type\": \"REGULAR_SLOTS_SMARTPOD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId}}"
          },
          "response": []
        },
        {
          "name": "Update_ad_pod_layout_status_INACTIVE",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    pm.expect(jsonData.slots).to.have.lengthOf(3);",
                  "});"
                ],
                "type": "text/javascript",
                "id": "d37e3f6e-9891-4e45-999e-db18dcf770a7"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "ce510dfa-7ae8-4150-8b4a-800abb49e8fe"
              }
            }
          ],
          "id": "f04eee28-f039-429d-a520-17c85d6be557",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Postman: Ad pod layout {{currentSprint}} {{startTimestamp}}\",\n    \"status\": \"INACTIVE\",\n    \"slots\": [\n        {\n            \"duration\": null,\n            \"type\": \"INTRO\"\n        },\n        {\n            \"duration\": null,\n            \"type\": \"IMMEDIATE\"\n        },\n        {\n            \"duration\": 15,\n            \"type\": \"OUTRO\"\n        }\n    ],\n    \"type\": \"REGULAR_SLOTS_SMARTPOD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId}}"
          },
          "response": []
        },
        {
          "name": "Delete_ad_pod_layout_deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "09795428-fdaf-4b97-a3ec-6e4d0e38e625"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "b14649f3-2515-4a67-887f-c8dd64882441"
              }
            }
          ],
          "id": "c7b15a2e-e744-440e-97f9-d3f40854b7b0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId}}"
          },
          "response": []
        },
        {
          "name": "Get_ad_pod_layout_deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "f7bcdace-19be-4c23-9f96-5512c41468d5"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "de78780b-a31b-4757-ae18-71d4fbe1bf5a"
              }
            }
          ],
          "id": "2c3204cc-b521-454d-8406-2b7ec752cb0c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId}}"
          },
          "response": []
        },
        {
          "name": "Create_ad_pod_layout_slot_type_empty",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: erroe\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"value not one of declared Enum instance names: [BOTTOM_LONG, FIT, LEFT_SHORT, CENTER, LEFT, L_FRAME, OUTRO, INTRO, IMMEDIATE, BOTTOM, OVERLAY]\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "751de8ff-8d9e-4f64-98e8-8f7ea2deb6f0"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "a1bafe3c-bb47-49f7-a9b2-6425cff5ba4d"
              }
            }
          ],
          "id": "bb3731c5-ba33-4077-bd82-aa5bc92b7e4a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test ad pod\",\n    \"status\": \"INACTIVE\",\n    \"slots\": [\n        {\n            \"duration\": null,\n            \"type\": \"\"\n        },\n        {\n            \"duration\": null,\n            \"type\": \"IMMEDIATE\"\n        }\n    ],\n    \"type\": \"REGULAR_SLOTS_SMARTPOD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts"
          },
          "response": []
        },
        {
          "name": "Create_ad_pod_layout_slot_type_is_required",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: erroe\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"must not be null\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "235f6a4e-0d4a-4e9d-b82c-3da0d7b8cb53"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "536bd7f1-f902-4b91-b109-022b181461b8"
              }
            }
          ],
          "id": "e2e33345-82a1-4d9b-be70-dc30a85bca48",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test ad pod\",\n    \"status\": \"INACTIVE\",\n    \"slots\": [\n        {\n            \"duration\": null,\n            \"type\": null\n        },\n        {\n            \"duration\": null,\n            \"type\": \"IMMEDIATE\"\n        }\n    ],\n    \"type\": \"REGULAR_SLOTS_SMARTPOD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts"
          },
          "response": []
        },
        {
          "name": "Create_ad_pod_layout_slot_type_nonexistent",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: erroe\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"value not one of declared Enum instance names: [BOTTOM_LONG, FIT, LEFT_SHORT, CENTER, LEFT, L_FRAME, OUTRO, INTRO, IMMEDIATE, BOTTOM, OVERLAY]\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "2af87e09-fa7b-4e70-80b7-291652baa0da"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "222217fd-46b5-44fe-8298-394c3fa568af"
              }
            }
          ],
          "id": "a3920558-7eb8-490e-95b9-bdf6c9cfa830",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test ad pod\",\n    \"status\": \"INACTIVE\",\n    \"slots\": [\n        {\n            \"duration\": null,\n            \"type\": \"Nonexistent\"\n        },\n        {\n            \"duration\": null,\n            \"type\": \"IMMEDIATE\"\n        }\n    ],\n    \"type\": \"REGULAR_SLOTS_SMARTPOD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts"
          },
          "response": []
        },
        {
          "name": "Create_ad_pod_layout_slot_duration_nonexistent",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: erroe\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"not a valid Integer value\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "3b45da40-9b10-4678-8e19-3dd1d67d7875"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "e4d7a823-8e19-4e01-aa1a-4960cb40cfb9"
              }
            }
          ],
          "id": "bc3ab829-cd81-49a0-90dc-6dd1ceb31202",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test ad pod\",\n    \"status\": \"INACTIVE\",\n    \"slots\": [\n        {\n            \"duration\": \"duration\",\n            \"type\": \"IMMEDIATE\"\n        },\n        {\n            \"duration\": null,\n            \"type\": \"IMMEDIATE\"\n        }\n    ],\n    \"type\": \"REGULAR_SLOTS_SMARTPOD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts"
          },
          "response": []
        },
        {
          "name": "Update_ad_pod_layout_nonexistent",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: erroe\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"Resource is not found\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "f1b6f832-57e0-4004-8aaf-abb41f16f81a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "fae21e8e-985d-4410-a114-6e558555de00"
              }
            }
          ],
          "id": "2abdc0df-b476-4114-8994-d013e02b0d59",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test ad pod\",\n    \"status\": \"INACTIVE\",\n    \"slots\": [\n        {\n            \"duration\": null,\n            \"type\": \"INTRO\"\n        },\n        {\n            \"duration\": null,\n            \"type\": \"IMMEDIATE\"\n        }\n    ],\n    \"type\": \"REGULAR_SLOTS_SMARTPOD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/123"
          },
          "response": []
        }
      ],
      "id": "9ed8404c-7ed3-4d44-9aed-4b900e236032"
    },
    {
      "name": "Advertiser (CRUD)",
      "item": [
        {
          "name": "Login_admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//No error message",
                  "pm.test(\"No error message\", function () {",
                  "    pm.expect(pm.response.text()).to.not.include(\"Invalid email or password. Please, try again.\");",
                  "});",
                  "",
                  "//Content",
                  "pm.test(\"Contains: token, refreshToken, role\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"token\");",
                  "    pm.expect(pm.response.text()).to.include(\"refreshToken\");",
                  "    pm.expect(pm.response.text()).to.include(\"permissions\");",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"token\", jsonData.token);"
                ],
                "type": "text/javascript",
                "id": "40e2bbc4-9648-4f29-9da6-62719f5950ec"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "//Save current time before start",
                  "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                ],
                "type": "text/javascript",
                "id": "0e6c9e6f-7cd1-440b-9ff6-714ffb49ea5c"
              }
            }
          ],
          "id": "991d06f5-fea1-41ac-ab8e-0607fc47543f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
          },
          "response": []
        },
        {
          "name": "Create_advertiser",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Advertiser\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"ACTIVE\");",
                  "});",
                  "",
                  "//Set publisherId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"advertiserId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "ad8ea2fa-924d-47ea-99ae-8f1ace50f587"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "f92073c8-e662-409e-8a68-905e4786ae11"
              }
            }
          ],
          "id": "159b917e-3e3c-4b5f-b5dc-0c1f75169a29",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: Advertiser {{currentSprint}} {{startTimestamp}}\",\n    \"balance\": 0,\n    \"contacts\": {\n        \"country\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"responsiblePerson\": null,\n        \"skype\": null\n    },\n    \"domain\": \"qa.com\",\n    \"domains\": null,\n    \"ssps\": null,\n    \"status\": \"ACTIVE\",\n    \"campaigns\": 0,\n    \"creatives\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers"
          },
          "response": []
        },
        {
          "name": "Update_advertiser",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Advertiser\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"INACTIVE\");",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"advertiserId\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "d4e7b3c4-8466-42da-92dd-296e00767e4d"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "031595ee-26d8-419b-9670-4d8963c16798"
              }
            }
          ],
          "id": "e26462c5-8e92-436e-bcde-7ff459982687",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: Advertiser {{currentSprint}} {{startTimestamp}}\",\n    \"balance\": 0,\n    \"contacts\": {\n        \"country\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"responsiblePerson\": null,\n        \"skype\": null\n    },\n    \"domain\": \"qa.com\",\n    \"domains\": null,\n    \"ssps\": null,\n    \"status\": \"INACTIVE\",\n    \"campaigns\": 0,\n    \"creatives\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/{{advertiserId}}"
          },
          "response": []
        },
        {
          "name": "Delete_advertiser",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "994909ee-7968-46e4-a2c5-09d9301b41d7"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "ba34c0c2-6642-4028-b075-1f6e179f4491"
              }
            }
          ],
          "id": "944ae953-9bf9-46ab-ac42-cb1df2a081bf",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/{{advertiserId}}"
          },
          "response": []
        },
        {
          "name": "Get_advertiser_deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "d6d99751-e636-4c20-8964-c33544cf4611"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "1c14ad65-b3c9-47db-9a46-fe19632b33a7"
              }
            }
          ],
          "id": "897ccb0f-baec-41cb-8df2-f2b2d5f98ff1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/{{advertiserId}}"
          },
          "response": []
        },
        {
          "name": "Create_advertiser_missed_contacts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 500\"] = responseCode.code === 500;"
                ],
                "type": "text/javascript",
                "id": "239ec4aa-47a2-4d5c-9876-9cc7d0e90717"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "321214a3-8835-4d95-96d3-e75c97fc0b93"
              }
            }
          ],
          "id": "9d450d9f-4896-49f5-8f75-e6bd43efdc7b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: Advertiser {{currentSprint}} {{startTimestamp}}\",\n    \"balance\": 0,\n    \"domain\": \"qa.com\",\n    \"domains\": null,\n    \"ssps\": null,\n    \"status\": \"INACTIVE\",\n    \"campaigns\": 0,\n    \"creatives\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers"
          },
          "response": []
        },
        {
          "name": "Create_advertiser_null_domain",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: error message\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"domain\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"must not be null\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "c75c5a43-3fcb-42ef-8b2f-6c00d9f09982"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "58f24c9b-4e19-4a3a-8460-edea206fa168"
              }
            }
          ],
          "id": "545589c4-140d-4a43-8be0-97cd82c2cbcd",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: Advertiser {{currentSprint}} {{startTimestamp}}\",\n    \"balance\": 0,\n    \"contacts\": {\n        \"country\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"responsiblePerson\": null,\n        \"skype\": null\n    },\n    \"domain\": null,\n    \"domains\": null,\n    \"ssps\": null,\n    \"status\": \"ACTIVE\",\n    \"campaigns\": 0,\n    \"creatives\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers"
          },
          "response": []
        },
        {
          "name": "Create_advertiser_null_name",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: error message\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"must not be null\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "c463945f-5c94-4885-9d6c-44ffe016af65"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "4e6eb31c-7a67-4803-a3bb-56ac5e5143bc"
              }
            }
          ],
          "id": "542849d5-f4cf-4ed4-89c0-de9ba971cf0e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": null,\n    \"balance\": 0,\n    \"contacts\": {\n        \"country\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"responsiblePerson\": null,\n        \"skype\": null\n    },\n    \"domain\": \"qa.com\",\n    \"domains\": null,\n    \"ssps\": null,\n    \"status\": \"ACTIVE\",\n    \"campaigns\": 0,\n    \"creatives\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers"
          },
          "response": []
        },
        {
          "name": "Create_advertiser_nonexistent_status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: error message\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"value not one of declared Enum instance names: [INACTIVE, ACTIVE]\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "092424b4-88b6-4d7c-ae69-1fcff5ba7701"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "7b1d152c-2e09-48fc-870e-362b7231a4bb"
              }
            }
          ],
          "id": "2f38c154-63e7-4cd7-b8a3-9e66a8178e83",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: Advertiser {{currentSprint}} {{startTimestamp}}\",\n    \"balance\": 0,\n    \"contacts\": {\n        \"country\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"responsiblePerson\": null,\n        \"skype\": null\n    },\n    \"domain\": null,\n    \"domains\": null,\n    \"ssps\": null,\n    \"status\": \"INVALID\",\n    \"campaigns\": 0,\n    \"creatives\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers"
          },
          "response": []
        },
        {
          "name": "Update_advertiser_nonexistent_id",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "f703956d-8cd0-41c9-9f43-9345c66fcf2c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "746270a7-ead3-43a3-a586-0a62016d9e5d"
              }
            }
          ],
          "id": "a61560b7-b4b7-4777-bdcb-40936ed71479",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: Advertiser {{currentSprint}} {{startTimestamp}}\",\n    \"balance\": 0,\n    \"contacts\": {\n        \"country\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"responsiblePerson\": null,\n        \"skype\": null\n    },\n    \"domain\": \"qa.com\",\n    \"domains\": null,\n    \"ssps\": null,\n    \"status\": \"INACTIVE\",\n    \"campaigns\": 0,\n    \"creatives\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/12"
          },
          "response": []
        },
        {
          "name": "Delete_advertiser_nonexistent_id",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "668f4777-d39c-41b4-a6ad-6fd76123163a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "83c62993-53a5-4dee-bcc3-926161706bfd"
              }
            }
          ],
          "id": "be56d1fd-bd10-4232-8872-192ba1a5420b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/12"
          },
          "response": []
        }
      ],
      "id": "809094eb-0442-4f65-b686-c5536b494e04"
    },
    {
      "name": "Campaign (CRUD)",
      "item": [
        {
          "name": "Login_admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"token\", jsonData.token);"
                ],
                "type": "text/javascript",
                "id": "53a57b34-ea68-4ece-8bcb-407d0e369e2f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "//Save current time before start",
                  "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                ],
                "type": "text/javascript",
                "id": "737f3204-597d-4eb5-995e-d2462871e21e"
              }
            }
          ],
          "id": "b0b7fd31-9310-4fc9-840b-4a60bc8ce563",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
          },
          "response": []
        },
        {
          "name": "Create_campaign_origin_media",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: QA Campaign\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"delivery\\\":\\\"ASAP\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"VIDEO\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"APPROVED\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"systemType\\\":\\\"ORIGIN_MEDIA\");",
                  "});",
                  "",
                  "//Set advertiserId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"campaignId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "6e8770c3-f7d0-46da-9869-9efc2d22f19a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "ee903e9a-21c6-4674-97d8-5065c856e350"
              }
            }
          ],
          "id": "e3e4cd50-4b1e-4e92-9167-59142e32f559",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"24000\",\n    \"cpm\": \"2\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n        1368420,\n        1368372\n    ],\n    \"deals\": [],\n    \"delivery\": \"ASAP\",\n    \"dspMargin\": null,\n    \"end\": \"{{startTimestamp}}\",\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": false,\n    \"start\": null,\n    \"status\": \"APPROVED\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns"
          },
          "response": []
        },
        {
          "name": "Get_campaign_origin_media",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: QA Campaign\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"delivery\\\":\\\"ASAP\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"VIDEO\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"APPROVED\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"systemType\\\":\\\"ORIGIN_MEDIA\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "daf307af-4bbc-4fcc-956b-2d38cf1f2a81"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "5a540f68-bcaf-4c1e-b5dd-cf4e11154df8"
              }
            }
          ],
          "id": "4086c2a0-e2bb-49a0-a67e-1096fdb5de8d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns/{{campaignId}}"
          },
          "response": []
        },
        {
          "name": "Update_campaign_delivery",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: QA Campaign\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"delivery\\\":\\\"SMOOTH\");",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"campaignId\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "160a0dd5-452a-4849-b5a5-89a66389b362"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "c5c91b6d-f95b-4c50-99cb-2d36f3ec57ed"
              }
            }
          ],
          "id": "68f8bc90-1e6a-49fa-8d21-22b094aa85d4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"24000\",\n    \"cpm\": \"2\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n        1368420,\n        1368372\n    ],\n    \"deals\": [],\n    \"delivery\": \"SMOOTH\",\n    \"dspMargin\": null,\n    \"end\": \"{{startTimestamp}}\",\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": true,\n    \"start\": null,\n    \"status\": \"RUNNING\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns/{{campaignId}}"
          },
          "response": []
        },
        {
          "name": "Delete_campaign_origin_media",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "0ed03a31-4404-4b09-8a79-5ff4a2dea015"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "aba4c6ef-2d90-41b3-bd60-f6cdb56c3582"
              }
            }
          ],
          "id": "ff0dad43-0d4e-4c42-ba16-4256e95047ed",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns/{{campaignId}}"
          },
          "response": []
        },
        {
          "name": "Get_campaign_deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "7e3fbf74-048e-45a2-8bd0-30bb908c8f42"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "f8541cb5-b3c5-4b0d-aebc-d0ab38b41522"
              }
            }
          ],
          "id": "f6531864-dd44-4ef6-9830-611bb9f8aa9b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"230\",\n    \"cpm\": \"24000\",\n    \"creativeRotationScriptId\": null,\n    \"creatives\": [\n        1961253\n    ],\n    \"deals\": [],\n    \"delivery\": \"ASAP\",\n    \"dspMargin\": null,\n    \"end\": null,\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": false,\n    \"start\": null,\n    \"status\": \"APPROVED\",\n    \"systemType\": \"AUDIENCE\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns/{{campaignId}}"
          },
          "response": []
        },
        {
          "name": "Update_campaign_nonexistent_deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "5fe01627-a048-495b-81ea-73b0019f7630"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "24d3eb3c-e312-4765-8162-fe64028413e2"
              }
            }
          ],
          "id": "d8de6ea9-7498-4847-ac01-63ca0eb3c9d0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"24000\",\n    \"cpm\": \"2\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n        1368420,\n        1368372\n    ],\n    \"deals\": [],\n    \"delivery\": \"SMOOTH\",\n    \"dspMargin\": null,\n    \"end\": \"{{startTimestamp}}\",\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": true,\n    \"start\": null,\n    \"status\": \"RUNNING\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns/{{campaignId}}"
          },
          "response": []
        },
        {
          "name": "Create_campaign_add_targeting",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"targetings\\\":[107]\");",
                  "});",
                  "",
                  "//Set advertiserId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"campaignId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "37df9af3-2410-4dc9-a39c-d80f3e2abd94"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "cf2fd75e-2471-4126-9ce7-bf3bcab9c7bb"
              }
            }
          ],
          "id": "b4b12812-d29f-4668-9672-ed8842508b5c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 68368,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"23\",\n    \"cpm\": \"23000\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n        365773,\n        365776\n    ],\n    \"deals\": [],\n    \"delivery\": \"ASAP\",\n    \"dspMargin\": null,\n    \"end\": \"2021-02-25\",\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [\n        {\n            \"budgetCapping\": null,\n            \"budgetTarget\": \"2\",\n            \"impCapping\": null,\n            \"impsTarget\": null,\n            \"inventoryId\": 210046,\n            \"targetPercent\": null\n        }\n    ],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": false,\n    \"start\": \"2021-02-24\",\n    \"status\": \"APPROVED\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targetings\": [107],\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns"
          },
          "response": []
        },
        {
          "name": "Delete_campaign_add_targeting",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "f33162b1-c847-4ec4-a12c-f3669103cc26"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "a06f7b39-51c7-41d2-ac06-ce658870868d"
              }
            }
          ],
          "id": "151c086e-62ff-46a2-947d-c295242df96b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns/{{campaignId}}"
          },
          "response": []
        },
        {
          "name": "Create_campaign_empty_creatives_draft",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: QA Campaign\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"delivery\\\":\\\"ASAP\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"VIDEO\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"DRAFT\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"systemType\\\":\\\"ORIGIN_MEDIA\");",
                  "});",
                  "",
                  "//Set advertiserId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"campaignId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "dd686829-bcb1-44c3-b7cb-db7ebad484c6"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "fa0c8851-bb18-4ce5-a80b-ca3c1a139a26"
              }
            }
          ],
          "id": "65f5fd8e-4291-4470-8a86-244e5c864f2d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 68368,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"23\",\n    \"cpm\": \"23000\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n    ],\n    \"deals\": [],\n    \"delivery\": \"ASAP\",\n    \"dspMargin\": null,\n    \"end\": \"2021-02-25\",\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [\n        {\n            \"budgetCapping\": null,\n            \"budgetTarget\": \"2\",\n            \"impCapping\": null,\n            \"impsTarget\": null,\n            \"inventoryId\": 210046,\n            \"targetPercent\": null\n        }\n    ],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": false,\n    \"start\": \"2021-02-24\",\n    \"status\": \"DRAFT\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [\n            {\n                \"id\": null,\n                \"circle\": {\n                    \"center\": {\n                        \"lat\": 41.902784,\n                        \"lng\": 12.496366\n                    },\n                    \"radius\": 1000\n                },\n                \"location\": \"41.902784, 12.496366\",\n                \"notes\": \"Rome, Metropolitan City of Rome, Italy\"\n            }\n        ],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": {\n            \"allow\": true,\n            \"values\": [\n                121005\n            ],\n            \"valuesCoverEmpty\": false\n        },\n        \"startDelays\": {\n            \"allow\": true,\n            \"values\": [\n                -1\n            ],\n            \"valuesCoverEmpty\": false\n        },\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns"
          },
          "response": []
        },
        {
          "name": "Delete_campaign_empty_creatives_draft",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "211b91fd-021a-4080-b1a3-93ce524cd9d1"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "c3ff706a-e310-4c9b-aa59-dc646e6afa5f"
              }
            }
          ],
          "id": "bb299e1a-f83a-4ef7-86b4-7624566fa525",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns/{{campaignId}}"
          },
          "response": []
        },
        {
          "name": "Create_campaign_runningAfterApproval",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: QA Campaign\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"delivery\\\":\\\"ASAP\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"VIDEO\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"RUNNING\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"systemType\\\":\\\"ORIGIN_MEDIA\");",
                  "});",
                  "",
                  "//Set advertiserId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"campaignId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "10265232-4945-4daf-a570-85ac3d3ca61b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "29bae4a8-d450-45bc-bea5-325045f58cbc"
              }
            }
          ],
          "id": "a777f469-310e-4417-9e3e-ed3e4b8a9d87",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"24000\",\n    \"cpm\": \"2\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n        1368420,\n        1368372\n    ],\n    \"deals\": [],\n    \"delivery\": \"ASAP\",\n    \"dspMargin\": null,\n    \"end\": \"{{startTimestamp}}\",\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": true,\n    \"start\": null,\n    \"status\": \"APPROVED\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns"
          },
          "response": []
        },
        {
          "name": "Update_campaign_illegal_status_transition",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Illegal status transition\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "8516980c-6456-414a-81e0-5cb747870f30"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "5ab97b79-d547-4e7a-a285-4fece178a547"
              }
            }
          ],
          "id": "cfcbd262-e9d1-489d-929c-eac0ecbbe3a3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"24000\",\n    \"cpm\": \"2\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n        1368420,\n        1368372\n    ],\n    \"deals\": [],\n    \"delivery\": \"SMOOTH\",\n    \"dspMargin\": null,\n    \"end\": \"{{startTimestamp}}\",\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": true,\n    \"start\": null,\n    \"status\": \"APPROVED\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns/{{campaignId}}"
          },
          "response": []
        },
        {
          "name": "Update_campaign_status_canceled",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: QA Campaign\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"CANCELED\");",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"campaignId\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "e4c2bdd6-a0c5-456a-95e1-0f6472fa6d1a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "7580d1a8-71df-4cbe-a0c3-23df22f08769"
              }
            }
          ],
          "id": "49d4d39c-1a41-49c6-bdc3-cd35fb089901",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"24000\",\n    \"cpm\": \"2\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n        1368420,\n        1368372\n    ],\n    \"deals\": [],\n    \"delivery\": \"SMOOTH\",\n    \"dspMargin\": null,\n    \"end\": \"{{startTimestamp}}\",\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": true,\n    \"start\": null,\n    \"status\": \"CANCELED\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns/{{campaignId}}"
          },
          "response": []
        },
        {
          "name": "Delete_campaign_runningAfterApproval",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "10298a8d-37b3-4e37-9b76-78b37204c498"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "6ed22c44-89a8-4dab-94f3-e3be02c9d36e"
              }
            }
          ],
          "id": "6183d4a1-458d-4d6d-8358-82397684aa5d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"24000\",\n    \"cpm\": \"2\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n        1368420,\n        1368372\n    ],\n    \"deals\": [],\n    \"delivery\": \"ASAP\",\n    \"dspMargin\": null,\n    \"end\": \"{{startTimestamp}}\",\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": true,\n    \"start\": null,\n    \"status\": \"APPROVED\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns/{{campaignId}}"
          },
          "response": []
        },
        {
          "name": "Create_campaign_audience",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: QA Campaign\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"delivery\\\":\\\"ASAP\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"VIDEO\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"APPROVED\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"systemType\\\":\\\"AUDIENCE\");",
                  "});",
                  "",
                  "//Set advertiserId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"campaignId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "268843d3-9495-4d2b-870c-e75dbb18bde2"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "916ec80f-1c91-4b93-8262-d22adfc9ca45"
              }
            }
          ],
          "id": "d8d926c2-5860-4afc-a9a3-101e4510c10a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"230\",\n    \"cpm\": \"24000\",\n    \"creativeRotationScriptId\": null,\n    \"creatives\": [\n        1961253\n    ],\n    \"deals\": [],\n    \"delivery\": \"ASAP\",\n    \"dspMargin\": null,\n    \"end\": null,\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": false,\n    \"start\": null,\n    \"status\": \"APPROVED\",\n    \"systemType\": \"AUDIENCE\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns"
          },
          "response": []
        },
        {
          "name": "Get_campaign_audience",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: QA Campaign\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"delivery\\\":\\\"ASAP\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"VIDEO\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"APPROVED\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"systemType\\\":\\\"AUDIENCE\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "0f62dccf-ed50-4a59-93d7-1a4e53ef3757"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "1df671d2-c161-4ba2-bd6c-181ba56dba93"
              }
            }
          ],
          "id": "05928bda-c668-4229-be65-65887cea3b49",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"230\",\n    \"cpm\": \"24000\",\n    \"creativeRotationScriptId\": null,\n    \"creatives\": [\n        1961253\n    ],\n    \"deals\": [],\n    \"delivery\": \"ASAP\",\n    \"dspMargin\": null,\n    \"end\": null,\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": false,\n    \"start\": null,\n    \"status\": \"APPROVED\",\n    \"systemType\": \"AUDIENCE\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns/{{campaignId}}"
          },
          "response": []
        },
        {
          "name": "Delete_campaign_audience",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "5706c56f-d4dd-4d69-be8f-22e70c21c429"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "9d32c15a-4fb8-499a-b83d-4ae08388136a"
              }
            }
          ],
          "id": "d5d2833d-03bb-4c09-a6d0-d863cf0a99b0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns/{{campaignId}}"
          },
          "response": []
        },
        {
          "name": "Create_campaign_missed_budgetTarget",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: error message\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"budgetTarget\");",
                  "    pm.expect(pm.response.text()).to.include(\"At least one of budgetTarget, impsTarget must be non-empty.\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "33cb27fc-d8e3-45b9-a4ef-adce4367bc44"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "2e36f57b-b1d4-4682-90f2-04975980fcac"
              }
            }
          ],
          "id": "e16614b3-c586-475b-97a7-10fef114c998",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": null,\n    \"cpm\": \"2\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n        1368420,\n        1368372\n    ],\n    \"deals\": [],\n    \"delivery\": \"ASAP\",\n    \"dspMargin\": null,\n    \"end\": \"{{startTimestamp}}\",\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": true,\n    \"start\": null,\n    \"status\": \"APPROVED\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns"
          },
          "response": []
        },
        {
          "name": "Create_campaign_missed_advertiser",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: error message\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"advertiser\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"must not be null\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "a86a4051-366a-4dbe-b374-23581b5dc821"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "eb3ecf9e-6a95-459c-a882-c3ea9b838938"
              }
            }
          ],
          "id": "767039c1-d6bb-4c04-add5-21a315738948",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": null,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"24000\",\n    \"cpm\": \"2\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n        1368420,\n        1368372\n    ],\n    \"deals\": [],\n    \"delivery\": \"ASAP\",\n    \"dspMargin\": null,\n    \"end\": \"{{startTimestamp}}\",\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": true,\n    \"start\": null,\n    \"status\": \"APPROVED\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns"
          },
          "response": []
        },
        {
          "name": "Create_campaign_nonexistent_status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: error message\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"value not one of declared Enum instance names: [DRAFT, FINISHED, PENDING_PUBLISHER_REVIEW, PENDING, CANCELED, CLOSED, PAUSED, RUNNING, APPROVED, DECLINED]\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "191261c4-bdce-4219-9ad8-83d914da0205"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "7b4858c8-ba7b-4594-8de6-7a8083e44f0d"
              }
            }
          ],
          "id": "f8b6e002-aa28-4853-8e74-f8e5b28a8a68",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"24000\",\n    \"cpm\": \"2\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n        1368420,\n        1368372\n    ],\n    \"deals\": [],\n    \"delivery\": \"ASAP\",\n    \"dspMargin\": null,\n    \"end\": null,\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": true,\n    \"start\": null,\n    \"status\": \"INVALID\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns"
          },
          "response": []
        },
        {
          "name": "Create_campaign_empty_creatives",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: error message\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"creatives\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"must not be null\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "64cd4e6c-a543-472e-8e1d-b2d8e3b41cd6"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "5979e849-d780-4f63-9955-4f893151b093"
              }
            }
          ],
          "id": "8b458e74-f459-4f3e-a787-42cfd9e4c637",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Campaign {{startTimestamp}}\",\n    \"advertiser\": 799527,\n    \"approvalNotes\": null,\n    \"budgetCapping\": null,\n    \"budgetTarget\": \"24000\",\n    \"cpm\": \"2\",\n    \"creativeRotationScriptId\": 1,\n    \"creatives\": [\n    ],\n    \"deals\": [],\n    \"delivery\": \"ASAP\",\n    \"dspMargin\": null,\n    \"end\": \"2021-02-24\",\n    \"impCapping\": null,\n    \"impsTarget\": null,\n    \"inventoryTargets\": [],\n    \"ifaCapping\": null,\n    \"runningAfterApproval\": true,\n    \"start\": null,\n    \"status\": \"APPROVED\",\n    \"systemType\": \"ORIGIN_MEDIA\",\n    \"targeting\": {\n        \"id\": null,\n        \"adPodSlotTypes\": null,\n        \"adUnits\": null,\n        \"advertiserDomains\": null,\n        \"appBundles\": null,\n        \"categories\": null,\n        \"cityCodes\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countryCodes\": null,\n        \"creativeCategories\": null,\n        \"dealIds\": null,\n        \"deals\": null,\n        \"deviceMakes\": null,\n        \"deviceModels\": null,\n        \"deviceTypes\": null,\n        \"dmaCodes\": null,\n        \"episodeNames\": null,\n        \"locations\": [],\n        \"networks\": null,\n        \"periods\": [],\n        \"seriesNames\": null,\n        \"ssps\": null,\n        \"startDelays\": null,\n        \"states\": null,\n        \"zipCodes\": null,\n        \"segmentGroups\": []\n    },\n    \"thirdPartyImpressionBeacons\": [],\n    \"thirdPartyBeacons\": [],\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"VIDEO\",\n    \"user\": null,\n    \"allowIndirect\": false,\n    \"pacingRate\": null,\n    \"spend\": null,\n    \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/campaigns"
          },
          "response": []
        },
        {
          "name": "Back_to_defaults",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Get version",
                  "var jsonData = pm.response.json();",
                  "//Send Advertiser Id to Test Results",
                  "tests[\"Advertiser Id: \" + pm.environment.get(\"advertiserId\")] = jsonData.length !== 0;",
                  "",
                  "//Send current environment name to Test Results",
                  "tests[\"Environment name: \" + pm.environment.name] = jsonData.length !== 0;",
                  "",
                  "//Send app version to Test Results",
                  "tests[\"Backend version: \" + jsonData.version] = responseCode.code == 200;",
                  "",
                  "//Send useful info to console",
                  "console.log(\"Start timestamp:\", pm.environment.get(\"startTimestamp\"));",
                  "console.log(\"Advertiser Id:\", pm.environment.get(\"advertiserId\"));",
                  "console.log(\"Environment name:\", pm.environment.name);",
                  "console.log(\"Backend version:\", jsonData.version);",
                  "",
                  "//Clear variables",
                  "pm.environment.set(\"startTimestamp\", \"\");",
                  "pm.environment.set(\"advertiserId\", \"\");",
                  "pm.environment.set(\"creativeId\", \"\");",
                  "pm.environment.set(\"creativeUrl\", \"\");"
                ],
                "type": "text/javascript",
                "id": "45a590ba-2e61-44c8-abf5-8ca60cc2fc1b"
              }
            }
          ],
          "id": "cc4b1f6b-51db-43e9-ba9e-3ad0f666a84d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/environment"
          },
          "response": []
        }
      ],
      "id": "fcc8a625-9829-4482-92a3-3274803b809e"
    },
    {
      "name": "Creative (CRUD)",
      "item": [
        {
          "name": "Login_admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"token\", jsonData.token);"
                ],
                "type": "text/javascript",
                "id": "c40da779-08ca-4c97-b572-2327cc2f7ec6"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "//Save current time before start",
                  "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                ],
                "type": "text/javascript",
                "id": "7beb55a4-136c-40ef-89e6-44c324b38de1"
              }
            }
          ],
          "id": "7c444858-721f-4289-b715-5787ef466451",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
          },
          "response": []
        },
        {
          "name": "Create_advertiser",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: QA Advertiser\");",
                  "});",
                  "",
                  "//Set advertiserId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"advertiserId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "53fbfe97-12bb-4c4d-b0af-09d84ccbfe98"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "186fab72-f7a4-43bd-a376-8e9ad3d55acf"
              }
            }
          ],
          "id": "5ccb9a92-bec8-4954-b51f-ec0548e02c80",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: QA Advertiser {{startTimestamp}}\",\n    \"balance\": 0,\n    \"campaigns\": 0,\n    \"contacts\": {\n        \"country\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"responsiblePerson\": null,\n        \"skype\": null\n    },\n    \"creatives\": 0,\n    \"domain\": \"qa.com\",\n    \"domains\": null,\n    \"ssps\": null,\n    \"status\": \"INACTIVE\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers"
          },
          "response": []
        },
        {
          "name": "Create_banner_png",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, type, name, etc\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"BANNER\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"advertiser\\\":\" + pm.environment.get(\"advertiserId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"campaigns\\\":[]\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Banner (PNG)\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"INACTIVE\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"url\\\":null\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"pageUrl\\\":\\\"qa.com\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"mime\\\":null\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"duration\\\":null\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"width\\\":127\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"height\\\":122\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"content\\\":\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"categories\\\":[\\\"IAB1\\\"]\");",
                  "});",
                  "",
                  "//Format for content (url)",
                  "pm.test(\"Url format\", function () {",
                  "    //Check format for URL (regex)",
                  "    pm.expect(jsonData.content).to.be.a('string');",
                  "    pm.expect(jsonData.content).to.match(/^.*http:\\/\\/.*cloudfront.net\\/creatives\\/.*\\/PostmanBannerPNG_.*\\.png.*$/);",
                  "",
                  "    //TODO Investigate why this regex not works",
                  "    //pm.expect(jsonData.content).to.match(/^<img src=\\\\\\\"http:\\/\\/.*cloudfront.net\\/creatives\\/.*\\/PostmanBannerPNG_.*\\.png\\\\\\\"\\/>$/);",
                  "",
                  "    pm.expect(jsonData.content).include(pm.environment.get(\"advertiserId\"));",
                  "});",
                  "",
                  "//Parse content to get exact url",
                  "var url = pm.response.json().content;",
                  "url = url.split('\"');",
                  "",
                  "//Set env variables",
                  "pm.environment.set(\"creativeId\", jsonData.id);",
                  "pm.environment.set(\"creativeUrl\",  url[1]);"
                ],
                "type": "text/javascript",
                "id": "4167984c-295b-4349-a37b-00d4d0be4064"
              }
            }
          ],
          "id": "38e549c1-08d9-4b3a-ad1f-446db2471d14",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "creative",
                  "value": "{\n  \"id\": null,\n  \"name\": \"Postman: Banner (PNG)\",\n  \"advertiser\": {{advertiserId}},\n  \"campaigns\": [],\n  \"categories\": [\n    \"IAB1\"\n  ],\n  \"content\": null,\n  \"duration\": null,\n  \"mime\": null,\n  \"pageUrl\": \"qa.com\",\n  \"size\": {\n    \"width\": 127,\n    \"height\": 122\n  },\n  \"status\": \"INACTIVE\",\n  \"type\": \"BANNER\",\n  \"url\": null\n}",
                  "contentType": "application/json",
                  "type": "text"
                },
                {
                  "key": "file",
                  "contentType": "",
                  "type": "file",
                  "src": "Storage/PNG.png"
                }
              ]
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/creatives"
          },
          "response": []
        },
        {
          "name": "Get_banner_from_S3",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Headers",
                  "pm.test(\"Contains: Headers, Body\", function () {",
                  "    //[TMP-1148]:",
                  "    pm.expect(pm.response.headers.get('Content-Type')).to.eql('image/png');",
                  "    pm.expect(pm.response.headers.get('Server')).to.eql('AmazonS3');",
                  "",
                  "//Body",
                  "pm.expect(pm.response.text()).to.include(\"PNG\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "f65e4c0b-698d-41bd-9f67-fb98817a66a0"
              }
            }
          ],
          "id": "ebfbe277-119b-4273-95e7-56f1a611b319",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{creativeUrl}}"
          },
          "response": []
        },
        {
          "name": "Create_banner_no_category",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, type, name, etc\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"BANNER\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"advertiser\\\":\" + pm.environment.get(\"advertiserId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"campaigns\\\":[]\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Banner (No category)\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"INACTIVE\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"url\\\":null\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"pageUrl\\\":\\\"qa.com\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"mime\\\":null\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"duration\\\":null\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"width\\\":127\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"height\\\":122\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"content\\\":\");",
                  "    ",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"categories\\\":[]\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "784c1808-2547-4170-8eaa-a2d426faa82c"
              }
            }
          ],
          "id": "842a03e0-6b9f-4ad5-b476-d64f69025a3e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "creative",
                  "value": "{\n  \"id\": null,\n  \"name\": \"Postman: Banner (No category)\",\n  \"advertiser\": {{advertiserId}},\n  \"campaigns\": [],\n  \"content\": null,\n  \"duration\": null,\n  \"mime\": null,\n  \"pageUrl\": \"qa.com\",\n  \"size\": {\n    \"width\": 127,\n    \"height\": 122\n  },\n  \"status\": \"INACTIVE\",\n  \"type\": \"BANNER\",\n  \"url\": null\n}",
                  "contentType": "application/json",
                  "type": "text"
                },
                {
                  "key": "file",
                  "contentType": "",
                  "type": "file",
                  "src": "Storage/PNG.png"
                }
              ]
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/creatives"
          },
          "response": []
        },
        {
          "name": "Create_banner_not_exist_category",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains error\", function () {",
                  "    //TMP-1179",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":400\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"fieldName\\\":\\\"categories\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"message\\\":\\\"Specified category(ies) could not be found\\\"\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "95231294-52a7-4649-85e9-9ea464415a0b"
              }
            }
          ],
          "id": "cdda5cff-f946-4191-8492-d9e10655e3a1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "creative",
                  "value": "{\n  \"id\": null,\n  \"name\": \"Postman: Banner (Not exist  category)\",\n  \"advertiser\": {{advertiserId}},\n  \"campaigns\": [],\n\"categories\": [\n    \"ABC1\"\n  ],\n  \"content\": null,\n  \"duration\": null,\n  \"mime\": null,\n  \"pageUrl\": \"qa.com\",\n  \"size\": {\n    \"width\": 127,\n    \"height\": 122\n  },\n  \"status\": \"INACTIVE\",\n  \"type\": \"BANNER\",\n  \"url\": null\n}",
                  "contentType": "application/json",
                  "type": "text"
                },
                {
                  "key": "file",
                  "contentType": "",
                  "type": "file",
                  "src": "Storage/PNG.png"
                }
              ]
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/creatives"
          },
          "response": []
        },
        {
          "name": "Create_video_mp4",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, type, name, etc\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"VIDEO\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"advertiser\\\":\" + pm.environment.get(\"advertiserId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"campaigns\\\":[]\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Video (MP4)\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"INACTIVE\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"url\\\":\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"pageUrl\\\":\\\"qa.com\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"mime\\\":\\\"video/mp4\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"duration\\\":5\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"width\\\":560\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"height\\\":320\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"content\\\":null\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"categories\\\":[\\\"IAB1\\\"]\");",
                  "});",
                  "",
                  "//Format for content (url)",
                  "pm.test(\"Contains: id, type, name, etc\", function () {",
                  "    //Check format for URL (regex)",
                  "    pm.expect(jsonData.url).to.be.a('string');",
                  "    pm.expect(jsonData.url).to.match(/^http:\\/\\/.*cloudfront.net\\/creatives\\/.*\\/PostmanVideoMP4_.*\\.mp4$/);",
                  "    pm.expect(jsonData.url).include(pm.environment.get(\"advertiserId\"));",
                  "});",
                  "",
                  "//Set env variables",
                  "pm.environment.set(\"creativeId\", jsonData.id);",
                  "pm.environment.set(\"creativeUrl\", jsonData.url);"
                ],
                "type": "text/javascript",
                "id": "3a40963b-b30c-40cf-b970-f18f5d1150e4"
              }
            }
          ],
          "id": "d2c9263d-c98c-4cd6-9dc8-c9b2cb77b7be",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "creative",
                  "value": "{\n  \"id\": null,\n  \"name\": \"Postman: Video (MP4)\",\n  \"advertiser\": {{advertiserId}},\n  \"campaigns\": [],\n  \"categories\": [\n    \"IAB1\"\n  ],\n  \"content\": null,\n  \"duration\": null,\n  \"mime\": null,\n  \"pageUrl\": \"qa.com\",\n  \"size\": {\n    \"width\": \"560\",\n    \"height\": \"320\"\n  },\n  \"status\": \"INACTIVE\",\n  \"type\": \"VIDEO\",\n  \"url\": null\n}",
                  "contentType": "application/json",
                  "type": "text"
                },
                {
                  "key": "file",
                  "contentType": "",
                  "type": "file",
                  "src": "Storage/mp4_560x320_175KB.mp4"
                }
              ]
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/creatives"
          },
          "response": []
        },
        {
          "name": "Get_video_from_S3",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Contains: Headers, Body\", function () {",
                  "    //[TMP-1148]:",
                  "    pm.expect(pm.response.headers.get('Content-Type')).to.eql('video/mp4');",
                  "    pm.expect(pm.response.headers.get('Server')).to.eql('AmazonS3');",
                  "",
                  "//Body",
                  "pm.expect(pm.response.text()).to.be.not.empty;",
                  "});"
                ],
                "type": "text/javascript",
                "id": "47164089-771a-49e5-be16-d08267466d87"
              }
            }
          ],
          "id": "4e623c19-7e35-43a6-b775-8e1ef7f6d90e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{creativeUrl}}"
          },
          "response": []
        },
        {
          "name": "Create_video_from_url",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, type, name, etc\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"VIDEO\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"advertiser\\\":\" + pm.environment.get(\"advertiserId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"campaigns\\\":[]\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Video (by URL)\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"INACTIVE\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"url\\\":\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"pageUrl\\\":null\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"mime\\\":\\\"video/mp4\\\"\");",
                  "    ",
                  "//URL: Duration in request equals null, but resulting must be \"5\"  ",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"duration\\\":5\");",
                  "    ",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"width\\\":560\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"height\\\":320\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"content\\\":null\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"categories\\\":[\\\"IAB1\\\"]\");",
                  "});",
                  "",
                  "//Format for content (url)",
                  "pm.test(\"Contains: id, type, name, etc\", function () {",
                  "    //Check format for URL (regex)",
                  "    pm.expect(jsonData.url).to.be.a('string');",
                  "    pm.expect(jsonData.url).to.match(/^http:\\/\\/.*cloudfront.net\\/creatives\\/.*\\/PostmanVideoMP4_.*\\.mp4$/);",
                  "    pm.expect(jsonData.url).include(pm.environment.get(\"advertiserId\"));",
                  "});",
                  "",
                  "//Set env variables",
                  "pm.environment.set(\"creativeId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "fdc9f5e8-957a-437b-9e48-d432f65c7255"
              }
            }
          ],
          "id": "9aacbfa4-0947-4b8a-be2e-5f398160c55d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "creative",
                  "value": "{\n  \"id\": null,\n  \"name\": \"Postman: Video (by URL)\",\n  \"advertiser\": {{advertiserId}},\n  \"campaigns\": [],\n  \"categories\": [\n    \"IAB1\"\n  ],\n  \"content\": null,\n  \"duration\": null,\n  \"mime\": \"video/mp4\",\n  \"pageUrl\": null,\n  \"size\": {\n    \"width\": \"560\",\n    \"height\": \"320\"\n  },\n  \"status\": \"INACTIVE\",\n  \"type\": \"VIDEO\",\n  \"url\": \"{{creativeUrl}}\"\n}",
                  "contentType": "application/json",
                  "type": "text"
                }
              ]
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/creatives"
          },
          "response": []
        },
        {
          "name": "Create_video_unsupported_jpg",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//TODO Minor: Change 400 to 415 error code (Unsupported Media Type)",
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, type, name, etc\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Creative VIDEO does not support content type image/jpeg\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "2f198e8e-6569-475d-8056-3654634ca926"
              }
            }
          ],
          "id": "7f63606a-8099-423c-8838-3844e124c788",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "creative",
                  "value": "{\n  \"id\": null,\n  \"name\": \"Postman: Video (JPG)\",\n  \"advertiser\": {{advertiserId}},\n  \"campaigns\": [],\n  \"categories\": [\n    \"IAB1\"\n  ],\n  \"content\": null,\n  \"duration\": null,\n  \"mime\": null,\n  \"pageUrl\": null,\n  \"size\": {\n    \"width\": \"320\",\n    \"height\": \"240\"\n  },\n  \"status\": \"INACTIVE\",\n  \"type\": \"VIDEO\",\n  \"url\": null\n}",
                  "contentType": "application/json",
                  "type": "text"
                },
                {
                  "key": "file",
                  "contentType": "",
                  "type": "file",
                  "src": "Storage/JPG1.jpg"
                }
              ]
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/creatives"
          },
          "response": []
        },
        {
          "name": "Create_video_cannot_read_duration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains error\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Could not read video duration\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "5f34fa66-1e12-4ad0-8b14-93a1825e8d5d"
              }
            }
          ],
          "id": "2a570d07-1858-4a89-b4dc-b10735c7e487",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "creative",
                  "value": "{\n  \"id\": null,\n  \"name\": \"Postman: Video (Empty duration)\",\n  \"advertiser\": {{advertiserId}},\n  \"campaigns\": [],\n  \"categories\": [\n    \"IAB1\"\n  ],\n  \"content\": null,\n  \"duration\": null,\n  \"mime\": null,\n  \"pageUrl\": null,\n  \"size\": {\n    \"width\": \"320\",\n    \"height\": \"240\"\n  },\n  \"status\": \"INACTIVE\",\n  \"type\": \"VIDEO\",\n  \"url\": null\n}",
                  "contentType": "application/json",
                  "type": "text"
                },
                {
                  "key": "file",
                  "contentType": "",
                  "type": "file",
                  "src": "Storage/mp4_corrupted.mp4"
                }
              ]
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/creatives"
          },
          "response": []
        },
        {
          "name": "Create_video_incorrect_duration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 400\"] = responseCode.code === 400;",
                  "",
                  "//Content",
                  "pm.test(\"Contains error\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Cannot deserialize value of type `java.lang.Long` from String\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "4fe4cb0e-32b1-47ca-8338-1ef31b50a658"
              }
            }
          ],
          "id": "9a9eea38-3a46-43fe-98ee-c78156cfd6a4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "creative",
                  "value": "{\n  \"id\": null,\n  \"name\": \"Postman: Video (Empty duration)\",\n  \"advertiser\": {{advertiserId}},\n  \"campaigns\": [],\n  \"categories\": [\n    \"IAB1\"\n  ],\n  \"content\": null,\n  \"duration\": \"string\",\n  \"mime\": null,\n  \"pageUrl\": null,\n  \"size\": {\n    \"width\": \"320\",\n    \"height\": \"240\"\n  },\n  \"status\": \"INACTIVE\",\n  \"type\": \"VIDEO\",\n  \"url\": null\n}",
                  "contentType": "application/json",
                  "type": "text"
                },
                {
                  "key": "file",
                  "contentType": "",
                  "type": "file",
                  "src": "Storage/mp4_corrupted.mp4"
                }
              ]
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/creatives"
          },
          "response": []
        },
        {
          "name": "Create_video_empty_size_categories",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, type, name, etc\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"VIDEO\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"advertiser\\\":\" + pm.environment.get(\"advertiserId\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"campaigns\\\":[]\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Video (empty size & categories)\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"INACTIVE\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"url\\\":\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"pageUrl\\\":null\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"mime\\\":\\\"video/mp4\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"duration\\\":5\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"content\\\":null\");",
                  "});",
                  "",
                  "//[TMP-1378]:",
                  "pm.test(\"Contains correctly calculated size\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"width\\\":560\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"height\\\":320\");",
                  "});",
                  "",
                  "//[TMP-1378]:",
                  "pm.test(\"Not contains any category\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"categories\\\":[]\");",
                  "});"
                ],
                "type": "text/javascript",
                "id": "04b9e2c8-24c0-4579-8cd4-cec9e0199a6e"
              }
            }
          ],
          "id": "0e989236-7361-403b-8cf7-dfae5c2d1f72",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "creative",
                  "value": "{\n  \"id\": null,\n  \"name\": \"Postman: Video (empty size & categories)\",\n  \"advertiser\": {{advertiserId}},\n  \"campaigns\": [],\n  \"content\": null,\n  \"duration\": null,\n  \"mime\": null,\n  \"pageUrl\": null,\n  \"status\": \"INACTIVE\",\n  \"type\": \"VIDEO\",\n  \"url\": null\n}",
                  "contentType": "application/json",
                  "type": "text"
                },
                {
                  "key": "file",
                  "contentType": "",
                  "type": "file",
                  "src": "Storage/mp4_560x320_175KB.mp4"
                }
              ]
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/creatives"
          },
          "response": []
        },
        {
          "name": "Get_creatives_all",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "e70b9128-f846-4556-b090-755ae62862ac"
              }
            }
          ],
          "id": "75b12ccd-ddb1-4bf2-a3c1-52aff5a2bf22",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/creatives"
          },
          "response": []
        },
        {
          "name": "Get_creatives_by_advertiser",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "",
                  "//Check number of created creatives",
                  "var creativesNumber = 5;",
                  "",
                  "tests[\"Number of created creatives is \" + creativesNumber] = pm.response.json().length == creativesNumber;",
                  "",
                  "",
                  "//Check that creatives for appropriate advertiser are arrived",
                  "pm.test(\"Creatives belong to appropriate Advertiser\", function () {",
                  "",
                  "var jsonData = pm.response.json();",
                  "",
                  "var flag = true;",
                  "for (var i = 0; i < jsonData.length; i++) {",
                  "    if (JSON.stringify(jsonData[i].advertiser) != pm.environment.get(\"advertiserId\")) {",
                  "        flag = false;",
                  "    }",
                  "}",
                  "pm.expect(flag).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript",
                "id": "625c7915-976b-4709-b964-da7eae82b540"
              }
            }
          ],
          "id": "7b5ceb70-33fe-49fd-9b2e-c65a43fcbbea",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/creatives?advertiser={{advertiserId}}",
              "host": [
                "{{protocol}}{{server}}",
                "{{domain}}"
              ],
              "path": [
                "api",
                "{{api_version}}",
                "creatives"
              ],
              "query": [
                {
                  "key": "advertiser",
                  "value": "{{advertiserId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Back to defaults",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Get version",
                  "var jsonData = pm.response.json();",
                  "//Send Advertiser Id to Test Results",
                  "tests[\"Advertiser Id: \" + pm.environment.get(\"advertiserId\")] = jsonData.length !== 0;",
                  "",
                  "//Send current environment name to Test Results",
                  "tests[\"Environment name: \" + pm.environment.name] = jsonData.length !== 0;",
                  "",
                  "//Send app version to Test Results",
                  "tests[\"Backend version: \" + jsonData.version] = responseCode.code == 200;",
                  "",
                  "//Send useful info to console",
                  "console.log(\"Start timestamp:\", pm.environment.get(\"startTimestamp\"));",
                  "console.log(\"Advertiser Id:\", pm.environment.get(\"advertiserId\"));",
                  "console.log(\"Environment name:\", pm.environment.name);",
                  "console.log(\"Backend version:\", jsonData.version);",
                  "",
                  "//Clear variables",
                  "pm.environment.set(\"startTimestamp\", \"\");",
                  "pm.environment.set(\"advertiserId\", \"\");",
                  "pm.environment.set(\"creativeId\", \"\");",
                  "pm.environment.set(\"creativeUrl\", \"\");"
                ],
                "type": "text/javascript",
                "id": "989e2db3-e5a1-47e2-a866-9b147ec7d163"
              }
            }
          ],
          "id": "347f4274-ddc2-4400-882e-e815b164919d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/environment"
          },
          "response": []
        },
        {
          "name": "Logout_admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Clear variables",
                  "pm.environment.set(\"token\", \"\");"
                ],
                "type": "text/javascript",
                "id": "ba46837d-657b-4d96-bdf2-59e07da48e8a"
              }
            }
          ],
          "id": "2c67df05-991a-4cd9-a05a-c5173d450d42",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/logout"
          },
          "response": []
        }
      ],
      "id": "31d5d714-6856-48ac-9a9b-5e1384c9372c"
    },
    {
      "name": "Reports (CRUD)",
      "item": [
        {
          "name": "SSP",
          "item": [
            {
              "name": "Login_admin",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Set token variable",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"token\", jsonData.token);"
                    ],
                    "type": "text/javascript",
                    "id": "4a629fed-b5f1-4430-a1ec-37863e169d4b"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "//Save current time before start",
                      "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                    ],
                    "type": "text/javascript",
                    "id": "b23ca31a-0e68-486d-a20a-dd099b1df255"
                  }
                }
              ],
              "id": "0582278d-9138-4bd8-8970-a8053a305abc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": ""
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
              },
              "response": []
            },
            {
              "name": "Create_empty_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 400\"] = responseCode.code === 400;",
                      "",
                      "//Error message",
                      "pm.test(\"Error message\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Required request body is missing\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "8478016a-7caa-4113-9b67-97902c8072ee"
                  }
                }
              ],
              "id": "7c8b13cc-8110-4f93-8665-caef4d58cf16",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
              },
              "response": []
            },
            {
              "name": "Create_no_name_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 400\"] = responseCode.code === 400;",
                      "",
                      "//Error message [TMP-1166]",
                      "pm.test(\"Error message\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"must not be blank\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "b9c129a4-162a-4376-b3f4-3cfa22aac23a"
                  }
                }
              ],
              "id": "94edab55-bbc9-4009-a222-d33cce9b0549",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"custom\": true,\n    \"dimensions\": [],\n    \"filter\": {\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"browsers\": null,\n        \"campaigns\": null,\n        \"carriers\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"connections\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"houseAd\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"oses\": null,\n        \"periods\": null,\n        \"platforms\": null,\n        \"publisherGroups\": null,\n        \"seriesNames\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"HOUR\",\n    \"metrics\": [],\n    \"period\": {\n        \"start\": null,\n        \"end\": null,\n        \"type\": \"TODAY\"\n    },\n    \"personal\": true,\n    \"schedule\": null,\n    \"timeZone\": \"Africa/Addis_Ababa\",\n    \"type\": \"SSP\",\n    \"user\": null\n}"
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
              },
              "response": []
            },
            {
              "name": "Create_incorrect_tz",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 400\"] = responseCode.code === 400;",
                      "",
                      "//Error message [TMP-1166]",
                      "pm.test(\"Error message\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Invalid timezone ID\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "1b6c3c56-0578-4f1b-a341-b789baec7cd2"
                  }
                }
              ],
              "id": "f13e7060-ac02-4e0c-9942-5122ad6c69e5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: SSP Report (incorrect tz)\",\n    \"custom\": true,\n    \"dimensions\": [],\n    \"filter\": {\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"browsers\": null,\n        \"campaigns\": null,\n        \"carriers\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"connections\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"houseAd\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"oses\": null,\n        \"periods\": null,\n        \"platforms\": null,\n        \"publisherGroups\": null,\n        \"seriesNames\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"HOUR\",\n    \"metrics\": [],\n    \"period\": {\n        \"start\": null,\n        \"end\": null,\n        \"type\": \"TODAY\"\n    },\n    \"personal\": true,\n    \"schedule\": null,\n    \"timeZone\": \"Abc\",\n    \"type\": \"SSP\",\n    \"user\": null\n}"
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
              },
              "response": []
            },
            {
              "name": "Create_incorrect_period_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Сomment test if report becomes created due incorrect report brokes API tests (Dev)",
                      "//Status code",
                      "tests[\"Status code is 400\"] = responseCode.code === 400;",
                      "",
                      "//Error message [TMP-1166]",
                      "pm.test(\"Error message\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"start can't be prior to end\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "4809a784-ca42-4b70-931f-0ff8de3d031d"
                  }
                }
              ],
              "id": "46e4d6be-2624-40fb-aaea-3242f3192e72",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: SSP Report (incorrect period)\",\n    \"custom\": true,\n    \"dimensions\": [],\n    \"filter\": {\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"browsers\": null,\n        \"campaigns\": null,\n        \"carriers\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"connections\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"houseAd\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"oses\": null,\n        \"periods\": null,\n        \"platforms\": null,\n        \"publisherGroups\": null,\n        \"seriesNames\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"HOUR\",\n    \"metrics\": [],\n    \"period\": {\n        \"start\": \"2020-01-03\",\n        \"end\": \"2020-01-01\",\n        \"type\": \"CUSTOM\"\n    },\n    \"personal\": true,\n    \"schedule\": null,\n    \"timeZone\": \"Africa/Addis_Ababa\",\n    \"type\": \"SSP\",\n    \"user\": null\n}"
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
              },
              "response": []
            },
            {
              "name": "Create_required_ssp_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Content",
                      "pm.test(\"Contains: id, type, name, timeZone, granularity, period, ownership, user\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"SSP\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"custom\\\":true\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: SSP Report\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"timeZone\\\":\\\"Africa/Addis_Ababa\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"granularity\\\":\\\"HOUR\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"TODAY\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"start\\\":null\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"end\\\":null\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"personal\\\":true\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"firstName\\\":\\\"TEST\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"lastName\\\":\\\"Admin\\\"\");",
                      "});",
                      "",
                      "//Set reportId variable",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"reportId\", jsonData.id);"
                    ],
                    "type": "text/javascript",
                    "id": "b8cadf13-c1a0-4454-a005-bcdd80045cab"
                  }
                }
              ],
              "id": "222cb455-ffa8-49d7-81a8-9ac828edc0df",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: SSP Report\",\n    \"datasourceType\": \"STANDARD\",\n    \"custom\": true,\n    \"dimensions\": [],\n    \"filter\": {\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"browsers\": null,\n        \"campaigns\": null,\n        \"carriers\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"connections\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"houseAd\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"oses\": null,\n        \"periods\": null,\n        \"platforms\": null,\n        \"publisherGroups\": null,\n        \"seriesNames\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"HOUR\",\n    \"metrics\": [],\n    \"period\": {\n        \"start\": null,\n        \"end\": null,\n        \"type\": \"TODAY\"\n    },\n    \"personal\": true,\n    \"schedule\": null,\n    \"timeZone\": \"Africa/Addis_Ababa\",\n    \"type\": \"SSP\",\n    \"user\": null\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
              },
              "response": []
            },
            {
              "name": "Get_required_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Content",
                      "pm.test(\"Contains: id, type, name, timeZone, granularity, period, ownership, user\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"SSP\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"custom\\\":true\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: SSP Report\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"timeZone\\\":\\\"Africa/Addis_Ababa\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"granularity\\\":\\\"HOUR\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"TODAY\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"start\\\":null\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"end\\\":null\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"personal\\\":true\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"firstName\\\":\\\"TEST\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"lastName\\\":\\\"Admin\\\"\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "5c5a36d0-f19d-4b45-af81-931deb6ecffc"
                  }
                }
              ],
              "id": "4be2667a-722d-4608-b1f1-0f78cc6cf4ef",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
              },
              "response": []
            },
            {
              "name": "Update_required_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Content",
                      "pm.test(\"Contains: id, type, name, timeZone, granularity, period, ownership, user\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"SSP\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"custom\\\":true\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: SSP Report (updated)\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"timeZone\\\":\\\"Europe/Athens\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"granularity\\\":\\\"CUMULATIVE\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"CUSTOM\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"start\\\":\\\"2020-01-01\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"end\\\":\\\"2020-01-03\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"personal\\\":false\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"firstName\\\":\\\"TEST\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"lastName\\\":\\\"Admin\\\"\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "b9feb39e-2893-467f-bca5-fd324f0f7a87"
                  }
                }
              ],
              "id": "8b6258bb-1dfc-4ce8-b784-e4d759739b3a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": 98610,\n    \"name\": \"Postman: SSP Report (updated)\",\n    \"datasourceType\": \"STANDARD\",\n    \"custom\": true,\n    \"dimensions\": [],\n    \"filter\": {\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"browsers\": null,\n        \"campaigns\": null,\n        \"carriers\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"connections\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"houseAd\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"oses\": null,\n        \"periods\": null,\n        \"platforms\": null,\n        \"publisherGroups\": null,\n        \"seriesNames\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"CUMULATIVE\",\n    \"metrics\": [],\n    \"period\": {\n        \"start\": \"2020-01-01\",\n        \"end\": \"2020-01-03\",\n        \"type\": \"CUSTOM\"\n    },\n    \"personal\": false,\n    \"schedule\": null,\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"SSP\",\n    \"user\": null\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
              },
              "response": []
            },
            {
              "name": "Update_no_id_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 500\"] = responseCode.code === 500;",
                      "",
                      "//Error message",
                      "pm.test(\"Error message\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Request method 'PUT' not supported\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "4e3d1ad8-9c35-4fdf-aed1-8e0381fd9583"
                  }
                }
              ],
              "id": "da7e336d-9a43-4c60-81b1-196a33e19107",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": 98610,\n    \"name\": \"Postman: SSP Report (no id)\",\n    \"datasourceType\": \"STANDARD\",\n    \"custom\": true,\n    \"dimensions\": [],\n    \"filter\": {\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"browsers\": null,\n        \"campaigns\": null,\n        \"carriers\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"connections\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"houseAd\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"oses\": null,\n        \"periods\": null,\n        \"platforms\": null,\n        \"publisherGroups\": null,\n        \"seriesNames\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"CUMULATIVE\",\n    \"metrics\": [],\n    \"period\": {\n        \"start\": \"2020-01-01\",\n        \"end\": \"2020-01-03\",\n        \"type\": \"CUSTOM\"\n    },\n    \"personal\": false,\n    \"schedule\": null,\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"SSP\",\n    \"user\": null\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
              },
              "response": []
            },
            {
              "name": "Get_data_unsaved_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//TODO Sample data is required to get actual & constant data",
                      "",
                      "//Content",
                      "//[TMP-1283]",
                      "pm.test(\"Contains: rows, time, total\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"rows\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"time\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"total\\\"\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "57762311-260f-4ef0-ac38-b344a08978e1"
                  }
                }
              ],
              "id": "71788aff-dadd-4558-9c3c-d652720643b7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": null,\n    \"name\": null,\n    \"datasourceType\": \"STANDARD\",\n    \"custom\": true,\n    \"dimensions\": [],\n    \"filter\": {\n        \"adomains\": null,\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"browsers\": null,\n        \"campaigns\": null,\n        \"carriers\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"connections\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dsps\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"houseAd\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"oses\": null,\n        \"periods\": null,\n        \"platforms\": null,\n        \"publisherGroups\": null,\n        \"seriesNames\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"streams\": null,\n        \"states\": null\n    },\n    \"granularity\": \"HOUR\",\n    \"metrics\": [],\n    \"period\": {\n        \"start\": \"2020-01-01\",\n        \"end\": \"2020-01-03\",\n        \"type\": \"CUSTOM\"\n    },\n    \"personal\": false,\n    \"schedule\": null,\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"SSP\",\n    \"user\": {\n        \"id\": 1,\n        \"advertisers\": [],\n        \"client\": null,\n        \"dsps\": [],\n        \"email\": null,\n        \"firstName\": \"TEST\",\n        \"lastName\": \"Admin\",\n        \"role\": null,\n        \"ssps\": [],\n        \"status\": null,\n        \"timeZone\": null,\n        \"name\": \"TEST Admin\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/_data"
              },
              "response": []
            },
            {
              "name": "Get_data_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Content",
                      "//TODO Sample data is required to get actual & constant data",
                      "pm.test(\"Contains: rows, time, total\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"rows\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"total\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"time\\\"\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "679ee973-f34f-47dd-9838-d0ad8e041f39"
                  }
                }
              ],
              "id": "2208a879-b816-46c7-9f97-b22aba5535d0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/data"
              },
              "response": []
            },
            {
              "name": "Download_csv_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Content",
                      "//TODO Sample data is required to get actual & constant data",
                      "pm.test(\"Contains: rows, time, total\", function () {",
                      "    //pm.expect(pm.response.text()).to.include(\"Total\");",
                      "});",
                      "",
                      "//Headers",
                      "pm.test(\"Contains: Headers\", function () {",
                      "    pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/csv');",
                      "    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');",
                      "    pm.expect(pm.response.headers.get('Content-Disposition')).to.eql('attachment; filename=Postman: SSP Report (updated) for 2020-01-01 - 2020-01-03 CUMULATIVE.csv');",
                      "    pm.expect(pm.response.headers.get('Cache-Control')).to.eql('no-cache, no-store, max-age=0, must-revalidate');",
                      "    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
                      "    pm.expect(pm.response.headers.get('X-XSS-Protection')).to.eql('1; mode=block');",
                      "    pm.expect(pm.response.headers.get('Expires')).to.eql('0');        ",
                      "    pm.expect(pm.response.headers.get('X-Frame-Options')).to.eql('DENY');    ",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "4db28be3-f1f4-4337-bf85-effed147cddf"
                  }
                }
              ],
              "id": "c90c8f7e-89df-45b5-bfc6-255d8d165a9f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/_download?format=CSV",
                  "host": [
                    "{{protocol}}{{server}}",
                    "{{domain}}"
                  ],
                  "path": [
                    "api",
                    "{{api_version}}",
                    "reports",
                    "{{reportId}}",
                    "_download"
                  ],
                  "query": [
                    {
                      "key": "format",
                      "value": "CSV"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Download_xls_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Content",
                      "//TODO Sample data is required to get actual & constant data",
                      "pm.test(\"Contains: rows, time, total\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"sheet1.xml\");",
                      "});",
                      "",
                      "//Headers",
                      "pm.test(\"Contains: Headers\", function () {",
                      "    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');",
                      "    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');",
                      "    pm.expect(pm.response.headers.get('Content-Disposition')).to.eql('attachment; filename=Postman: SSP Report (updated) for 2020-01-01 - 2020-01-03 CUMULATIVE.xlsx');",
                      "    pm.expect(pm.response.headers.get('Cache-Control')).to.eql('no-cache, no-store, max-age=0, must-revalidate');",
                      "    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
                      "    pm.expect(pm.response.headers.get('X-XSS-Protection')).to.eql('1; mode=block');",
                      "    pm.expect(pm.response.headers.get('Expires')).to.eql('0');        ",
                      "    pm.expect(pm.response.headers.get('X-Frame-Options')).to.eql('DENY');    ",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "bc11bae8-bf6c-4ecf-847f-d1951fde738c"
                  }
                }
              ],
              "id": "c43035e5-7eb6-44a3-9c23-981518a6c232",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/_download?format=XLSX",
                  "host": [
                    "{{protocol}}{{server}}",
                    "{{domain}}"
                  ],
                  "path": [
                    "api",
                    "{{api_version}}",
                    "reports",
                    "{{reportId}}",
                    "_download"
                  ],
                  "query": [
                    {
                      "key": "format",
                      "value": "XLSX"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Download_xls_unsaved_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Content",
                      "//TODO Sample data is required to get actual & constant data",
                      "pm.test(\"Contains: rows, time, total\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"sheet1.xml\");",
                      "});",
                      "",
                      "//Headers",
                      "pm.test(\"Contains: Headers\", function () {",
                      "    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');",
                      "    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');",
                      "    pm.expect(pm.response.headers.get('Content-Disposition')).to.include('attachment; filename=Report for');",
                      "    pm.expect(pm.response.headers.get('Cache-Control')).to.eql('no-cache, no-store, max-age=0, must-revalidate');",
                      "    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
                      "    pm.expect(pm.response.headers.get('X-XSS-Protection')).to.eql('1; mode=block');",
                      "    pm.expect(pm.response.headers.get('Expires')).to.eql('0');        ",
                      "    pm.expect(pm.response.headers.get('X-Frame-Options')).to.eql('DENY');    ",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "eddc0040-0ce6-4eff-a49b-121e90530fe3"
                  }
                }
              ],
              "id": "0aecbcd5-d2d8-4418-8ad2-885d8fe4eac1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/_download?report={\"id\":null,\"name\":null,\"custom\":true,\"datasourceType\":\"FINANCIAL\",\"dimensions\":[\"DSP_GROUP\"],\"filter\":{\"adPodLayouts\":null,\"adTypes\":null,\"adUnits\":null,\"adomains\":null,\"advertisers\":null,\"appBundles\":null,\"appNames\":null,\"campaigns\":null,\"cities\":null,\"congressionalDistricts\":null,\"counties\":null,\"countries\":null,\"creatives\":null,\"deals\":null,\"devices\":null,\"dmas\":null,\"dspGroups\":null,\"dspRespStates\":null,\"dspTypes\":null,\"dsps\":null,\"impressionTypes\":null,\"inventories\":null,\"inventoryGroups\":null,\"inventoryTypes\":null,\"makes\":null,\"models\":null,\"noBidReasons\":null,\"periods\":null,\"publisherGroups\":null,\"publishers\":null,\"sizes\":null,\"ssps\":null,\"states\":null,\"streams\":null},\"granularity\":\"HOUR\",\"metrics\":[\"EXT_BID_FLOOR_AVG\"],\"period\":{\"start\":null,\"end\":null,\"type\":\"TODAY\"},\"personal\":true,\"schedule\":null,\"timeZone\":\"Europe/Athens\",\"type\":\"DSP\",\"user\":null}&format=XLSX",
                  "host": [
                    "{{protocol}}{{server}}",
                    "{{domain}}"
                  ],
                  "path": [
                    "api",
                    "{{api_version}}",
                    "reports",
                    "_download"
                  ],
                  "query": [
                    {
                      "key": "report",
                      "value": "{\"id\":null,\"name\":null,\"custom\":true,\"datasourceType\":\"FINANCIAL\",\"dimensions\":[\"DSP_GROUP\"],\"filter\":{\"adPodLayouts\":null,\"adTypes\":null,\"adUnits\":null,\"adomains\":null,\"advertisers\":null,\"appBundles\":null,\"appNames\":null,\"campaigns\":null,\"cities\":null,\"congressionalDistricts\":null,\"counties\":null,\"countries\":null,\"creatives\":null,\"deals\":null,\"devices\":null,\"dmas\":null,\"dspGroups\":null,\"dspRespStates\":null,\"dspTypes\":null,\"dsps\":null,\"impressionTypes\":null,\"inventories\":null,\"inventoryGroups\":null,\"inventoryTypes\":null,\"makes\":null,\"models\":null,\"noBidReasons\":null,\"periods\":null,\"publisherGroups\":null,\"publishers\":null,\"sizes\":null,\"ssps\":null,\"states\":null,\"streams\":null},\"granularity\":\"HOUR\",\"metrics\":[\"EXT_BID_FLOOR_AVG\"],\"period\":{\"start\":null,\"end\":null,\"type\":\"TODAY\"},\"personal\":true,\"schedule\":null,\"timeZone\":\"Europe/Athens\",\"type\":\"DSP\",\"user\":null}"
                    },
                    {
                      "key": "format",
                      "value": "XLSX"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Download_csv_unsaved_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Content",
                      "//TODO Sample data is required to get actual & constant data",
                      "pm.test(\"Contains: rows, time, total\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Time\");",
                      "});",
                      "",
                      "//Headers",
                      "pm.test(\"Contains: Headers\", function () {",
                      "    pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/csv');",
                      "    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');",
                      "    pm.expect(pm.response.headers.get('Content-Disposition')).to.include('attachment; filename=Report for');",
                      "    pm.expect(pm.response.headers.get('Cache-Control')).to.eql('no-cache, no-store, max-age=0, must-revalidate');",
                      "    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
                      "    pm.expect(pm.response.headers.get('X-XSS-Protection')).to.eql('1; mode=block');",
                      "    pm.expect(pm.response.headers.get('Expires')).to.eql('0');        ",
                      "    pm.expect(pm.response.headers.get('X-Frame-Options')).to.eql('DENY');    ",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "8387f53b-fc0f-4b61-91ed-851660291645"
                  }
                }
              ],
              "id": "4c66250b-566e-4a7d-8590-fc66c519648c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/_download?report={\"id\":null,\"name\":null,\"custom\":true,\"datasourceType\":\"FINANCIAL\",\"dimensions\":[\"DSP_GROUP\"],\"filter\":{\"adPodLayouts\":null,\"adTypes\":null,\"adUnits\":null,\"adomains\":null,\"advertisers\":null,\"appBundles\":null,\"appNames\":null,\"campaigns\":null,\"cities\":null,\"congressionalDistricts\":null,\"counties\":null,\"countries\":null,\"creatives\":null,\"deals\":null,\"devices\":null,\"dmas\":null,\"dspGroups\":null,\"dspRespStates\":null,\"dspTypes\":null,\"dsps\":null,\"impressionTypes\":null,\"inventories\":null,\"inventoryGroups\":null,\"inventoryTypes\":null,\"makes\":null,\"models\":null,\"noBidReasons\":null,\"periods\":null,\"publisherGroups\":null,\"publishers\":null,\"sizes\":null,\"ssps\":null,\"states\":null,\"streams\":null},\"granularity\":\"HOUR\",\"metrics\":[\"EXT_BID_FLOOR_AVG\"],\"period\":{\"start\":null,\"end\":null,\"type\":\"TODAY\"},\"personal\":true,\"schedule\":null,\"timeZone\":\"Europe/Athens\",\"type\":\"DSP\",\"user\":null}&format=CSV",
                  "host": [
                    "{{protocol}}{{server}}",
                    "{{domain}}"
                  ],
                  "path": [
                    "api",
                    "{{api_version}}",
                    "reports",
                    "_download"
                  ],
                  "query": [
                    {
                      "key": "report",
                      "value": "{\"id\":null,\"name\":null,\"custom\":true,\"datasourceType\":\"FINANCIAL\",\"dimensions\":[\"DSP_GROUP\"],\"filter\":{\"adPodLayouts\":null,\"adTypes\":null,\"adUnits\":null,\"adomains\":null,\"advertisers\":null,\"appBundles\":null,\"appNames\":null,\"campaigns\":null,\"cities\":null,\"congressionalDistricts\":null,\"counties\":null,\"countries\":null,\"creatives\":null,\"deals\":null,\"devices\":null,\"dmas\":null,\"dspGroups\":null,\"dspRespStates\":null,\"dspTypes\":null,\"dsps\":null,\"impressionTypes\":null,\"inventories\":null,\"inventoryGroups\":null,\"inventoryTypes\":null,\"makes\":null,\"models\":null,\"noBidReasons\":null,\"periods\":null,\"publisherGroups\":null,\"publishers\":null,\"sizes\":null,\"ssps\":null,\"states\":null,\"streams\":null},\"granularity\":\"HOUR\",\"metrics\":[\"EXT_BID_FLOOR_AVG\"],\"period\":{\"start\":null,\"end\":null,\"type\":\"TODAY\"},\"personal\":true,\"schedule\":null,\"timeZone\":\"Europe/Athens\",\"type\":\"DSP\",\"user\":null}"
                    },
                    {
                      "key": "format",
                      "value": "CSV"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Share_csv_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Headers",
                      "pm.test(\"Contains: Headers\", function () {",
                      "    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');",
                      "    pm.expect(pm.response.headers.get('Cache-Control')).to.eql('no-cache, no-store, max-age=0, must-revalidate');",
                      "    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
                      "    pm.expect(pm.response.headers.get('X-XSS-Protection')).to.eql('1; mode=block');",
                      "    pm.expect(pm.response.headers.get('Expires')).to.eql('0');        ",
                      "    pm.expect(pm.response.headers.get('X-Frame-Options')).to.eql('DENY');    ",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "e045047d-445d-4a1d-8e6c-0397f10aec40"
                  }
                }
              ],
              "id": "ef225a57-f340-4cdb-ae4f-b6dcc70241b9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": null,\n    \"report\": {\n        \"id\": {{reportId}},\n        \"name\": \"Postman: SSP Report (updated)\",\n        \"custom\": true,\n        \"dimensions\": [],\n        \"filter\": {\n            \"adomains\": null,\n            \"adTypes\": null,\n            \"adUnits\": null,\n            \"advertisers\": null,\n            \"appBundles\": null,\n            \"appNames\": null,\n            \"browsers\": null,\n            \"campaigns\": null,\n            \"carriers\": null,\n            \"cities\": null,\n            \"congressionalDistricts\": null,\n            \"connections\": null,\n            \"counties\": null,\n            \"countries\": null,\n            \"creatives\": null,\n            \"deals\": null,\n            \"devices\": null,\n            \"dmas\": null,\n            \"dsps\": null,\n            \"dspRespStates\": null,\n            \"dspTypes\": null,\n            \"houseAd\": null,\n            \"inventories\": null,\n            \"inventoryGroups\": null,\n            \"inventoryTypes\": null,\n            \"makes\": null,\n            \"models\": null,\n            \"noBidReasons\": null,\n            \"oses\": null,\n            \"periods\": null,\n            \"platforms\": null,\n            \"publisherGroups\": null,\n            \"seriesNames\": null,\n            \"sizes\": null,\n            \"ssps\": null,\n            \"streams\": null,\n            \"states\": null\n        },\n        \"granularity\": \"CUMULATIVE\",\n        \"metrics\": [],\n        \"period\": {\n            \"type\": \"CUSTOM\",\n            \"start\": \"2020-01-01\",\n            \"end\": \"2020-01-03\"\n        },\n        \"personal\": false,\n        \"schedule\": null,\n        \"timeZone\": \"Europe/Athens\",\n        \"type\": \"SSP\",\n        \"user\": {\n            \"id\": 1,\n            \"advertisers\": [],\n            \"client\": null,\n            \"dsps\": [],\n            \"email\": null,\n            \"firstName\": \"TEST\",\n            \"lastName\": \"Admin\",\n            \"role\": null,\n            \"ssps\": [],\n            \"status\": null,\n            \"timeZone\": null,\n            \"name\": \"TEST Admin\"\n        }\n    },\n    \"reportId\": {{reportId}},\n    \"emails\": [\n        {{emailToShareReport}}\n    ],\n    \"frequency\": null,\n    \"period\": {\n        \"type\": \"TODAY\",\n        \"start\": null,\n        \"end\": null\n    },\n    \"granularity\": \"HOUR\",\n    \"subject\": \"Postman: Share report as CSV\",\n    \"body\": \"Body:\\nPostman: Share report as CSV\",\n    \"format\": \"CSV\"\n}"
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/_share"
              },
              "response": []
            },
            {
              "name": "Share_xls_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Headers",
                      "pm.test(\"Contains: Headers\", function () {",
                      "    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');",
                      "    pm.expect(pm.response.headers.get('Cache-Control')).to.eql('no-cache, no-store, max-age=0, must-revalidate');",
                      "    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
                      "    pm.expect(pm.response.headers.get('X-XSS-Protection')).to.eql('1; mode=block');",
                      "    pm.expect(pm.response.headers.get('Expires')).to.eql('0');        ",
                      "    pm.expect(pm.response.headers.get('X-Frame-Options')).to.eql('DENY');    ",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "52d91542-5603-434b-b37c-31b5c643d430"
                  }
                }
              ],
              "id": "d4fdac12-d315-4f6e-8280-9c129bc04be8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": null,\n    \"report\": {\n        \"id\": {{reportId}},\n        \"name\": \"Postman: SSP Report (updated)\",\n        \"custom\": true,\n        \"dimensions\": [],\n        \"filter\": {\n            \"adomains\": null,\n            \"adTypes\": null,\n            \"adUnits\": null,\n            \"advertisers\": null,\n            \"appBundles\": null,\n            \"appNames\": null,\n            \"browsers\": null,\n            \"campaigns\": null,\n            \"carriers\": null,\n            \"cities\": null,\n            \"congressionalDistricts\": null,\n            \"connections\": null,\n            \"counties\": null,\n            \"countries\": null,\n            \"creatives\": null,\n            \"deals\": null,\n            \"devices\": null,\n            \"dmas\": null,\n            \"dsps\": null,\n            \"dspRespStates\": null,\n            \"dspTypes\": null,\n            \"houseAd\": null,\n            \"inventories\": null,\n            \"inventoryGroups\": null,\n            \"inventoryTypes\": null,\n            \"makes\": null,\n            \"models\": null,\n            \"noBidReasons\": null,\n            \"oses\": null,\n            \"periods\": null,\n            \"platforms\": null,\n            \"publisherGroups\": null,\n            \"seriesNames\": null,\n            \"sizes\": null,\n            \"ssps\": null,\n            \"streams\": null,\n            \"states\": null\n        },\n        \"granularity\": \"CUMULATIVE\",\n        \"metrics\": [],\n        \"period\": {\n            \"type\": \"CUSTOM\",\n            \"start\": \"2020-01-01\",\n            \"end\": \"2020-01-03\"\n        },\n        \"personal\": false,\n        \"schedule\": null,\n        \"timeZone\": \"Europe/Athens\",\n        \"type\": \"SSP\",\n        \"user\": {\n            \"id\": 1,\n            \"advertisers\": [],\n            \"client\": null,\n            \"dsps\": [],\n            \"email\": null,\n            \"firstName\": \"TEST\",\n            \"lastName\": \"Admin\",\n            \"role\": null,\n            \"ssps\": [],\n            \"status\": null,\n            \"timeZone\": null,\n            \"name\": \"TEST Admin\"\n        }\n    },\n    \"reportId\": {{reportId}},\n    \"emails\": [\n        {{emailToShareReport}}\n    ],\n    \"frequency\": null,\n    \"period\": {\n        \"type\": \"TODAY\",\n        \"start\": null,\n        \"end\": null\n    },\n    \"granularity\": \"HOUR\",\n    \"subject\": \"Postman: Share report as XLSX\",\n    \"body\": \"Body:\\nPostman: Share report as XLSX\",\n    \"format\": \"XLSX\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/_share"
              },
              "response": []
            },
            {
              "name": "Share_csv_unsaved_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Headers",
                      "pm.test(\"Contains: Headers\", function () {",
                      "    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');",
                      "    pm.expect(pm.response.headers.get('Cache-Control')).to.eql('no-cache, no-store, max-age=0, must-revalidate');",
                      "    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
                      "    pm.expect(pm.response.headers.get('X-XSS-Protection')).to.eql('1; mode=block');",
                      "    pm.expect(pm.response.headers.get('Expires')).to.eql('0');        ",
                      "    pm.expect(pm.response.headers.get('X-Frame-Options')).to.eql('DENY');    ",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "5b5a9a4b-2556-4b61-9658-aa78da35eade"
                  }
                }
              ],
              "id": "51dbe5e3-0c0d-49b3-9794-433feb97a913",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": null,\n    \"report\": {\n        \"id\": null,\n        \"name\": null,\n        \"custom\": true,\n        \"datasourceType\": \"FINANCIAL\",\n        \"dimensions\": [\n            \"DSP_GROUP\"\n        ],\n        \"filter\": {\n            \"adPodLayouts\": null,\n            \"adTypes\": null,\n            \"adUnits\": null,\n            \"adomains\": null,\n            \"advertisers\": null,\n            \"appBundles\": null,\n            \"appNames\": null,\n            \"campaigns\": null,\n            \"cities\": null,\n            \"congressionalDistricts\": null,\n            \"counties\": null,\n            \"countries\": null,\n            \"creatives\": null,\n            \"deals\": null,\n            \"devices\": null,\n            \"dmas\": null,\n            \"dspGroups\": null,\n            \"dspRespStates\": null,\n            \"dspTypes\": null,\n            \"dsps\": null,\n            \"impressionTypes\": null,\n            \"inventories\": null,\n            \"inventoryGroups\": null,\n            \"inventoryTypes\": null,\n            \"makes\": null,\n            \"models\": null,\n            \"noBidReasons\": null,\n            \"periods\": null,\n            \"publisherGroups\": null,\n            \"publishers\": null,\n            \"sizes\": null,\n            \"ssps\": null,\n            \"states\": null,\n            \"streams\": null\n        },\n        \"granularity\": \"HOUR\",\n        \"metrics\": [\n            \"EXT_BID_FLOOR_AVG\"\n        ],\n        \"period\": {\n            \"start\": null,\n            \"end\": null,\n            \"type\": \"TODAY\"\n        },\n        \"personal\": true,\n        \"schedule\": null,\n        \"timeZone\": \"Europe/Athens\",\n        \"type\": \"DSP\",\n        \"user\": null\n    },\n    \"reportId\": null,\n    \"emails\": [{{emailToShareReport}}],\n    \"frequency\": null,\n    \"period\": {\n        \"type\": \"TODAY\",\n        \"start\": null,\n        \"end\": null\n    },\n    \"granularity\": \"CUMULATIVE\",\n    \"subject\": \"Postman: Share unsaved report as CSV\",\n    \"body\": \"Body:\\nPostman: Share unsaved report as CSV\",\n    \"format\": \"CSV\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/_share"
              },
              "response": []
            },
            {
              "name": "Share_xls_unsaved_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Headers",
                      "pm.test(\"Contains: Headers\", function () {",
                      "    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');",
                      "    pm.expect(pm.response.headers.get('Cache-Control')).to.eql('no-cache, no-store, max-age=0, must-revalidate');",
                      "    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
                      "    pm.expect(pm.response.headers.get('X-XSS-Protection')).to.eql('1; mode=block');",
                      "    pm.expect(pm.response.headers.get('Expires')).to.eql('0');        ",
                      "    pm.expect(pm.response.headers.get('X-Frame-Options')).to.eql('DENY');    ",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "cee4f87d-3108-49e9-bcce-5fc4cc16e610"
                  }
                }
              ],
              "id": "680d2fd7-010f-4171-9c49-2c54af04c882",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": null,\n    \"report\": {\n        \"id\": null,\n        \"name\": null,\n        \"custom\": true,\n        \"datasourceType\": \"FINANCIAL\",\n        \"dimensions\": [\n            \"DSP_GROUP\"\n        ],\n        \"filter\": {\n            \"adPodLayouts\": null,\n            \"adTypes\": null,\n            \"adUnits\": null,\n            \"adomains\": null,\n            \"advertisers\": null,\n            \"appBundles\": null,\n            \"appNames\": null,\n            \"campaigns\": null,\n            \"cities\": null,\n            \"congressionalDistricts\": null,\n            \"counties\": null,\n            \"countries\": null,\n            \"creatives\": null,\n            \"deals\": null,\n            \"devices\": null,\n            \"dmas\": null,\n            \"dspGroups\": null,\n            \"dspRespStates\": null,\n            \"dspTypes\": null,\n            \"dsps\": null,\n            \"impressionTypes\": null,\n            \"inventories\": null,\n            \"inventoryGroups\": null,\n            \"inventoryTypes\": null,\n            \"makes\": null,\n            \"models\": null,\n            \"noBidReasons\": null,\n            \"periods\": null,\n            \"publisherGroups\": null,\n            \"publishers\": null,\n            \"sizes\": null,\n            \"ssps\": null,\n            \"states\": null,\n            \"streams\": null\n        },\n        \"granularity\": \"HOUR\",\n        \"metrics\": [\n            \"EXT_BID_FLOOR_AVG\"\n        ],\n        \"period\": {\n            \"start\": null,\n            \"end\": null,\n            \"type\": \"TODAY\"\n        },\n        \"personal\": true,\n        \"schedule\": null,\n        \"timeZone\": \"Europe/Athens\",\n        \"type\": \"DSP\",\n        \"user\": null\n    },\n    \"reportId\": null,\n    \"emails\": [{{emailToShareReport}}],\n    \"frequency\": null,\n    \"period\": {\n        \"type\": \"TODAY\",\n        \"start\": null,\n        \"end\": null\n    },\n    \"granularity\": \"CUMULATIVE\",\n    \"subject\": \"Postman: Share unsaved report as XLSX\",\n    \"body\": \"Body:\\nPostman: Share unsaved report as XLSX\",\n    \"format\": \"XLSX\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/_share"
              },
              "response": []
            },
            {
              "name": "Delete_not_exist_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "",
                      "//Error message [TMP-1166]",
                      "pm.test(\"Error message\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Resource is not found\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "7e1fed1b-3546-42f3-9656-c90c1d11ed4f"
                  }
                }
              ],
              "id": "fef3504a-b7ca-488f-add4-583e9a17d092",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/-1"
              },
              "response": []
            },
            {
              "name": "Delete_no_id_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 500\"] = responseCode.code === 500;",
                      "",
                      "//Error message",
                      "pm.test(\"Error message\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Request method 'DELETE' not supported\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "bf5579cd-829b-4ba0-bdaa-1df5ce4a1919"
                  }
                }
              ],
              "id": "e12009fe-d83e-4486-ad14-f7b88ba8246d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
              },
              "response": []
            },
            {
              "name": "Delete_ssp_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Clear reportId variable",
                      "pm.environment.set(\"reportId\", \"\");"
                    ],
                    "type": "text/javascript",
                    "id": "021120f3-4c98-4f2f-8c1b-8f07a919a9fd"
                  }
                }
              ],
              "id": "b576dcbd-4026-49cb-bcd6-758c0a379d81",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
              },
              "response": []
            },
            {
              "name": "Get_not_exist_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 404\"] = responseCode.code === 404;",
                      "",
                      "//Error message [TMP-1166]",
                      "pm.test(\"Error message\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Resource is not found\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "d24b4b75-4fd0-4af1-9a68-751ad3e18b6b"
                  }
                }
              ],
              "id": "1effd014-6115-47f5-a32a-efafec8ab2bc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/-1"
              },
              "response": []
            },
            {
              "name": "Back to defaults",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Get version",
                      "var jsonData = pm.response.json();",
                      "",
                      "//Send current environment name to Test Results",
                      "tests[\"Environment name: \" + pm.environment.name] = jsonData.length !== 0;",
                      "",
                      "//Send app version to Test Results",
                      "tests[\"Backend version: \" + jsonData.version] = responseCode.code == 200;",
                      "",
                      "//TODO think about how to send notification about inbox checking",
                      "//Alert to check arrived emails (Share report)",
                      "tests[\"!!! Check inbox for arrived emails (4): csv,csv(unsaved),xlsx,xlsx(unsaved)) !!!\"] = responseCode.code == 200;",
                      "",
                      "//Send app version to console",
                      "console.log(\"Environment name:\", pm.environment.name);",
                      "console.log(\"Backend version:\", jsonData.version);",
                      "",
                      "//Clear variables",
                      "pm.environment.set(\"token\", \"\");",
                      "pm.environment.set(\"reportId\", \"\");"
                    ],
                    "type": "text/javascript",
                    "id": "a263318c-19de-4f44-8d05-759149674b13"
                  }
                }
              ],
              "id": "dadc0eba-fd85-47fc-9c83-518e8ced2d74",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}",
                    "type": "text"
                  }
                ],
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/environment"
              },
              "response": []
            }
          ],
          "id": "fd9c1919-4ddb-46e0-a9ad-34e22079f8c2"
        },
        {
          "name": "DSP",
          "item": [
            {
              "name": "Login_admin",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Set token variable",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"token\", jsonData.token);"
                    ],
                    "type": "text/javascript",
                    "id": "b5697959-03ea-4e2e-8138-8216d85e139f"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "//Save current time before start",
                      "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                    ],
                    "type": "text/javascript",
                    "id": "024fc280-b220-45a5-83e1-06fc8c82bb6a"
                  }
                }
              ],
              "id": "35293b53-709b-4f69-96e9-bd37681d137e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": ""
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
              },
              "response": []
            },
            {
              "name": "Create_dsp_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Content",
                      "pm.test(\"Contains: id, type, name, timeZone, granularity, period, ownership, user\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"DSP\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"custom\\\":true\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: DSP Report\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"timeZone\\\":\\\"Africa/Addis_Ababa\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"granularity\\\":\\\"HOUR\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"TODAY\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"start\\\":null\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"end\\\":null\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"personal\\\":true\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"firstName\\\":\\\"TEST\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"lastName\\\":\\\"Admin\\\"\");",
                      "});",
                      "",
                      "//Set reportId variable",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.environment.set(\"reportId\", jsonData.id);"
                    ],
                    "type": "text/javascript",
                    "id": "e602ec42-630d-48ad-8e2b-d5a36222da40"
                  }
                }
              ],
              "id": "3ad115e7-d4a2-4d4b-88a7-1d2b128881d0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: DSP Report\",\n    \"datasourceType\": \"STANDARD\",\n    \"custom\": true,\n    \"dimensions\": [],\n    \"filter\": {\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"browsers\": null,\n        \"campaigns\": null,\n        \"carriers\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"connections\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"houseAd\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"oses\": null,\n        \"periods\": null,\n        \"platforms\": null,\n        \"publisherGroups\": null,\n        \"seriesNames\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"HOUR\",\n    \"metrics\": [],\n    \"period\": {\n        \"start\": null,\n        \"end\": null,\n        \"type\": \"TODAY\"\n    },\n    \"personal\": true,\n    \"schedule\": null,\n    \"timeZone\": \"Africa/Addis_Ababa\",\n    \"type\": \"DSP\",\n    \"user\": null\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
              },
              "response": []
            },
            {
              "name": "Get_all_reports",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//TODO: Sample data is required",
                      "pm.test(\"Contains allowed reports\", function () {",
                      "//    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"???\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"DSP\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"SSP\\\"\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "b3ff1ea2-0f76-4635-892f-de1afac70319"
                  }
                }
              ],
              "id": "5c185753-41d8-4f6b-bc7c-bab9107e5cbf",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
              },
              "response": []
            },
            {
              "name": "Get_ssp_reports",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Content",
                      "pm.test(\"Not contains DSP reports\", function () {",
                      "        pm.expect(pm.response.text()).to.not.include(\"\\\"type\\\":\\\"DSP\\\"\");",
                      "});",
                      "",
                      "//TODO: Sample data is required",
                      "pm.test(\"Contains allowed SSP reports\", function () {",
                      "//    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"???\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"SSP\\\"\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "02fcf420-8273-4949-93b7-0ef9ac97d087"
                  }
                }
              ],
              "id": "ea43ee7b-3300-45ed-b2e7-a22f6886d349",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports?type=SSP",
                  "host": [
                    "{{protocol}}{{server}}",
                    "{{domain}}"
                  ],
                  "path": [
                    "api",
                    "{{api_version}}",
                    "reports"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "SSP"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get_dsp_reports",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Content",
                      "pm.test(\"Not contains SSP reports\", function () {",
                      "        pm.expect(pm.response.text()).to.not.include(\"\\\"type\\\":\\\"SSP\\\"\");",
                      "});",
                      "",
                      "//TODO: Sample data is required",
                      "pm.test(\"Contains allowed DSP reports\", function () {",
                      "//    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"???\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"DSP\\\"\");",
                      "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: DSP Report\\\"\");",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "a3948d8f-de44-434d-be69-286396520373"
                  }
                }
              ],
              "id": "d5ee6959-1514-41a8-b295-8517c0584e0e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports?type=DSP",
                  "host": [
                    "{{protocol}}{{server}}",
                    "{{domain}}"
                  ],
                  "path": [
                    "api",
                    "{{api_version}}",
                    "reports"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "DSP"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete_dsp_report",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Status code",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "//Clear reportId variable",
                      "pm.environment.set(\"reportId\", \"\");"
                    ],
                    "type": "text/javascript",
                    "id": "ebe8fb3f-180f-4962-88c5-bb71a33953ed"
                  }
                }
              ],
              "id": "8db7c83c-22cf-4eb0-b10a-8a90b2138fdd",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
              },
              "response": []
            },
            {
              "name": "Back to defaults",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//Get version",
                      "var jsonData = pm.response.json();",
                      "",
                      "//Send current environment name to Test Results",
                      "tests[\"Environment name: \" + pm.environment.name] = jsonData.length !== 0;",
                      "",
                      "//Send app version to Test Results",
                      "tests[\"Backend version: \" + jsonData.version] = responseCode.code == 200;",
                      "",
                      "//TODO think about how to send notification about inbox checking",
                      "//Alert to check arrived emails (Share report)",
                      "tests[\"!!! Check inbox for arrived emails (4): csv,csv(unsaved),xlsx,xlsx(unsaved)) !!!\"] = responseCode.code == 200;",
                      "",
                      "//Send app version to console",
                      "console.log(\"Environment name:\", pm.environment.name);",
                      "console.log(\"Backend version:\", jsonData.version);",
                      "",
                      "//Clear variables",
                      "pm.environment.set(\"token\", \"\");",
                      "pm.environment.set(\"reportId\", \"\");"
                    ],
                    "type": "text/javascript",
                    "id": "4702a8af-8081-4c9b-bd67-d586a3ca02be"
                  }
                }
              ],
              "id": "faa755e4-7d8a-41fa-b4fa-28f43362f7eb",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Authorization",
                    "value": "Bearer {{token}}",
                    "type": "text"
                  }
                ],
                "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/environment"
              },
              "response": []
            }
          ],
          "id": "1f375d80-510b-41f7-8cbc-73e9bb3164ca"
        },
        {
          "name": "Metrics",
          "item": [
            {
              "name": "DSP",
              "item": [
                {
                  "name": "Login_admin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Set token variable",
                          "var jsonData = JSON.parse(responseBody);",
                          "pm.environment.set(\"token\", jsonData.token);"
                        ],
                        "type": "text/javascript",
                        "id": "5d918a88-24f4-48b8-8dc2-101bc85e635b"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "//Save current time before start",
                          "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                        ],
                        "type": "text/javascript",
                        "id": "cdbbca9b-74c0-4efc-b6ba-a3ed5179ba53"
                      }
                    }
                  ],
                  "id": "9a536e41-e25a-4d5c-af40-c5b4926e584c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": ""
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
                    },
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
                  },
                  "response": []
                },
                {
                  "name": "Get_columns_order_for_reports",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains columns\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DSP_GROUP\\\",\\\"DSP_TYPE\\\",\\\"DSP\\\",\\\"PUBLISHER_GROUP\\\",\\\"SSP\\\",\\\"PUBLISHER_ID\\\",\\\"INVENTORY_GROUP\\\",\\\"INVENTORY_TYPE\\\",\\\"INVENTORY_ID\\\",\\\"AD_UNIT_GROUP\\\",\\\"AD_TYPE\\\",\\\"AD_UNIT\\\",\\\"APP_NAME\\\",\\\"APP_BUNDLE\\\",\\\"AD_POD_LAYOUT\\\",\\\"IMPRESSION_TYPE\\\",\\\"DSP_DEAL_ID\\\",\\\"ADVERTISER\\\",\\\"ADOMAIN\\\",\\\"CAMPAIGN\\\",\\\"DSP_RESP_STATE\\\",\\\"NO_BID_REASON\\\",\\\"USED_SEGMENTS\\\",\\\"DEVICE\\\",\\\"MAKE\\\",\\\"MODEL\\\",\\\"OS\\\",\\\"COUNTRY\\\",\\\"STATE\\\",\\\"CITY\\\",\\\"DMA\\\",\\\"CONGRESSIONAL_DISTRICT\\\",\\\"COUNTY\\\",\\\"CREATIVE\\\",\\\"SIZE\\\",\\\"EXT_DURATION\\\",\\\"INT_DURATION\\\",\\\"INT_CAT\\\",\\\"EXT_BID_FLOOR_AVG\\\",\\\"EXT_CPM\\\",\\\"EXT_IMP_PRICE\\\",\\\"EXT_BID_AVG\\\",\\\"INT_BID_FLOOR_AVG\\\",\\\"INT_CPM\\\",\\\"INT_IMP_PRICE\\\",\\\"INT_AVERAGE_BID\\\",\\\"EXT_PLATFORM_PROFIT\\\",\\\"EXT_REQS\\\",\\\"EXT_RESPS\\\",\\\"EXT_NO_BIDS\\\",\\\"EXT_BIDS\\\",\\\"EXT_WINS\\\",\\\"EXT_IMPS\\\",\\\"EXT_NO_BID_RATE\\\",\\\"EXT_BID_RATE\\\",\\\"EXT_WIN_RATE\\\",\\\"EXT_FILLRATE\\\",\\\"EXT_INVERSE_FILLRATE\\\",\\\"EXT_BID_WIN_RATE\\\",\\\"EXT_BID_FILL_RATE\\\",\\\"EXT_WIN_FILL_RATE\\\",\\\"EXT_IFA\\\",\\\"EXT_RPS\\\",\\\"EXT_VAST_START\\\",\\\"EXT_VAST_CLOSE\\\",\\\"EXT_VAST_ERROR\\\",\\\"EXT_VAST_FIRST_QUARTILE\\\",\\\"EXT_VAST_MIDPOINT\\\",\\\"EXT_VAST_THIRD_QUARTILE\\\",\\\"EXT_VAST_COMPLETE\\\",\\\"EXT_VAST_START_RATE\\\",\\\"EXT_VAST_FIRST_QUARTILE_RATE\\\",\\\"EXT_VAST_MIDPOINT_RATE\\\",\\\"EXT_VAST_THIRD_QUARTILE_RATE\\\",\\\"EXT_VAST_COMPLETE_RATE\\\",\\\"EXT_VAST_CLOSE_RATE\\\",\\\"EXT_CPVC\\\",\\\"EXT_TRANSCODINGS\\\",\\\"EXT_TRANSCODING_ERRORS\\\",\\\"EXT_PIXALATE_REQUESTS\\\",\\\"EXT_PIXALATE_BEACONS_FIRED\\\",\\\"INT_BID_FLOOR_GROSS_AVG\\\",\\\"INT_GROSS_CPM\\\",\\\"INT_GROSS_IMP_PRICE\\\",\\\"INT_AVERAGE_GROSS_BID\\\",\\\"INT_PLATFORM_PROFIT\\\",\\\"INT_DEMAND_PROFIT\\\",\\\"INT_TOTAL_PROFIT\\\",\\\"INT_REQS\\\",\\\"INT_RESPS\\\",\\\"INT_REQS_OPPORTUNITY\\\",\\\"INT_NO_BIDS\\\",\\\"INT_BIDS\\\",\\\"INT_WINS\\\",\\\"INT_IMPS\\\",\\\"INT_ERR\\\",\\\"INT_NO_BID_RATE\\\",\\\"INT_BID_RATE\\\",\\\"INT_WIN_RATE\\\",\\\"INT_FILLRATE\\\",\\\"INT_BID_WIN_RATE\\\",\\\"INT_BID_FILL_RATE\\\",\\\"INT_WIN_FILL_RATE\\\",\\\"INT_ERR_RATE\\\",\\\"INT_IFA\\\",\\\"INT_CLICKS\\\",\\\"INT_CTR\\\",\\\"INT_RPS\\\",\\\"INT_VAST_START\\\",\\\"INT_VAST_CLOSE\\\",\\\"INT_VAST_ERROR\\\",\\\"INT_VAST_FIRST_QUARTILE\\\",\\\"INT_VAST_MIDPOINT\\\",\\\"INT_VAST_THIRD_QUARTILE\\\",\\\"INT_VAST_COMPLETE\\\",\\\"INT_VAST_START_RATE\\\",\\\"INT_VAST_FIRST_QUARTILE_RATE\\\",\\\"INT_VAST_MIDPOINT_RATE\\\",\\\"INT_VAST_THIRD_QUARTILE_RATE\\\",\\\"INT_VAST_COMPLETE_RATE\\\",\\\"INT_VAST_ENGAGEMENT_RATE\\\",\\\"INT_VAST_CLOSE_RATE\\\",\\\"INT_CPVC\\\",\\\"INT_TRANSCODINGS\\\",\\\"INT_TRANSCODING_ERRORS\\\",\\\"INT_CAMPAIGN_CPM\\\",\\\"INT_CAMPAIGN_IMP_PRICE\\\",\\\"INT_SEGMENTS_CPM\\\",\\\"INT_SEGMENTS_FEE\\\",\\\"INT_SEGMENTS_PROFIT\\\"\");",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "eb6ab135-c8ee-43b2-adee-29e4550c70c0"
                      }
                    }
                  ],
                  "id": "0296dc1a-0801-4752-8297-3f722662e8ab",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/columns"
                  },
                  "response": []
                },
                {
                  "name": "Create_dsp_basic_report_with_all_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains metrics\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_ENGAGEMENT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_ERR_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_FIRST_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_THIRD_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_RPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_START\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_MIDPOINT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_GROSS_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CAMPAIGN_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_GROSS_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_GROSS_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CLICKS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_REQS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_ERROR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPVC\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_MIDPOINT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_WIN_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_TRANSCODING_ERRORS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_TOTAL_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_REQS_OPPORTUNITY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_RESPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_WINS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_ERR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_FIRST_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_SEGMENTS_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_GROSS_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_TRANSCODINGS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_NO_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_THIRD_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_SEGMENTS_FEE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_COMPLETE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_PLATFORM_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_NO_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CTR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_CLOSE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_CLOSE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_DEMAND_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_START_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_SEGMENTS_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_COMPLETE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CAMPAIGN_CPM\\\"\");",
                          "});",
                          "",
                          "//Set reportId variable",
                          "var jsonData = JSON.parse(responseBody);",
                          "pm.environment.set(\"reportId\", jsonData.id);"
                        ],
                        "type": "text/javascript",
                        "id": "193d7320-8341-44de-acbf-d6673472ca3f"
                      }
                    }
                  ],
                  "id": "76273136-59b4-4faf-85d1-908c418f11ee",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: DSP Basic ALL metrics\",\n    \"custom\": true,\n    \"datasourceType\": \"FINANCIAL\",\n    \"dimensions\": [],\n    \"filter\": {\n        \"adPodLayouts\": null,\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"campaigns\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspGroups\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"impressionTypes\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"periods\": null,\n        \"publisherGroups\": null,\n        \"publishers\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"CUMULATIVE\",\n    \"metrics\": [\n        \"EXT_BID_FLOOR_AVG\",\n        \"EXT_CPM\",\n        \"EXT_IMP_PRICE\",\n        \"EXT_BID_AVG\",\n        \"INT_BID_FLOOR_AVG\",\n        \"INT_CPM\",\n        \"INT_IMP_PRICE\",\n        \"INT_AVERAGE_BID\",\n        \"INT_BID_FLOOR_GROSS_AVG\",\n        \"INT_GROSS_CPM\",\n        \"INT_GROSS_IMP_PRICE\",\n        \"INT_AVERAGE_GROSS_BID\",\n        \"INT_PLATFORM_PROFIT\",\n        \"INT_DEMAND_PROFIT\",\n        \"INT_TOTAL_PROFIT\",\n        \"INT_REQS\",\n        \"INT_RESPS\",\n        \"INT_REQS_OPPORTUNITY\",\n        \"INT_NO_BIDS\",\n        \"INT_BIDS\",\n        \"INT_WINS\",\n        \"INT_IMPS\",\n        \"INT_ERR\",\n        \"INT_BID_RATE\",\n        \"INT_NO_BID_RATE\",\n        \"INT_WIN_RATE\",\n        \"INT_FILLRATE\",\n        \"INT_ERR_RATE\",\n        \"INT_CLICKS\",\n        \"INT_CTR\",\n        \"INT_RPS\",\n        \"INT_VAST_START\",\n        \"INT_VAST_CLOSE\",\n        \"INT_VAST_ERROR\",\n        \"INT_VAST_FIRST_QUARTILE\",\n        \"INT_VAST_MIDPOINT\",\n        \"INT_VAST_THIRD_QUARTILE\",\n        \"INT_VAST_COMPLETE\",\n        \"INT_VAST_START_RATE\",\n        \"INT_VAST_FIRST_QUARTILE_RATE\",\n        \"INT_VAST_MIDPOINT_RATE\",\n        \"INT_VAST_THIRD_QUARTILE_RATE\",\n        \"INT_VAST_COMPLETE_RATE\",\n        \"INT_VAST_ENGAGEMENT_RATE\",\n        \"INT_VAST_CLOSE_RATE\",\n        \"INT_CPVC\",\n        \"INT_TRANSCODINGS\",\n        \"INT_TRANSCODING_ERRORS\",\n        \"INT_SEGMENTS_CPM\",\n        \"INT_SEGMENTS_FEE\",\n        \"INT_CAMPAIGN_CPM\",\n        \"INT_CAMPAIGN_IMP_PRICE\",\n        \"INT_SEGMENTS_PROFIT\"\n    ],\n    \"period\": {\n        \"start\": null,\n        \"end\": null,\n        \"type\": \"TODAY\"\n    },\n    \"personal\": true,\n    \"schedule\": null,\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"DSP\",\n    \"user\": null\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
                  },
                  "response": []
                },
                {
                  "name": "Get_dsp_basic_report_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains metrics\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_ENGAGEMENT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_ERR_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_FIRST_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_THIRD_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_RPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_START\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_MIDPOINT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_GROSS_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CAMPAIGN_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_GROSS_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_GROSS_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CLICKS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_REQS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_ERROR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPVC\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_MIDPOINT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_WIN_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_TRANSCODING_ERRORS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_TOTAL_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_REQS_OPPORTUNITY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_RESPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_WINS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_ERR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_FIRST_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_SEGMENTS_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_GROSS_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_TRANSCODINGS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_NO_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_THIRD_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_SEGMENTS_FEE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_COMPLETE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_PLATFORM_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_NO_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CTR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_CLOSE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_CLOSE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_DEMAND_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_START_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_SEGMENTS_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_COMPLETE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CAMPAIGN_CPM\\\"\");",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "dfd60edf-ceb6-4bb1-80ff-84337d91bf6f"
                      }
                    }
                  ],
                  "id": "a162f087-9cde-4e44-b7e8-1c9e9e4cf768",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Get_data_dsp_basic_report_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content [TMP-1127]",
                          "//If you have data, you should see { id: number | string, name: string }",
                          "//if no data represented you should see null instead",
                          "",
                          "pm.test(\"Contains metrics\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_REQS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_RESPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_NO_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_ERR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_NO_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_ERR_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_PLATFORM_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_RPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CLICKS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CTR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_GROSS_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_GROSS_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_START\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_CLOSE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_ERROR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_FIRST_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_MIDPOINT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_THIRD_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_COMPLETE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_START_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_FIRST_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_MIDPOINT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_THIRD_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_COMPLETE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_CLOSE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPVC\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_AVG\\\"\");",
                          "});",
                          "",
                          "//TODO Sample data is required to get actual & constant data",
                          "//Sample data is needed",
                          "",
                          "//METRICS CALCULATION RULES:",
                          "//INT_FILLRATE (Win rate)",
                          "//TMP-1509: INT_FILLRATE=impressions / int_bids",
                          "    // var jsonData = JSON.parse(responseBody);",
                          "    // var imps, bids, nobids, fillrate;",
                          "",
                          "    // fillrate = jsonData.total.INT_FILLRATE;",
                          "    // imps = jsonData.total.INT_IMPS;",
                          "    // bids = jsonData.total.INT_REQS; //Includes win + lost",
                          "    // console.log(bids);",
                          "    ",
                          "    // //Check INT_FILLRATE (Win rate)",
                          "    // if (bids === 0)",
                          "    // {",
                          "    //     tests[\"WIN RATE is null\"] = bids;",
                          "    // }",
                          "    // else",
                          "    // {",
                          "    //     tests[\"WIN RATE is correct: \" + fillrate] = fillrate === imps / bids;",
                          "    // }"
                        ],
                        "type": "text/javascript",
                        "id": "a9511a1a-3855-49c8-84bf-7b9ee09fac81"
                      }
                    }
                  ],
                  "id": "fe985ac0-cc50-43bb-aae6-a6bfd8fa0d6c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/data"
                  },
                  "response": []
                },
                {
                  "name": "Get_dsp_basic_report_csv_content",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "//TODO Sample data is required to get actual & constant data",
                          "pm.test(\"Header: Column names and order\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Date,Publisher Bid Floor,Publisher RPM,Publisher Revenue,Publisher Average Bid,Net Bid Floor,Net CPM,Net Spend,Net Average Bid,Gross Bid Floor,Gross CPM,Gross Spend,Gross Average Bid,Supply Fee Profit,Demand Profit,Total Profit,Bid Requests,Bid Responses,Missed Bid Opportunities,No Bids,Bids,Wins,Impressions,Errors,No Bid Rate,Bid Rate,Win Rate,Fill Rate,Error Rate,Clicks,CTR,DSP QPS,Starts,Skips,Vast Errors,25% Completed,50% Completed,75% Completed,100% Completed,Start Rate,25% Completion Rate,50% Completion Rate,75% Completion Rate,100% Completion Rate,Engagement rate,Skip Rate,CPVC,Transcodings Number,Transcoding Errors,Campaign CPM,Campaign Spend,Segments CPM,Segments Spend,Segments Profit\");",
                          "});",
                          "",
                          "pm.test(\"CSV repot contains Total line\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Total:\");",
                          "});",
                          "",
                          "pm.test(\"Currency has $\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Total:,$\");",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "6b8267f9-ec59-4ff4-8f8b-13dc495cd17b"
                      }
                    }
                  ],
                  "id": "b6d7919a-9a1f-4278-bc0f-d25fc1c75d04",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/_download?format=CSV",
                      "host": [
                        "{{protocol}}{{server}}",
                        "{{domain}}"
                      ],
                      "path": [
                        "api",
                        "{{api_version}}",
                        "reports",
                        "{{reportId}}",
                        "_download"
                      ],
                      "query": [
                        {
                          "key": "format",
                          "value": "CSV"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete_dsp_basic_report_with_all_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Clear reportId variable",
                          "pm.environment.set(\"reportId\", \"\");"
                        ],
                        "type": "text/javascript",
                        "id": "2a091d35-5a9a-45d9-b219-d3ca021e9c2e"
                      }
                    }
                  ],
                  "id": "b2f37a8d-60c4-44f5-ba66-70a5089555ba",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Create_dsp_extended_report_with_all_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains metrics\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_ENGAGEMENT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_ERR_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_FIRST_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_THIRD_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IFA\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_RPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_START\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_MIDPOINT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_GROSS_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_GROSS_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_GROSS_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CLICKS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_REQS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_ERROR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPVC\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_MIDPOINT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_WIN_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_TRANSCODING_ERRORS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_TOTAL_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_REQS_OPPORTUNITY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_RESPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_WINS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_ERR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_FIRST_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_GROSS_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_TRANSCODINGS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_NO_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_THIRD_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_COMPLETE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_PLATFORM_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_NO_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CTR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_CLOSE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_CLOSE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_DEMAND_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_START_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_COMPLETE_RATE\\\"\");",
                          "});",
                          "",
                          "//Set reportId variable",
                          "var jsonData = JSON.parse(responseBody);",
                          "pm.environment.set(\"reportId\", jsonData.id);"
                        ],
                        "type": "text/javascript",
                        "id": "e98b6067-b43c-44da-bf37-584d17c4c2fe"
                      }
                    }
                  ],
                  "id": "313345f4-a5d1-4f2f-8da0-3c2b83f23fcb",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: DSP Extended ALL metrics\",\n    \"custom\": true,\n    \"datasourceType\": \"STANDARD\",\n    \"dimensions\": [],\n    \"filter\": {\n        \"adPodLayouts\": null,\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"campaigns\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspGroups\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"impressionTypes\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"periods\": null,\n        \"publisherGroups\": null,\n        \"publishers\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"CUMULATIVE\",\n    \"metrics\": [\n        \"EXT_BID_FLOOR_AVG\",\n        \"EXT_CPM\",\n        \"EXT_IMP_PRICE\",\n        \"EXT_BID_AVG\",\n        \"INT_BID_FLOOR_AVG\",\n        \"INT_CPM\",\n        \"INT_IMP_PRICE\",\n        \"INT_AVERAGE_BID\",\n        \"INT_BID_FLOOR_GROSS_AVG\",\n        \"INT_GROSS_CPM\",\n        \"INT_GROSS_IMP_PRICE\",\n        \"INT_AVERAGE_GROSS_BID\",\n        \"INT_PLATFORM_PROFIT\",\n        \"INT_DEMAND_PROFIT\",\n        \"INT_TOTAL_PROFIT\",\n        \"INT_REQS\",\n        \"INT_RESPS\",\n        \"INT_REQS_OPPORTUNITY\",\n        \"INT_NO_BIDS\",\n        \"INT_BIDS\",\n        \"INT_WINS\",\n        \"INT_IMPS\",\n        \"INT_ERR\",\n        \"INT_BID_RATE\",\n        \"INT_NO_BID_RATE\",\n        \"INT_WIN_RATE\",\n        \"INT_FILLRATE\",\n        \"INT_ERR_RATE\",\n        \"INT_IFA\",\n        \"INT_CLICKS\",\n        \"INT_CTR\",\n        \"INT_RPS\",\n        \"INT_VAST_START\",\n        \"INT_VAST_CLOSE\",\n        \"INT_VAST_ERROR\",\n        \"INT_VAST_FIRST_QUARTILE\",\n        \"INT_VAST_MIDPOINT\",\n        \"INT_VAST_THIRD_QUARTILE\",\n        \"INT_VAST_COMPLETE\",\n        \"INT_VAST_START_RATE\",\n        \"INT_VAST_FIRST_QUARTILE_RATE\",\n        \"INT_VAST_MIDPOINT_RATE\",\n        \"INT_VAST_THIRD_QUARTILE_RATE\",\n        \"INT_VAST_COMPLETE_RATE\",\n        \"INT_VAST_ENGAGEMENT_RATE\",\n        \"INT_VAST_CLOSE_RATE\",\n        \"INT_CPVC\",\n        \"INT_TRANSCODINGS\",\n        \"INT_TRANSCODING_ERRORS\"\n    ],\n    \"period\": {\n        \"start\": null,\n        \"end\": null,\n        \"type\": \"TODAY\"\n    },\n    \"personal\": true,\n    \"schedule\": null,\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"DSP\",\n    \"user\": null\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
                  },
                  "response": []
                },
                {
                  "name": "Get_dsp_extended_report_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains metrics\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_ENGAGEMENT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_ERR_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_FIRST_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_THIRD_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IFA\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_RPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_START\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_MIDPOINT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_GROSS_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_GROSS_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_GROSS_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CLICKS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_REQS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_ERROR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPVC\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_MIDPOINT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_WIN_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_TRANSCODING_ERRORS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_TOTAL_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_REQS_OPPORTUNITY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_RESPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_WINS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_ERR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_FIRST_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_GROSS_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_TRANSCODINGS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_NO_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_THIRD_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_COMPLETE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_PLATFORM_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_NO_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CTR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_CLOSE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_CLOSE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_DEMAND_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_START_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_COMPLETE_RATE\\\"\");",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "85663431-0666-49d7-a1fb-815ab70a14c9"
                      }
                    }
                  ],
                  "id": "11ecd300-dba3-4a7e-84f0-a267935bdeb4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Get_data_dsp_extended_report_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content [TMP-1127]",
                          "//If you have data, you should see { id: number | string, name: string }",
                          "//if no data represented you should see null instead",
                          "",
                          "pm.test(\"Contains metrics\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_REQS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_RESPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_NO_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_ERR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_NO_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_ERR_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_PLATFORM_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_RPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CLICKS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CTR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IFA\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_GROSS_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_GROSS_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_START\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_CLOSE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_ERROR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_FIRST_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_MIDPOINT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_THIRD_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_COMPLETE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_START_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_FIRST_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_MIDPOINT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_THIRD_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_COMPLETE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_VAST_CLOSE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPVC\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_AVG\\\"\");",
                          "});",
                          "",
                          "//TODO Sample data is required to get actual & constant data",
                          "//Sample data is needed",
                          "",
                          "//METRICS CALCULATION RULES:",
                          "//INT_FILLRATE (Win rate)",
                          "//TMP-1509: INT_FILLRATE=impressions / int_bids",
                          "    // var jsonData = JSON.parse(responseBody);",
                          "    // var imps, bids, nobids, fillrate;",
                          "",
                          "    // fillrate = jsonData.total.INT_FILLRATE;",
                          "    // imps = jsonData.total.INT_IMPS;",
                          "    // bids = jsonData.total.INT_REQS; //Includes win + lost",
                          "    // console.log(bids);",
                          "    ",
                          "    // //Check INT_FILLRATE (Win rate)",
                          "    // if (bids === 0)",
                          "    // {",
                          "    //     tests[\"WIN RATE is null\"] = bids;",
                          "    // }",
                          "    // else",
                          "    // {",
                          "    //     tests[\"WIN RATE is correct: \" + fillrate] = fillrate === imps / bids;",
                          "    // }"
                        ],
                        "type": "text/javascript",
                        "id": "2f03a646-dd58-442d-942c-c91bfc8e5c5b"
                      }
                    }
                  ],
                  "id": "0ca8793f-38e9-4aa9-ba8d-d5b6e2de80c5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/data"
                  },
                  "response": []
                },
                {
                  "name": "Get_dsp_extended_report_csv_content",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "//TODO Sample data is required to get actual & constant data",
                          "pm.test(\"Header: Column names and order\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Date,Publisher Bid Floor,Publisher RPM,Publisher Revenue,Publisher Average Bid,Net Bid Floor,Net CPM,Net Spend,Net Average Bid,Gross Bid Floor,Gross CPM,Gross Spend,Gross Average Bid,Supply Fee Profit,Demand Profit,Total Profit,Bid Requests,Bid Responses,Missed Bid Opportunities,No Bids,Bids,Wins,Impressions,Errors,No Bid Rate,Bid Rate,Win Rate,Fill Rate,Error Rate,Unique Devices,Clicks,CTR,DSP QPS,Starts,Skips,Vast Errors,25% Completed,50% Completed,75% Completed,100% Completed,Start Rate,25% Completion Rate,50% Completion Rate,75% Completion Rate,100% Completion Rate,Engagement rate,Skip Rate,CPVC,Transcodings Number,Transcoding Errors\");",
                          "});",
                          "",
                          "pm.test(\"CSV repot contains Total line\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Total:\");",
                          "});",
                          "",
                          "pm.test(\"Currency has $\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Total:,$\");",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "067127cc-13ff-4643-b663-c7e59790b88c"
                      }
                    }
                  ],
                  "id": "9bcc29e9-87fc-42a2-a42a-fbbb81157f3d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/_download?format=CSV",
                      "host": [
                        "{{protocol}}{{server}}",
                        "{{domain}}"
                      ],
                      "path": [
                        "api",
                        "{{api_version}}",
                        "reports",
                        "{{reportId}}",
                        "_download"
                      ],
                      "query": [
                        {
                          "key": "format",
                          "value": "CSV"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete_dsp_extended_report_with_all_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Clear reportId variable",
                          "pm.environment.set(\"reportId\", \"\");"
                        ],
                        "type": "text/javascript",
                        "id": "e444b69d-8526-4e47-ba1d-96ed12bbd005"
                      }
                    }
                  ],
                  "id": "43703ac1-1bba-458a-9501-48c28aa3ed4b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                }
              ],
              "id": "7483c1d8-b612-4f21-9499-978c9905113e"
            },
            {
              "name": "SSP",
              "item": [
                {
                  "name": "Login_admin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Set token variable",
                          "var jsonData = JSON.parse(responseBody);",
                          "pm.environment.set(\"token\", jsonData.token);"
                        ],
                        "type": "text/javascript",
                        "id": "d53a68b5-fe30-45b2-a780-748327c35f1e"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "//Save current time before start",
                          "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                        ],
                        "type": "text/javascript",
                        "id": "3497e814-4209-43ca-a132-f5286a66f55e"
                      }
                    }
                  ],
                  "id": "493591be-1651-4363-b31f-5b35625dd4b2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": ""
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
                    },
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
                  },
                  "response": []
                },
                {
                  "name": "Create_ssp_basic_report_with_all_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains metrics\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_NO_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_NO_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_COMPLETE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_CLOSE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_RPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_REQS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_THIRD_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_RESPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_WIN_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_THIRD_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_INVERSE_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_PLATFORM_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_START_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_FIRST_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_TRANSCODINGS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_FIRST_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_COMPLETE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_CLOSE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_ERROR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_WINS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_START\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_MIDPOINT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_PIXALATE_REQUESTS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_PIXALATE_BEACONS_FIRED\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPVC\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_MIDPOINT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_TRANSCODING_ERRORS\\\"\");",
                          "});",
                          "",
                          "//Set reportId variable",
                          "var jsonData = JSON.parse(responseBody);",
                          "pm.environment.set(\"reportId\", jsonData.id);"
                        ],
                        "type": "text/javascript",
                        "id": "129fb2dc-1403-4bcb-8b89-2a7ac8f7a44e"
                      }
                    }
                  ],
                  "id": "0b3fb9ed-9822-4a00-8d07-882db4c184c5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: SSP Basic ALL metrics\",\n    \"custom\": true,\n    \"datasourceType\": \"FINANCIAL\",\n    \"dimensions\": [],\n    \"filter\": {\n        \"adPodLayouts\": null,\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"campaigns\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspGroups\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"impressionTypes\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"periods\": null,\n        \"publisherGroups\": null,\n        \"publishers\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"CUMULATIVE\",\n    \"metrics\": [\n        \"EXT_BID_FLOOR_AVG\",\n        \"EXT_CPM\",\n        \"EXT_IMP_PRICE\",\n        \"EXT_BID_AVG\",\n        \"INT_BID_FLOOR_AVG\",\n        \"INT_CPM\",\n        \"INT_IMP_PRICE\",\n        \"INT_AVERAGE_BID\",\n        \"EXT_PLATFORM_PROFIT\",\n        \"EXT_REQS\",\n        \"EXT_RESPS\",\n        \"EXT_NO_BIDS\",\n        \"EXT_BIDS\",\n        \"EXT_WINS\",\n        \"EXT_IMPS\",\n        \"EXT_BID_RATE\",\n        \"EXT_NO_BID_RATE\",\n        \"EXT_WIN_RATE\",\n        \"EXT_FILLRATE\",\n        \"EXT_INVERSE_FILLRATE\",\n        \"EXT_RPS\",\n        \"EXT_VAST_START\",\n        \"EXT_VAST_CLOSE\",\n        \"EXT_VAST_ERROR\",\n        \"EXT_VAST_FIRST_QUARTILE\",\n        \"EXT_VAST_MIDPOINT\",\n        \"EXT_VAST_THIRD_QUARTILE\",\n        \"EXT_VAST_COMPLETE\",\n        \"EXT_VAST_START_RATE\",\n        \"EXT_VAST_FIRST_QUARTILE_RATE\",\n        \"EXT_VAST_MIDPOINT_RATE\",\n        \"EXT_VAST_THIRD_QUARTILE_RATE\",\n        \"EXT_VAST_COMPLETE_RATE\",\n        \"EXT_VAST_CLOSE_RATE\",\n        \"EXT_CPVC\",\n        \"EXT_TRANSCODINGS\",\n        \"EXT_TRANSCODING_ERRORS\",\n        \"EXT_PIXALATE_REQUESTS\",\n        \"EXT_PIXALATE_BEACONS_FIRED\"\n    ],\n    \"period\": {\n        \"start\": null,\n        \"end\": null,\n        \"type\": \"TODAY\"\n    },\n    \"personal\": true,\n    \"schedule\": null,\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"SSP\",\n    \"user\": null\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
                  },
                  "response": []
                },
                {
                  "name": "Get_ssp_basic_report_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains metrics\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_NO_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_NO_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_COMPLETE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_CLOSE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_RPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_REQS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_THIRD_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_RESPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_WIN_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_THIRD_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_INVERSE_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_PLATFORM_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_START_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_FIRST_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_TRANSCODINGS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_FIRST_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_COMPLETE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_CLOSE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_ERROR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_WINS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_START\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_MIDPOINT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_PIXALATE_REQUESTS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_PIXALATE_BEACONS_FIRED\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPVC\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_MIDPOINT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_TRANSCODING_ERRORS\\\"\");",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "af75691e-2ac1-40cd-8691-2fa3e1dc4949"
                      }
                    }
                  ],
                  "id": "ac06589e-5cd2-408e-8f1b-503e8e21514d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Get_data_ssp_basic_report_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content [TMP-1127]",
                          "//If you have data, you should see { id: number | string, name: string }",
                          "//if no data represented you should see null instead",
                          "",
                          "pm.test(\"Contains metrics\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_REQS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_RESPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_INVERSE_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_PLATFORM_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_RPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_NO_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_START\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_CLOSE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_ERROR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_FIRST_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_MIDPOINT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_THIRD_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_COMPLETE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_START_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_FIRST_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_MIDPOINT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_THIRD_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_COMPLETE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_CLOSE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPVC\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_TRANSCODINGS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_TRANSCODING_ERRORS\\\"\");",
                          "});",
                          "",
                          "//TODO Sample data is required to get actual & constant data",
                          "//Sample data is needed",
                          "",
                          "//METRICS CALCULATION RULES:",
                          "//EXT_FILLRATE (Fill rate)",
                          "//TMP-1509: ext_fillrate=impressions / bid_requests_external",
                          "    var jsonData = JSON.parse(responseBody);",
                          "    var imps, bids, fillrate;",
                          "",
                          "    fillrate = jsonData.total.EXT_FILLRATE;",
                          "    imps = jsonData.total.EXT_IMPS;",
                          "    bids = jsonData.total.EXT_REQS;",
                          "    ",
                          "    //Check EXT_FILLRATE (Fill rate)",
                          "    // if (bids === 0)",
                          "    // {",
                          "    //     tests[\"FILL RATE is null\"] = bids;",
                          "    // }",
                          "    //  else",
                          "    //  {",
                          "    //     tests[\"FILL RATE is correct\"] = fillrate === imps / bids;",
                          "    ",
                          "    // }"
                        ],
                        "type": "text/javascript",
                        "id": "c546b06e-49aa-4ebb-9906-f5fcf4201a1c"
                      }
                    }
                  ],
                  "id": "a5d55b33-65c0-42d2-aa41-1105875cb2a6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/data"
                  },
                  "response": []
                },
                {
                  "name": "Get_ssp_basic_report_csv_content",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "//TODO Sample data is required to get actual & constant data",
                          "pm.test(\"Header: Column names and order\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Date,Net Bid Floor,Net RPM,Net Revenue,Net Average Bid,Gross Bid Floor,Gross RPM,Gross Revenue,Gross Average Bid,Supply Fee Profit,Ad Requests,Ad Responses,No bids,Bids,Wins,Sold Impressions,No Bid Rate,Bid Rate,Win Rate,Fill Rate,Waste Rate,SSP QPS,Starts,Skips,Errors,25% Completed,50% Completed,75% Completed,100% Completed,Start Rate,25% Completion Rate,50% Completion Rate,75% Completion Rate,100% Completion Rate,Skip Rate,RPVC,Transcodings Number,Transcoding Errors,Pixalate Pre Bid Requests,Pixalate Post Bid Impressions\");",
                          "});",
                          "",
                          "pm.test(\"CSV repot contains Total line\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Total:\");",
                          "});",
                          "",
                          "pm.test(\"Currency has $\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Total:,$\");",
                          "});",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "4e089523-8c21-42d0-9cae-99988b2da3fe"
                      }
                    }
                  ],
                  "id": "4b381976-e6ea-4808-8557-3dd10dccd161",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/_download?format=CSV",
                      "host": [
                        "{{protocol}}{{server}}",
                        "{{domain}}"
                      ],
                      "path": [
                        "api",
                        "{{api_version}}",
                        "reports",
                        "{{reportId}}",
                        "_download"
                      ],
                      "query": [
                        {
                          "key": "format",
                          "value": "CSV"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete_ssp_basic_report_with_all_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Clear reportId variable",
                          "pm.environment.set(\"reportId\", \"\");"
                        ],
                        "type": "text/javascript",
                        "id": "65f06a8d-9627-4402-adde-56e85e144323"
                      }
                    }
                  ],
                  "id": "e55f7a96-ab1e-4b12-86e9-ba92e4880138",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Create_ssp_extended_report_with_all_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains metrics\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_NO_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_NO_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_COMPLETE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_CLOSE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_RPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_REQS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_THIRD_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_RESPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_WIN_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_THIRD_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_INVERSE_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_PLATFORM_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_START_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_FIRST_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_TRANSCODINGS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_FIRST_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_COMPLETE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IFA\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_CLOSE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_ERROR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_WINS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_START\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_MIDPOINT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPVC\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_MIDPOINT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_TRANSCODING_ERRORS\\\"\");",
                          "});",
                          "",
                          "//Set reportId variable",
                          "var jsonData = JSON.parse(responseBody);",
                          "pm.environment.set(\"reportId\", jsonData.id);"
                        ],
                        "type": "text/javascript",
                        "id": "2739f0d3-9843-497f-a565-ab1aa2bd1518"
                      }
                    }
                  ],
                  "id": "d13422f6-6396-4010-aaf9-66df6c41a601",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: SSP Extended ALL metrics\",\n    \"custom\": true,\n    \"datasourceType\": \"STANDARD\",\n    \"dimensions\": [],\n    \"filter\": {\n        \"adPodLayouts\": null,\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"campaigns\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspGroups\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"impressionTypes\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"periods\": null,\n        \"publisherGroups\": null,\n        \"publishers\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"CUMULATIVE\",\n    \"metrics\": [\n        \"EXT_BID_FLOOR_AVG\",\n        \"EXT_CPM\",\n        \"EXT_IMP_PRICE\",\n        \"EXT_BID_AVG\",\n        \"INT_BID_FLOOR_AVG\",\n        \"INT_CPM\",\n        \"INT_IMP_PRICE\",\n        \"INT_AVERAGE_BID\",\n        \"EXT_PLATFORM_PROFIT\",\n        \"EXT_REQS\",\n        \"EXT_RESPS\",\n        \"EXT_NO_BIDS\",\n        \"EXT_BIDS\",\n        \"EXT_WINS\",\n        \"EXT_IMPS\",\n        \"EXT_BID_RATE\",\n        \"EXT_NO_BID_RATE\",\n        \"EXT_WIN_RATE\",\n        \"EXT_FILLRATE\",\n        \"EXT_INVERSE_FILLRATE\",\n        \"EXT_IFA\",\n        \"EXT_RPS\",\n        \"EXT_VAST_START\",\n        \"EXT_VAST_CLOSE\",\n        \"EXT_VAST_ERROR\",\n        \"EXT_VAST_FIRST_QUARTILE\",\n        \"EXT_VAST_MIDPOINT\",\n        \"EXT_VAST_THIRD_QUARTILE\",\n        \"EXT_VAST_COMPLETE\",\n        \"EXT_VAST_START_RATE\",\n        \"EXT_VAST_FIRST_QUARTILE_RATE\",\n        \"EXT_VAST_MIDPOINT_RATE\",\n        \"EXT_VAST_THIRD_QUARTILE_RATE\",\n        \"EXT_VAST_COMPLETE_RATE\",\n        \"EXT_VAST_CLOSE_RATE\",\n        \"EXT_CPVC\",\n        \"EXT_TRANSCODINGS\",\n        \"EXT_TRANSCODING_ERRORS\"\n    ],\n    \"period\": {\n        \"start\": null,\n        \"end\": null,\n        \"type\": \"TODAY\"\n    },\n    \"personal\": true,\n    \"schedule\": null,\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"SSP\",\n    \"user\": null\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
                  },
                  "response": []
                },
                {
                  "name": "Get_ssp_extended_report_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains metrics\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_NO_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_NO_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_COMPLETE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_CLOSE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_RPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_AVERAGE_BID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_REQS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_THIRD_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_RESPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_WIN_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_THIRD_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_INVERSE_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_PLATFORM_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_START_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_FIRST_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_TRANSCODINGS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_FIRST_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_COMPLETE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IFA\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_CLOSE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_ERROR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_WINS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_START\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_MIDPOINT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPVC\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_MIDPOINT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_TRANSCODING_ERRORS\\\"\");",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "525d08ce-babe-4067-8ae4-01be144e67ec"
                      }
                    }
                  ],
                  "id": "3f722e8d-f3e6-4c64-87ce-ce6c1ffe5227",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Get_data_ssp_extended_report_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content [TMP-1127]",
                          "//If you have data, you should see { id: number | string, name: string }",
                          "//if no data represented you should see null instead",
                          "",
                          "pm.test(\"Contains metrics\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMP_PRICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPM\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_REQS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_RESPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_IMPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_INVERSE_FILLRATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_PLATFORM_PROFIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_RPS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_NO_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_START\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_CLOSE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_ERROR\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_FIRST_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_MIDPOINT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_THIRD_QUARTILE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_COMPLETE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_START_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_FIRST_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_MIDPOINT_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_THIRD_QUARTILE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_COMPLETE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_VAST_CLOSE_RATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_CPVC\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BIDS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_BID_FLOOR_AVG\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_TRANSCODINGS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"EXT_TRANSCODING_ERRORS\\\"\");",
                          "});",
                          "",
                          "//TODO Sample data is required to get actual & constant data",
                          "//Sample data is needed",
                          "",
                          "//METRICS CALCULATION RULES:",
                          "//EXT_FILLRATE (Fill rate)",
                          "//TMP-1509: ext_fillrate=impressions / bid_requests_external",
                          "    // var jsonData = JSON.parse(responseBody);",
                          "    // var imps, bids, fillrate;",
                          "",
                          "    // fillrate = jsonData.total.EXT_FILLRATE;",
                          "    // imps = jsonData.total.EXT_IMPS;",
                          "    // bids = jsonData.total.EXT_REQS;",
                          "    ",
                          "    // //Check EXT_FILLRATE (Fill rate)",
                          "    // if (bids === 0)",
                          "    // {",
                          "    //     tests[\"FILL RATE is null\"] = bids;",
                          "    // }",
                          "    // else",
                          "    // {tests[\"FILL RATE is correct\"] = fillrate === imps / bids;}"
                        ],
                        "type": "text/javascript",
                        "id": "ed3bf5af-a7f7-441a-8078-f6aaf9722a83"
                      }
                    }
                  ],
                  "id": "0f7c3e54-7429-4d98-a33e-8a05a3fffb2c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/data"
                  },
                  "response": []
                },
                {
                  "name": "Get_ssp_extended_report_csv_content",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "//TODO Sample data is required to get actual & constant data",
                          "pm.test(\"Header: Column names and order\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Date,Net Bid Floor,Net RPM,Net Revenue,Net Average Bid,Gross Bid Floor,Gross RPM,Gross Revenue,Gross Average Bid,Supply Fee Profit,Ad Requests,Ad Responses,No bids,Bids,Wins,Sold Impressions,No Bid Rate,Bid Rate,Win Rate,Fill Rate,Waste Rate,Unique Devices,SSP QPS,Starts,Skips,Errors,25% Completed,50% Completed,75% Completed,100% Completed,Start Rate,25% Completion Rate,50% Completion Rate,75% Completion Rate,100% Completion Rate,Skip Rate,RPVC,Transcodings Number,Transcoding Errors\");",
                          "});",
                          "",
                          "pm.test(\"CSV repot contains Total line\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Total:\");",
                          "});",
                          "",
                          "pm.test(\"Currency has $\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Total:,$\");",
                          "});",
                          ""
                        ],
                        "type": "text/javascript",
                        "id": "59033ed3-c216-4752-8c5a-d1824db292f4"
                      }
                    }
                  ],
                  "id": "496f76a0-9191-46f6-81c5-7cbba147e860",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/_download?format=CSV",
                      "host": [
                        "{{protocol}}{{server}}",
                        "{{domain}}"
                      ],
                      "path": [
                        "api",
                        "{{api_version}}",
                        "reports",
                        "{{reportId}}",
                        "_download"
                      ],
                      "query": [
                        {
                          "key": "format",
                          "value": "CSV"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete_ssp_extended_report_with_all_metrics",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Clear reportId variable",
                          "pm.environment.set(\"reportId\", \"\");"
                        ],
                        "type": "text/javascript",
                        "id": "a1f81246-b35a-47ff-a32c-984f43d8ad24"
                      }
                    }
                  ],
                  "id": "57f17836-0fee-43c8-94ce-a2ab0be05cb1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                }
              ],
              "id": "83859119-4fdf-4dcd-abfc-e969498ffde5"
            }
          ],
          "id": "69028962-af50-4900-a3a6-6a68dc7a04a3",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "id": "a216a12f-18ef-4a8e-bd9f-57e4b0c99d46"
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "id": "4ff54086-6783-46ab-92ce-2bd284dce5ae"
              }
            }
          ]
        },
        {
          "name": "Dimensions & Filters",
          "item": [
            {
              "name": "DSP",
              "item": [
                {
                  "name": "Login_admin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Set token variable",
                          "var jsonData = JSON.parse(responseBody);",
                          "pm.environment.set(\"token\", jsonData.token);"
                        ],
                        "type": "text/javascript",
                        "id": "dc3f57df-c616-40ca-bae3-ff55a85cc1c8"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "//Save current time before start",
                          "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                        ],
                        "type": "text/javascript",
                        "id": "ab331b37-394f-40c7-a5ce-08b3497724cd"
                      }
                    }
                  ],
                  "id": "206f8e06-1bb8-40ff-a8ba-fe6af850c8a2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": ""
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
                    },
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
                  },
                  "response": []
                },
                {
                  "name": "Get_columns_order_for_reports",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains columns\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DSP_GROUP\\\",\\\"DSP_TYPE\\\",\\\"DSP\\\",\\\"PUBLISHER_GROUP\\\",\\\"SSP\\\",\\\"PUBLISHER_ID\\\",\\\"INVENTORY_GROUP\\\",\\\"INVENTORY_TYPE\\\",\\\"INVENTORY_ID\\\",\\\"AD_UNIT_GROUP\\\",\\\"AD_TYPE\\\",\\\"AD_UNIT\\\",\\\"APP_NAME\\\",\\\"APP_BUNDLE\\\",\\\"AD_POD_LAYOUT\\\",\\\"IMPRESSION_TYPE\\\",\\\"DSP_DEAL_ID\\\",\\\"ADVERTISER\\\",\\\"ADOMAIN\\\",\\\"CAMPAIGN\\\",\\\"DSP_RESP_STATE\\\",\\\"NO_BID_REASON\\\",\\\"USED_SEGMENTS\\\",\\\"DEVICE\\\",\\\"MAKE\\\",\\\"MODEL\\\",\\\"OS\\\",\\\"COUNTRY\\\",\\\"STATE\\\",\\\"CITY\\\",\\\"DMA\\\",\\\"CONGRESSIONAL_DISTRICT\\\",\\\"COUNTY\\\",\\\"CREATIVE\\\",\\\"SIZE\\\",\\\"EXT_DURATION\\\",\\\"INT_DURATION\\\",\\\"INT_CAT\\\",\\\"EXT_BID_FLOOR_AVG\\\",\\\"EXT_CPM\\\",\\\"EXT_IMP_PRICE\\\",\\\"EXT_BID_AVG\\\",\\\"INT_BID_FLOOR_AVG\\\",\\\"INT_CPM\\\",\\\"INT_IMP_PRICE\\\",\\\"INT_AVERAGE_BID\\\",\\\"EXT_PLATFORM_PROFIT\\\",\\\"EXT_REQS\\\",\\\"EXT_RESPS\\\",\\\"EXT_NO_BIDS\\\",\\\"EXT_BIDS\\\",\\\"EXT_WINS\\\",\\\"EXT_IMPS\\\",\\\"EXT_NO_BID_RATE\\\",\\\"EXT_BID_RATE\\\",\\\"EXT_WIN_RATE\\\",\\\"EXT_FILLRATE\\\",\\\"EXT_INVERSE_FILLRATE\\\",\\\"EXT_BID_WIN_RATE\\\",\\\"EXT_BID_FILL_RATE\\\",\\\"EXT_WIN_FILL_RATE\\\",\\\"EXT_IFA\\\",\\\"EXT_RPS\\\",\\\"EXT_VAST_START\\\",\\\"EXT_VAST_CLOSE\\\",\\\"EXT_VAST_ERROR\\\",\\\"EXT_VAST_FIRST_QUARTILE\\\",\\\"EXT_VAST_MIDPOINT\\\",\\\"EXT_VAST_THIRD_QUARTILE\\\",\\\"EXT_VAST_COMPLETE\\\",\\\"EXT_VAST_START_RATE\\\",\\\"EXT_VAST_FIRST_QUARTILE_RATE\\\",\\\"EXT_VAST_MIDPOINT_RATE\\\",\\\"EXT_VAST_THIRD_QUARTILE_RATE\\\",\\\"EXT_VAST_COMPLETE_RATE\\\",\\\"EXT_VAST_CLOSE_RATE\\\",\\\"EXT_CPVC\\\",\\\"EXT_TRANSCODINGS\\\",\\\"EXT_TRANSCODING_ERRORS\\\",\\\"EXT_PIXALATE_REQUESTS\\\",\\\"EXT_PIXALATE_BEACONS_FIRED\\\",\\\"INT_BID_FLOOR_GROSS_AVG\\\",\\\"INT_GROSS_CPM\\\",\\\"INT_GROSS_IMP_PRICE\\\",\\\"INT_AVERAGE_GROSS_BID\\\",\\\"INT_PLATFORM_PROFIT\\\",\\\"INT_DEMAND_PROFIT\\\",\\\"INT_TOTAL_PROFIT\\\",\\\"INT_REQS\\\",\\\"INT_RESPS\\\",\\\"INT_REQS_OPPORTUNITY\\\",\\\"INT_NO_BIDS\\\",\\\"INT_BIDS\\\",\\\"INT_WINS\\\",\\\"INT_IMPS\\\",\\\"INT_ERR\\\",\\\"INT_NO_BID_RATE\\\",\\\"INT_BID_RATE\\\",\\\"INT_WIN_RATE\\\",\\\"INT_FILLRATE\\\",\\\"INT_BID_WIN_RATE\\\",\\\"INT_BID_FILL_RATE\\\",\\\"INT_WIN_FILL_RATE\\\",\\\"INT_ERR_RATE\\\",\\\"INT_IFA\\\",\\\"INT_CLICKS\\\",\\\"INT_CTR\\\",\\\"INT_RPS\\\",\\\"INT_VAST_START\\\",\\\"INT_VAST_CLOSE\\\",\\\"INT_VAST_ERROR\\\",\\\"INT_VAST_FIRST_QUARTILE\\\",\\\"INT_VAST_MIDPOINT\\\",\\\"INT_VAST_THIRD_QUARTILE\\\",\\\"INT_VAST_COMPLETE\\\",\\\"INT_VAST_START_RATE\\\",\\\"INT_VAST_FIRST_QUARTILE_RATE\\\",\\\"INT_VAST_MIDPOINT_RATE\\\",\\\"INT_VAST_THIRD_QUARTILE_RATE\\\",\\\"INT_VAST_COMPLETE_RATE\\\",\\\"INT_VAST_ENGAGEMENT_RATE\\\",\\\"INT_VAST_CLOSE_RATE\\\",\\\"INT_CPVC\\\",\\\"INT_TRANSCODINGS\\\",\\\"INT_TRANSCODING_ERRORS\\\",\\\"INT_CAMPAIGN_CPM\\\",\\\"INT_CAMPAIGN_IMP_PRICE\\\",\\\"INT_SEGMENTS_CPM\\\",\\\"INT_SEGMENTS_FEE\\\",\\\"INT_SEGMENTS_PROFIT\\\"\");",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "d0850983-14a7-4e27-9b3d-daa79e63ff23"
                      }
                    }
                  ],
                  "id": "6e799de9-2e65-4d7b-b4e0-b301998bcb01",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/columns"
                  },
                  "response": []
                },
                {
                  "name": "Create_dsp_basic_report_with_all_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains dimensions\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_RESP_STATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"USED_SEGMENTS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_DEAL_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADOMAIN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"IMPRESSION_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"APP_BUNDLE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT_GROUP\\\"\");",
                          "});",
                          "",
                          "pm.test(\"Contains filter\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"filter\\\":{\\\"adomains\\\":null,\\\"adPodLayouts\\\":null,\\\"adTypes\\\":null,\\\"adUnits\\\":null,\\\"advertisers\\\":null,\\\"appBundles\\\":null,\\\"appNames\\\":null,\\\"campaigns\\\":null,\\\"cities\\\":null,\\\"congressionalDistricts\\\":null,\\\"counties\\\":null,\\\"countries\\\":null,\\\"creatives\\\":null,\\\"deals\\\":null,\\\"oses\\\":null,\\\"devices\\\":null,\\\"dmas\\\":null,\\\"dsps\\\":null,\\\"dspRespStates\\\":null,\\\"dspTypes\\\":null,\\\"dspGroups\\\":null,\\\"extDurations\\\":null,\\\"impressionTypes\\\":null,\\\"intCats\\\":null,\\\"intDurations\\\":null,\\\"inventories\\\":null,\\\"inventoryGroups\\\":null,\\\"inventoryTypes\\\":null,\\\"makes\\\":null,\\\"models\\\":null,\\\"noBidReasons\\\":null,\\\"periods\\\":null,\\\"publisherGroups\\\":null,\\\"adUnitGroups\\\":null,\\\"sizes\\\":null,\\\"ssps\\\":null,\\\"publishers\\\":null,\\\"states\\\":null,\\\"usedSegments\\\":null}\");",
                          "});",
                          "",
                          "//Set reportId variable",
                          "var jsonData = JSON.parse(responseBody);",
                          "pm.environment.set(\"reportId\", jsonData.id);"
                        ],
                        "type": "text/javascript",
                        "id": "3c1d53d8-d52d-4ca1-8018-06613470dfd9"
                      }
                    }
                  ],
                  "id": "1bd540d8-0833-49d6-9f53-317efe971754",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: DSP Basic ALL dimensions\",\n    \"custom\": true,\n    \"datasourceType\": \"FINANCIAL\",\n    \"dimensions\": [\n        \"DSP_GROUP\",\n        \"PUBLISHER_GROUP\",\n        \"DSP\",\n        \"SSP\",\n        \"PUBLISHER_ID\",\n        \"INVENTORY_GROUP\",\n        \"INVENTORY_ID\",\n        \"AD_UNIT_GROUP\",\n        \"AD_UNIT\",\n        \"AD_TYPE\",\n        \"DSP_DEAL_ID\",\n        \"IMPRESSION_TYPE\",\n        \"APP_BUNDLE\",\n        \"ADVERTISER\",\n        \"ADOMAIN\",\n        \"CAMPAIGN\",\n        \"DSP_RESP_STATE\",\n        \"USED_SEGMENTS\"\n    ],\n    \"filter\": {\n        \"adPodLayouts\": null,\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"campaigns\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspGroups\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"impressionTypes\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"periods\": null,\n        \"publisherGroups\": null,\n        \"publishers\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"CUMULATIVE\",\n    \"metrics\": [],\n    \"period\": {\n        \"start\": null,\n        \"end\": null,\n        \"type\": \"TODAY\"\n    },\n    \"personal\": true,\n    \"schedule\": null,\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"DSP\",\n    \"user\": null\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
                  },
                  "response": []
                },
                {
                  "name": "Get_dsp_basic_report_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains dimensions\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_RESP_STATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"USED_SEGMENTS\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_DEAL_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADOMAIN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"IMPRESSION_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"APP_BUNDLE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT_GROUP\\\"\");",
                          "});",
                          "",
                          "pm.test(\"Contains filter\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"filter\\\":{\\\"adomains\\\":null,\\\"adPodLayouts\\\":null,\\\"adTypes\\\":null,\\\"adUnits\\\":null,\\\"advertisers\\\":null,\\\"appBundles\\\":null,\\\"appNames\\\":null,\\\"campaigns\\\":null,\\\"cities\\\":null,\\\"congressionalDistricts\\\":null,\\\"counties\\\":null,\\\"countries\\\":null,\\\"creatives\\\":null,\\\"deals\\\":null,\\\"oses\\\":null,\\\"devices\\\":null,\\\"dmas\\\":null,\\\"dsps\\\":null,\\\"dspRespStates\\\":null,\\\"dspTypes\\\":null,\\\"dspGroups\\\":null,\\\"extDurations\\\":null,\\\"impressionTypes\\\":null,\\\"intCats\\\":null,\\\"intDurations\\\":null,\\\"inventories\\\":null,\\\"inventoryGroups\\\":null,\\\"inventoryTypes\\\":null,\\\"makes\\\":null,\\\"models\\\":null,\\\"noBidReasons\\\":null,\\\"periods\\\":null,\\\"publisherGroups\\\":null,\\\"adUnitGroups\\\":null,\\\"sizes\\\":null,\\\"ssps\\\":null,\\\"publishers\\\":null,\\\"states\\\":null,\\\"usedSegments\\\":null}\");",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "0d326e2e-9365-4b61-9ac0-dfc3270f7c71"
                      }
                    }
                  ],
                  "id": "f73ccc11-4261-46ac-87f3-dd64d74093a9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Get_data_dsp_basic_report_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content [TMP-1127]",
                          "//If you have data, you should see { id: number | string, name: string }",
                          "//if no data represented you should see null instead",
                          "",
                          "//TODO Sample data is required to get actual & constant data",
                          "",
                          "pm.test(\"Contains: rows, time, total\", function () {",
                          "    //Sample data is needed",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"ADOMAIN\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_GROUP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_GROUP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"AD_TYPE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DSP_DEAL_ID\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"APP_BUNDLE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DSP_RESP_STATE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"USED_SEGMENTS\\\"\");",
                          "",
                          "    //nulls",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DSP_DEAL_ID\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\":null\");",
                          "});",
                          "",
                          "//TODO",
                          "//[TMP-1348]",
                          "//pm.test(\"DSP/SSP contains external ID\", function () {",
                          "//    pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\":{\\\"id\\\":\\\"52823111\\\"\");",
                          "//    pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\":{\\\"id\\\":\\\"vchimishuk\\\"\");    ",
                          "//});"
                        ],
                        "type": "text/javascript",
                        "id": "e2625b42-c1c1-4c30-bc3f-d7110963c107"
                      }
                    }
                  ],
                  "id": "2407a7c5-b61a-4298-b6c7-dff48aa5e188",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/data"
                  },
                  "response": []
                },
                {
                  "name": "Get_dsp_basic_report_dimensions_csv",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "//TODO Sample data is required to get actual & constant data",
                          "pm.test(\"Header: Column names and order\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Date,DSP Group Labels,Demand Source,Supply Group Labels,Supply Source,Publisher,Site/App Group Labels,Site/App,Ad Unit Group Labels,Ad Unit Type,Ad Unit,Domain/Bundle,Impression Type,Deal ID,Advertiser,Advertiser Domain,Campaign,Error/No Bid Reason,Used segment\");",
                          "});",
                          "",
                          "//[TMP-1348]",
                          "//pm.test(\"DSP/SSP dimensions with external ID\", function () {",
                          "//    pm.expect(pm.response.text()).to.include(\"Adoppler DSP (52823111)\");",
                          "//    pm.expect(pm.response.text()).to.include(\"vchimishuk (vchimishuk)\");",
                          "//});"
                        ],
                        "type": "text/javascript",
                        "id": "b824b83f-e22c-480c-8d23-183f98c87a23"
                      }
                    }
                  ],
                  "id": "7a44cdf3-40c2-4d47-be21-716f5ef4d644",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/_download?format=CSV",
                      "host": [
                        "{{protocol}}{{server}}",
                        "{{domain}}"
                      ],
                      "path": [
                        "api",
                        "{{api_version}}",
                        "reports",
                        "{{reportId}}",
                        "_download"
                      ],
                      "query": [
                        {
                          "key": "format",
                          "value": "CSV"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete_dsp_basic_report_with_all_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Clear reportId variable",
                          "pm.environment.set(\"reportId\", \"\");"
                        ],
                        "type": "text/javascript",
                        "id": "5ac930ec-3773-4f3e-b93e-b48b77cd75a8"
                      }
                    }
                  ],
                  "id": "cefc789f-77f7-447d-ad73-11c4e692b434",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Create_dsp_extended_report_with_all_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains dimensions\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"COUNTRY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CITY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"COUNTY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"IMPRESSION_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DMA\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DEVICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"APP_BUNDLE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"APP_NAME\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"MODEL\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"STATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADOMAIN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"MAKE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CONGRESSIONAL_DISTRICT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"OS\\\"\");",
                          "});",
                          "",
                          "pm.test(\"Contains filter\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"filter\\\":{\\\"adomains\\\":null,\\\"adPodLayouts\\\":null,\\\"adTypes\\\":null,\\\"adUnits\\\":null,\\\"advertisers\\\":null,\\\"appBundles\\\":null,\\\"appNames\\\":null,\\\"campaigns\\\":null,\\\"cities\\\":null,\\\"congressionalDistricts\\\":null,\\\"counties\\\":null,\\\"countries\\\":null,\\\"creatives\\\":null,\\\"deals\\\":null,\\\"oses\\\":null,\\\"devices\\\":null,\\\"dmas\\\":null,\\\"dsps\\\":null,\\\"dspRespStates\\\":null,\\\"dspTypes\\\":null,\\\"dspGroups\\\":null,\\\"extDurations\\\":null,\\\"impressionTypes\\\":null,\\\"intCats\\\":null,\\\"intDurations\\\":null,\\\"inventories\\\":null,\\\"inventoryGroups\\\":null,\\\"inventoryTypes\\\":null,\\\"makes\\\":null,\\\"models\\\":null,\\\"noBidReasons\\\":null,\\\"periods\\\":null,\\\"publisherGroups\\\":null,\\\"adUnitGroups\\\":null,\\\"sizes\\\":null,\\\"ssps\\\":null,\\\"publishers\\\":null,\\\"states\\\":null,\\\"usedSegments\\\":null}\");",
                          "});",
                          "",
                          "//Set reportId variable",
                          "var jsonData = JSON.parse(responseBody);",
                          "pm.environment.set(\"reportId\", jsonData.id);"
                        ],
                        "type": "text/javascript",
                        "id": "54efaddc-fedd-46c5-8626-66e61ed978ec"
                      }
                    }
                  ],
                  "id": "a3442af7-762d-4bf4-bcd7-14075ee14ea4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"id\": null,\n        \"name\": \"Postman: DSP Extended ALL dimensions\",\n        \"custom\": true,\n        \"datasourceType\": \"STANDARD\",\n        \"dimensions\": [\n            \"DSP_GROUP\",\n            \"PUBLISHER_GROUP\",\n            \"DSP\",\n            \"DSP_TYPE\",\n            \"SSP\",\n            \"PUBLISHER_ID\",\n            \"INVENTORY_GROUP\",\n            \"INVENTORY_ID\",\n            \"INVENTORY_TYPE\",\n            \"AD_UNIT_GROUP\",\n            \"AD_UNIT\",\n            \"AD_TYPE\",\n            \"IMPRESSION_TYPE\",\n            \"APP_NAME\",\n            \"APP_BUNDLE\",\n            \"ADVERTISER\",\n            \"ADOMAIN\",\n            \"CAMPAIGN\",\n            \"DEVICE\",\n            \"MAKE\",\n            \"MODEL\",\n            \"COUNTRY\",\n            \"STATE\",\n            \"CITY\",\n            \"DMA\",\n            \"CONGRESSIONAL_DISTRICT\",\n            \"COUNTY\",\n            \"OS\"\n        ],\n        \"filter\": {\n            \"adPodLayouts\": null,\n            \"adTypes\": null,\n            \"adUnits\": null,\n            \"adomains\": null,\n            \"advertisers\": null,\n            \"appBundles\": null,\n            \"appNames\": null,\n            \"campaigns\": null,\n            \"cities\": null,\n            \"congressionalDistricts\": null,\n            \"counties\": null,\n            \"countries\": null,\n            \"creatives\": null,\n            \"deals\": null,\n            \"devices\": null,\n            \"dmas\": null,\n            \"dspGroups\": null,\n            \"dspRespStates\": null,\n            \"dspTypes\": null,\n            \"dsps\": null,\n            \"impressionTypes\": null,\n            \"inventories\": null,\n            \"inventoryGroups\": null,\n            \"inventoryTypes\": null,\n            \"makes\": null,\n            \"models\": null,\n            \"noBidReasons\": null,\n            \"periods\": null,\n            \"publisherGroups\": null,\n            \"publishers\": null,\n            \"sizes\": null,\n            \"ssps\": null,\n            \"states\": null,\n            \"streams\": null\n        },\n        \"granularity\": \"CUMULATIVE\",\n        \"metrics\": [],\n        \"period\": {\n            \"start\": null,\n            \"end\": null,\n            \"type\": \"TODAY\"\n        },\n        \"personal\": true,\n        \"schedule\": null,\n        \"timeZone\": \"Europe/Athens\",\n        \"type\": \"DSP\",\n        \"user\": null\n    }",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
                  },
                  "response": []
                },
                {
                  "name": "Get_dsp_extended_report_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains dimensions\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"COUNTRY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CITY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"COUNTY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"IMPRESSION_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DMA\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DEVICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"APP_BUNDLE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"APP_NAME\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"MODEL\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"STATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADOMAIN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"MAKE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CONGRESSIONAL_DISTRICT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"OS\\\"\");",
                          "});",
                          "",
                          "pm.test(\"Contains filter\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"filter\\\":{\\\"adomains\\\":null,\\\"adPodLayouts\\\":null,\\\"adTypes\\\":null,\\\"adUnits\\\":null,\\\"advertisers\\\":null,\\\"appBundles\\\":null,\\\"appNames\\\":null,\\\"campaigns\\\":null,\\\"cities\\\":null,\\\"congressionalDistricts\\\":null,\\\"counties\\\":null,\\\"countries\\\":null,\\\"creatives\\\":null,\\\"deals\\\":null,\\\"oses\\\":null,\\\"devices\\\":null,\\\"dmas\\\":null,\\\"dsps\\\":null,\\\"dspRespStates\\\":null,\\\"dspTypes\\\":null,\\\"dspGroups\\\":null,\\\"extDurations\\\":null,\\\"impressionTypes\\\":null,\\\"intCats\\\":null,\\\"intDurations\\\":null,\\\"inventories\\\":null,\\\"inventoryGroups\\\":null,\\\"inventoryTypes\\\":null,\\\"makes\\\":null,\\\"models\\\":null,\\\"noBidReasons\\\":null,\\\"periods\\\":null,\\\"publisherGroups\\\":null,\\\"adUnitGroups\\\":null,\\\"sizes\\\":null,\\\"ssps\\\":null,\\\"publishers\\\":null,\\\"states\\\":null,\\\"usedSegments\\\":null}\");",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "3e192cc6-52f5-4c29-bea8-74974b30e9dc"
                      }
                    }
                  ],
                  "id": "0abd6b0e-9e10-43b8-a2d9-24487d75a0d4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Get_data_dsp_extended_report_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content [TMP-1127]",
                          "//If you have data, you should see { id: number | string, name: string }",
                          "//if no data represented you should see null instead",
                          "",
                          "//TODO Sample data is required to get actual & constant data",
                          "",
                          "pm.test(\"Contains: rows, time, total\", function () {",
                          "    //Sample data is needed",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"ADOMAIN\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_GROUP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_GROUP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"AD_TYPE\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"DSP_DEAL_ID\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"APP_BUNDLE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"DSP_RESP_STATE\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"USED_SEGMENTS\\\"\");",
                          "",
                          "    //nulls",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\":null\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"DSP_DEAL_ID\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\":null\");",
                          "});",
                          "",
                          "//TODO",
                          "//[TMP-1348]",
                          "//pm.test(\"DSP/SSP contains external ID\", function () {",
                          "//    pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\":{\\\"id\\\":\\\"52823111\\\"\");",
                          "//    pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\":{\\\"id\\\":\\\"vchimishuk\\\"\");    ",
                          "//});"
                        ],
                        "type": "text/javascript",
                        "id": "48f92a9a-1db8-4379-a66d-4943601b201c"
                      }
                    }
                  ],
                  "id": "c8dce341-58a3-4552-8ac8-cea6696b9fd1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/data"
                  },
                  "response": []
                },
                {
                  "name": "Get_dsp_extended_report_dimensions_csv",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "//TODO Sample data is required to get actual & constant data",
                          "pm.test(\"Header: Column names and order\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Date,DSP Group Labels,Demand Type,Demand Source,Supply Group Labels,Supply Source,Publisher,Site/App Group Labels,Site/App Type,Site/App,Ad Unit Group Labels,Ad Unit Type,Ad Unit,App Name,Domain/Bundle,Impression Type,Advertiser,Advertiser Domain,Campaign,Device Type,Device Make,Device Model,OS,Country,State,City,DMA,Congressional District,County\");",
                          "});",
                          "",
                          "//[TMP-1348]",
                          "//pm.test(\"DSP/SSP dimensions with external ID\", function () {",
                          "//    pm.expect(pm.response.text()).to.include(\"Adoppler DSP (52823111)\");",
                          "//    pm.expect(pm.response.text()).to.include(\"vchimishuk (vchimishuk)\");",
                          "//});"
                        ],
                        "type": "text/javascript",
                        "id": "cf61d626-0c1d-4efe-972b-a395e3d41109"
                      }
                    }
                  ],
                  "id": "6d4c2dce-b751-4de6-8679-5405066e03a1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/_download?format=CSV",
                      "host": [
                        "{{protocol}}{{server}}",
                        "{{domain}}"
                      ],
                      "path": [
                        "api",
                        "{{api_version}}",
                        "reports",
                        "{{reportId}}",
                        "_download"
                      ],
                      "query": [
                        {
                          "key": "format",
                          "value": "CSV"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete_dsp_extended_report_with_all_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Clear reportId variable",
                          "pm.environment.set(\"reportId\", \"\");"
                        ],
                        "type": "text/javascript",
                        "id": "83dbc2ad-3c92-4dcd-a56d-ddd10e9b5bb2"
                      }
                    }
                  ],
                  "id": "deae7f13-1915-4631-a87e-2a05b030fba4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                }
              ],
              "id": "05158a59-2e8c-42e1-9f16-03acb27ff5f9"
            },
            {
              "name": "SSP",
              "item": [
                {
                  "name": "Login_admin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Set token variable",
                          "var jsonData = JSON.parse(responseBody);",
                          "pm.environment.set(\"token\", jsonData.token);"
                        ],
                        "type": "text/javascript",
                        "id": "ee09bf20-7b1b-4270-bb72-d7b6643cbf52"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "//Save current time before start",
                          "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                        ],
                        "type": "text/javascript",
                        "id": "ebb15163-25cf-4aae-af9b-fe17213094e0"
                      }
                    }
                  ],
                  "id": "ab3910b6-eec7-4087-a856-f158ffcf2e0b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": ""
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
                    },
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
                  },
                  "response": []
                },
                {
                  "name": "Create_ssp_basic_report_with_all_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains dimensions\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"NO_BID_REASON\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_POD_LAYOUT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_DEAL_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADOMAIN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"IMPRESSION_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"APP_BUNDLE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT_GROUP\\\"\");",
                          "});",
                          "",
                          "pm.test(\"Contains filter\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"filter\\\":{\\\"adomains\\\":null,\\\"adPodLayouts\\\":null,\\\"adTypes\\\":null,\\\"adUnits\\\":null,\\\"advertisers\\\":null,\\\"appBundles\\\":null,\\\"appNames\\\":null,\\\"campaigns\\\":null,\\\"cities\\\":null,\\\"congressionalDistricts\\\":null,\\\"counties\\\":null,\\\"countries\\\":null,\\\"creatives\\\":null,\\\"deals\\\":null,\\\"oses\\\":null,\\\"devices\\\":null,\\\"dmas\\\":null,\\\"dsps\\\":null,\\\"dspRespStates\\\":null,\\\"dspTypes\\\":null,\\\"dspGroups\\\":null,\\\"extDurations\\\":null,\\\"impressionTypes\\\":null,\\\"intCats\\\":null,\\\"intDurations\\\":null,\\\"inventories\\\":null,\\\"inventoryGroups\\\":null,\\\"inventoryTypes\\\":null,\\\"makes\\\":null,\\\"models\\\":null,\\\"noBidReasons\\\":null,\\\"periods\\\":null,\\\"publisherGroups\\\":null,\\\"adUnitGroups\\\":null,\\\"sizes\\\":null,\\\"ssps\\\":null,\\\"publishers\\\":null,\\\"states\\\":null,\\\"usedSegments\\\":null}\");",
                          "});",
                          "",
                          "//Set reportId variable",
                          "var jsonData = JSON.parse(responseBody);",
                          "pm.environment.set(\"reportId\", jsonData.id);"
                        ],
                        "type": "text/javascript",
                        "id": "36afb9c6-6141-4f11-b569-f3f418edfa6f"
                      }
                    }
                  ],
                  "id": "989b2370-b43d-4b9c-80ec-e2168267cadd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: SSP Basic ALL dimensions\",\n    \"custom\": true,\n    \"datasourceType\": \"FINANCIAL\",\n    \"dimensions\": [\n        \"DSP_GROUP\",\n        \"PUBLISHER_GROUP\",\n        \"DSP\",\n        \"SSP\",\n        \"PUBLISHER_ID\",\n        \"INVENTORY_GROUP\",\n        \"INVENTORY_ID\",\n        \"AD_UNIT_GROUP\",\n        \"AD_UNIT\",\n        \"AD_TYPE\",\n        \"AD_POD_LAYOUT\",\n        \"DSP_DEAL_ID\",\n        \"IMPRESSION_TYPE\",\n        \"APP_BUNDLE\",\n        \"ADVERTISER\",\n        \"ADOMAIN\",\n        \"CAMPAIGN\",\n        \"NO_BID_REASON\"\n    ],\n    \"filter\": {\n        \"adPodLayouts\": null,\n        \"adTypes\": null,\n        \"adUnits\": null,\n        \"adomains\": null,\n        \"advertisers\": null,\n        \"appBundles\": null,\n        \"appNames\": null,\n        \"campaigns\": null,\n        \"cities\": null,\n        \"congressionalDistricts\": null,\n        \"counties\": null,\n        \"countries\": null,\n        \"creatives\": null,\n        \"deals\": null,\n        \"devices\": null,\n        \"dmas\": null,\n        \"dspGroups\": null,\n        \"dspRespStates\": null,\n        \"dspTypes\": null,\n        \"dsps\": null,\n        \"impressionTypes\": null,\n        \"inventories\": null,\n        \"inventoryGroups\": null,\n        \"inventoryTypes\": null,\n        \"makes\": null,\n        \"models\": null,\n        \"noBidReasons\": null,\n        \"periods\": null,\n        \"publisherGroups\": null,\n        \"publishers\": null,\n        \"sizes\": null,\n        \"ssps\": null,\n        \"states\": null,\n        \"streams\": null\n    },\n    \"granularity\": \"CUMULATIVE\",\n    \"metrics\": [],\n    \"period\": {\n        \"start\": null,\n        \"end\": null,\n        \"type\": \"TODAY\"\n    },\n    \"personal\": true,\n    \"schedule\": null,\n    \"timeZone\": \"Europe/Athens\",\n    \"type\": \"SSP\",\n    \"user\": null\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
                  },
                  "response": []
                },
                {
                  "name": "Get_ssp_basic_report_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains dimensions\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"NO_BID_REASON\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_POD_LAYOUT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_DEAL_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADOMAIN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"IMPRESSION_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"APP_BUNDLE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT_GROUP\\\"\");",
                          "});",
                          "",
                          "pm.test(\"Contains filter\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"filter\\\":{\\\"adomains\\\":null,\\\"adPodLayouts\\\":null,\\\"adTypes\\\":null,\\\"adUnits\\\":null,\\\"advertisers\\\":null,\\\"appBundles\\\":null,\\\"appNames\\\":null,\\\"campaigns\\\":null,\\\"cities\\\":null,\\\"congressionalDistricts\\\":null,\\\"counties\\\":null,\\\"countries\\\":null,\\\"creatives\\\":null,\\\"deals\\\":null,\\\"oses\\\":null,\\\"devices\\\":null,\\\"dmas\\\":null,\\\"dsps\\\":null,\\\"dspRespStates\\\":null,\\\"dspTypes\\\":null,\\\"dspGroups\\\":null,\\\"extDurations\\\":null,\\\"impressionTypes\\\":null,\\\"intCats\\\":null,\\\"intDurations\\\":null,\\\"inventories\\\":null,\\\"inventoryGroups\\\":null,\\\"inventoryTypes\\\":null,\\\"makes\\\":null,\\\"models\\\":null,\\\"noBidReasons\\\":null,\\\"periods\\\":null,\\\"publisherGroups\\\":null,\\\"adUnitGroups\\\":null,\\\"sizes\\\":null,\\\"ssps\\\":null,\\\"publishers\\\":null,\\\"states\\\":null,\\\"usedSegments\\\":null}\");",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "15d1dab3-9a15-4879-86b7-ae2aac1ec387"
                      }
                    }
                  ],
                  "id": "0f67c313-f7ed-4747-942d-256331151083",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Get_data_ssp_basic_report_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content [TMP-1127]",
                          "//If you have data, you should see { id: number | string, name: string }",
                          "//if no data represented you should see null instead",
                          "",
                          "//TODO Sample data is required to get actual & constant data",
                          "",
                          "pm.test(\"Contains: rows, time, total\", function () {",
                          "    //Sample data is needed",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"DSP_TYPE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"ADOMAIN\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_GROUP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_GROUP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"INVENTORY_TYPE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"AD_TYPE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DSP_DEAL_ID\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"APP_NAME\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"APP_BUNDLE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"CREATIVE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"IMPRESSION_TYPE\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"DEVICE\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"MAKE\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"MODEL\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"COUNTRY\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"STATE\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"CITY\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"DMA\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"CONGRESSIONAL_DISTRICT\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"COUNTY\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"NO_BID_REASON\\\"\");",
                          "",
                          "    //nulls",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DSP_DEAL_ID\\\":null\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"DMA\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\":null\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"COUNTY\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\":null\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"CREATIVE\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\":null\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"CONGRESSIONAL_DISTRICT\\\":null\");",
                          "",
                          "    //constant data",
                          "    //    pm.expect(pm.response.text()).to.include(\"\\\"COUNTRY\\\":\\{\\\"id\\\":\\\"ITA\\\",\\\"name\\\":null}\")",
                          "    //    pm.expect(pm.response.text()).to.include(\"\\\"STATE\\\":\\{\\\"id\\\":\\\"62\\\",\\\"name\\\":null}\")",
                          "    //    pm.expect(pm.response.text()).to.include(\"\\\"CITY\\\":\\{\\\"id\\\":\\\"IT ROM\\\",\\\"name\\\":\\\"Rome (Roma)\\\"}\")",
                          "});",
                          "",
                          "//TODO",
                          "//[TMP-1348]",
                          "//pm.test(\"DSP/SSP contains external ID\", function () {",
                          "//    pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\":{\\\"id\\\":\\\"52823111\\\"\");",
                          "//    pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\":{\\\"id\\\":\\\"vchimishuk\\\"\");    ",
                          "//});"
                        ],
                        "type": "text/javascript",
                        "id": "e74cd00d-7c7e-4ca0-8f47-ee55c053e78e"
                      }
                    }
                  ],
                  "id": "58f7da20-ec33-4122-8094-b84f5ba068a6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/data"
                  },
                  "response": []
                },
                {
                  "name": "Get_ssp_basic_report_dimensions_csv",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "//TODO Sample data is required to get actual & constant data",
                          "pm.test(\"Header: Column names and order\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Date,DSP Group Labels,Demand Source,Supply Group Labels,Supply Source,Publisher,Site/App Group Labels,Site/App,Ad Unit Group Labels,Ad Unit Type,Ad Unit,Domain/Bundle,Ad Pod Layout,Impression Type,Deal ID,Advertiser,Advertiser Domain,Campaign,No Bid Reason\");",
                          "});",
                          "",
                          "//[TMP-1348]",
                          "//pm.test(\"DSP/SSP dimensions with external ID\", function () {",
                          "//    pm.expect(pm.response.text()).to.include(\"Adoppler DSP (52823111)\");",
                          "//    pm.expect(pm.response.text()).to.include(\"vchimishuk (vchimishuk)\");",
                          "//});"
                        ],
                        "type": "text/javascript",
                        "id": "b32c2c08-a7f6-452e-92b4-166cffbc5c8e"
                      }
                    }
                  ],
                  "id": "5e5c6614-7601-4c73-bd90-741b2384927d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/_download?format=CSV",
                      "host": [
                        "{{protocol}}{{server}}",
                        "{{domain}}"
                      ],
                      "path": [
                        "api",
                        "{{api_version}}",
                        "reports",
                        "{{reportId}}",
                        "_download"
                      ],
                      "query": [
                        {
                          "key": "format",
                          "value": "CSV"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete_ssp_basic_report_with_all_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Clear reportId variable",
                          "pm.environment.set(\"reportId\", \"\");"
                        ],
                        "type": "text/javascript",
                        "id": "d7799c4c-71c0-46d0-b8c9-c8223094d21e"
                      }
                    }
                  ],
                  "id": "da8bb03d-57c3-4eb5-ba4c-fd99733ab979",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Create_ssp_extended_report_with_all_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains dimensions\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"COUNTRY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CITY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"COUNTY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"IMPRESSION_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DMA\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DEVICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"APP_BUNDLE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"APP_NAME\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"MODEL\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"STATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADOMAIN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"MAKE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CONGRESSIONAL_DISTRICT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"OS\\\"\");",
                          "});",
                          "",
                          "pm.test(\"Contains filter\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"filter\\\":{\\\"adomains\\\":null,\\\"adPodLayouts\\\":null,\\\"adTypes\\\":null,\\\"adUnits\\\":null,\\\"advertisers\\\":null,\\\"appBundles\\\":null,\\\"appNames\\\":null,\\\"campaigns\\\":null,\\\"cities\\\":null,\\\"congressionalDistricts\\\":null,\\\"counties\\\":null,\\\"countries\\\":null,\\\"creatives\\\":null,\\\"deals\\\":null,\\\"oses\\\":null,\\\"devices\\\":null,\\\"dmas\\\":null,\\\"dsps\\\":null,\\\"dspRespStates\\\":null,\\\"dspTypes\\\":null,\\\"dspGroups\\\":null,\\\"extDurations\\\":null,\\\"impressionTypes\\\":null,\\\"intCats\\\":null,\\\"intDurations\\\":null,\\\"inventories\\\":null,\\\"inventoryGroups\\\":null,\\\"inventoryTypes\\\":null,\\\"makes\\\":null,\\\"models\\\":null,\\\"noBidReasons\\\":null,\\\"periods\\\":null,\\\"publisherGroups\\\":null,\\\"adUnitGroups\\\":null,\\\"sizes\\\":null,\\\"ssps\\\":null,\\\"publishers\\\":null,\\\"states\\\":null,\\\"usedSegments\\\":null}\");",
                          "});",
                          "",
                          "//Set reportId variable",
                          "var jsonData = JSON.parse(responseBody);",
                          "pm.environment.set(\"reportId\", jsonData.id);"
                        ],
                        "type": "text/javascript",
                        "id": "125ca974-04e6-4a8b-b9a3-2657d3ee051b"
                      }
                    }
                  ],
                  "id": "e8c11104-b953-4c3c-b8b5-4b107a7693d4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"id\": null,\n        \"name\": \"Postman: SSP Basic ALL dimensions\",\n        \"custom\": true,\n        \"datasourceType\": \"STANDARD\",\n        \"dimensions\": [\n            \"DSP_GROUP\",\n            \"PUBLISHER_GROUP\",\n            \"DSP\",\n            \"DSP_TYPE\",\n            \"SSP\",\n            \"PUBLISHER_ID\",\n            \"INVENTORY_GROUP\",\n            \"INVENTORY_ID\",\n            \"INVENTORY_TYPE\",\n            \"AD_UNIT_GROUP\",\n            \"AD_UNIT\",\n            \"AD_TYPE\",\n            \"IMPRESSION_TYPE\",\n            \"APP_NAME\",\n            \"APP_BUNDLE\",\n            \"ADVERTISER\",\n            \"ADOMAIN\",\n            \"CAMPAIGN\",\n            \"DEVICE\",\n            \"MAKE\",\n            \"MODEL\",\n            \"OS\",\n            \"COUNTRY\",\n            \"STATE\",\n            \"CITY\",\n            \"DMA\",\n            \"CONGRESSIONAL_DISTRICT\",\n            \"COUNTY\"\n        ],\n        \"filter\": {\n            \"adPodLayouts\": null,\n            \"adTypes\": null,\n            \"adUnits\": null,\n            \"adomains\": null,\n            \"advertisers\": null,\n            \"appBundles\": null,\n            \"appNames\": null,\n            \"campaigns\": null,\n            \"cities\": null,\n            \"congressionalDistricts\": null,\n            \"counties\": null,\n            \"countries\": null,\n            \"creatives\": null,\n            \"deals\": null,\n            \"devices\": null,\n            \"dmas\": null,\n            \"dspGroups\": null,\n            \"dspRespStates\": null,\n            \"dspTypes\": null,\n            \"dsps\": null,\n            \"impressionTypes\": null,\n            \"inventories\": null,\n            \"inventoryGroups\": null,\n            \"inventoryTypes\": null,\n            \"makes\": null,\n            \"models\": null,\n            \"noBidReasons\": null,\n            \"periods\": null,\n            \"publisherGroups\": null,\n            \"publishers\": null,\n            \"sizes\": null,\n            \"ssps\": null,\n            \"states\": null,\n            \"streams\": null\n        },\n        \"granularity\": \"CUMULATIVE\",\n        \"metrics\": [],\n        \"period\": {\n            \"start\": null,\n            \"end\": null,\n            \"type\": \"TODAY\"\n        },\n        \"personal\": true,\n        \"schedule\": null,\n        \"timeZone\": \"Europe/Athens\",\n        \"type\": \"SSP\",\n        \"user\": null\n    }",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports"
                  },
                  "response": []
                },
                {
                  "name": "Get_ssp_extended_report_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "pm.test(\"Contains dimensions\", function () {",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"COUNTRY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CITY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"COUNTY\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"IMPRESSION_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DMA\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DEVICE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"APP_BUNDLE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_GROUP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"APP_NAME\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"MODEL\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"STATE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADOMAIN\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"MAKE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"DSP_TYPE\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"CONGRESSIONAL_DISTRICT\\\"\");",
                          "pm.expect(pm.response.text()).to.include(\"\\\"OS\\\"\");",
                          "});",
                          "",
                          "pm.test(\"Contains filter\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"filter\\\":{\\\"adomains\\\":null,\\\"adPodLayouts\\\":null,\\\"adTypes\\\":null,\\\"adUnits\\\":null,\\\"advertisers\\\":null,\\\"appBundles\\\":null,\\\"appNames\\\":null,\\\"campaigns\\\":null,\\\"cities\\\":null,\\\"congressionalDistricts\\\":null,\\\"counties\\\":null,\\\"countries\\\":null,\\\"creatives\\\":null,\\\"deals\\\":null,\\\"oses\\\":null,\\\"devices\\\":null,\\\"dmas\\\":null,\\\"dsps\\\":null,\\\"dspRespStates\\\":null,\\\"dspTypes\\\":null,\\\"dspGroups\\\":null,\\\"extDurations\\\":null,\\\"impressionTypes\\\":null,\\\"intCats\\\":null,\\\"intDurations\\\":null,\\\"inventories\\\":null,\\\"inventoryGroups\\\":null,\\\"inventoryTypes\\\":null,\\\"makes\\\":null,\\\"models\\\":null,\\\"noBidReasons\\\":null,\\\"periods\\\":null,\\\"publisherGroups\\\":null,\\\"adUnitGroups\\\":null,\\\"sizes\\\":null,\\\"ssps\\\":null,\\\"publishers\\\":null,\\\"states\\\":null,\\\"usedSegments\\\":null}\");",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "8761d61f-8b9e-478c-a74b-ef378aaef5aa"
                      }
                    }
                  ],
                  "id": "348c6625-fd60-41cc-883b-db83142b1703",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Get_data_ssp_extended_report_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content [TMP-1127]",
                          "//If you have data, you should see { id: number | string, name: string }",
                          "//if no data represented you should see null instead",
                          "",
                          "//TODO Sample data is required to get actual & constant data",
                          "",
                          "pm.test(\"Contains: rows, time, total\", function () {",
                          "    //Sample data is needed",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DSP_TYPE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"ADOMAIN\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_GROUP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_GROUP\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_TYPE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"AD_TYPE\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"DSP_DEAL_ID\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"APP_NAME\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"APP_BUNDLE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"CREATIVE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"IMPRESSION_TYPE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DEVICE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"MAKE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"MODEL\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"COUNTRY\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"STATE\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"CITY\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DMA\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"CONGRESSIONAL_DISTRICT\\\"\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"COUNTY\\\"\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"NO_BID_REASON\\\"\");",
                          "",
                          "    //nulls",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"PUBLISHER_ID\\\":null\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"DSP_DEAL_ID\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"DMA\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"ADVERTISER\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"CAMPAIGN\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"COUNTY\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"AD_UNIT\\\":null\");",
                          "    pm.expect(pm.response.text()).to.not.include(\"\\\"CREATIVE\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"INVENTORY_ID\\\":null\");",
                          "    pm.expect(pm.response.text()).to.include(\"\\\"CONGRESSIONAL_DISTRICT\\\":null\");",
                          "",
                          "    //constant data",
                          "    //    pm.expect(pm.response.text()).to.include(\"\\\"COUNTRY\\\":\\{\\\"id\\\":\\\"ITA\\\",\\\"name\\\":null}\")",
                          "    //    pm.expect(pm.response.text()).to.include(\"\\\"STATE\\\":\\{\\\"id\\\":\\\"62\\\",\\\"name\\\":null}\")",
                          "    //    pm.expect(pm.response.text()).to.include(\"\\\"CITY\\\":\\{\\\"id\\\":\\\"IT ROM\\\",\\\"name\\\":\\\"Rome (Roma)\\\"}\")",
                          "});",
                          "",
                          "//TODO",
                          "//[TMP-1348]",
                          "//pm.test(\"DSP/SSP contains external ID\", function () {",
                          "//    pm.expect(pm.response.text()).to.include(\"\\\"DSP\\\":{\\\"id\\\":\\\"52823111\\\"\");",
                          "//    pm.expect(pm.response.text()).to.include(\"\\\"SSP\\\":{\\\"id\\\":\\\"vchimishuk\\\"\");    ",
                          "//});"
                        ],
                        "type": "text/javascript",
                        "id": "64907e89-5981-409f-9571-d420badfb1d3"
                      }
                    }
                  ],
                  "id": "c4befa2c-a276-407f-a2e5-d5e05c9b3ed5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/data"
                  },
                  "response": []
                },
                {
                  "name": "Get_ssp_extended_report_dimensions_csv",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Content",
                          "//TODO Sample data is required to get actual & constant data",
                          "pm.test(\"Header: Column names and order\", function () {",
                          "    pm.expect(pm.response.text()).to.include(\"Date,DSP Group Labels,Demand Type,Demand Source,Supply Group Labels,Supply Source,Publisher,Site/App Group Labels,Site/App Type,Site/App,Ad Unit Group Labels,Ad Unit Type,Ad Unit,App Name,Domain/Bundle,Impression Type,Advertiser,Advertiser Domain,Campaign,Device Type,Device Make,Device Model,OS,Country,State,City,DMA,Congressional District,County\");",
                          "});",
                          "",
                          "//[TMP-1348]",
                          "//pm.test(\"DSP/SSP dimensions with external ID\", function () {",
                          "//    pm.expect(pm.response.text()).to.include(\"Adoppler DSP (52823111)\");",
                          "//    pm.expect(pm.response.text()).to.include(\"vchimishuk (vchimishuk)\");",
                          "//});"
                        ],
                        "type": "text/javascript",
                        "id": "6d1ac83f-31c9-4f16-a4fb-becfb730bb12"
                      }
                    }
                  ],
                  "id": "8e7c2d6f-3ecd-462a-810e-5689c5fbce48",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}/_download?format=CSV",
                      "host": [
                        "{{protocol}}{{server}}",
                        "{{domain}}"
                      ],
                      "path": [
                        "api",
                        "{{api_version}}",
                        "reports",
                        "{{reportId}}",
                        "_download"
                      ],
                      "query": [
                        {
                          "key": "format",
                          "value": "CSV"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete_ssp_extended_report_with_all_dimensions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Status code",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "//Clear reportId variable",
                          "pm.environment.set(\"reportId\", \"\");"
                        ],
                        "type": "text/javascript",
                        "id": "679b745e-705c-4af3-85c1-76df2dad6f15"
                      }
                    }
                  ],
                  "id": "29624a5c-7cde-4325-891d-9ad16431c73e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/reports/{{reportId}}"
                  },
                  "response": []
                },
                {
                  "name": "Back_to_defaults",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "//Get version",
                          "var jsonData = pm.response.json();",
                          "",
                          "//Send current environment name to Test Results",
                          "tests[\"Environment name: \" + pm.environment.name] = jsonData.length !== 0;",
                          "",
                          "//Send app version to Test Results",
                          "tests[\"Backend version: \" + jsonData.version] = responseCode.code == 200;",
                          "",
                          "//TODO think about how to send notification about inbox checking",
                          "//Alert to check arrived emails (Share report)",
                          "tests[\"!!! Check inbox for arrived emails (4): csv,csv(unsaved),xlsx,xlsx(unsaved)) !!!\"] = responseCode.code == 200;",
                          "",
                          "//Send app version to console",
                          "console.log(\"Environment name:\", pm.environment.name);",
                          "console.log(\"Backend version:\", jsonData.version);",
                          "",
                          "//Clear variables",
                          "pm.environment.set(\"token\", \"\");",
                          "pm.environment.set(\"reportId\", \"\");"
                        ],
                        "type": "text/javascript",
                        "id": "c0a71ac4-19b6-4ab9-88ae-080d5798f869"
                      }
                    }
                  ],
                  "id": "329d1a54-ebe4-426f-b697-dee511d176fe",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Authorization",
                        "value": "Bearer {{token}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/environment"
                  },
                  "response": []
                }
              ],
              "id": "5e0659da-fbad-4c23-a567-fa9f741a5c09"
            }
          ],
          "id": "e60f3f98-b6e2-40aa-962c-e0d048c9a4be"
        }
      ],
      "id": "0cb3cfd6-f5c5-4073-aca9-b7e0c675f5cf",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              ""
            ],
            "id": "7b29cd87-4b7b-418c-b6cf-d6281d82c5fb"
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              ""
            ],
            "id": "5d850b6c-27e3-4b3d-b284-4b64be3a6d4f"
          }
        }
      ]
    },
    {
      "name": "Bulk Edit (CRUD)",
      "item": [
        {
          "name": "Login_admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//No error message",
                  "pm.test(\"No error message\", function () {",
                  "    pm.expect(pm.response.text()).to.not.include(\"Invalid email or password. Please, try again.\");",
                  "});",
                  "",
                  "//Content",
                  "pm.test(\"Contains: token, refreshToken, role\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"token\");",
                  "    pm.expect(pm.response.text()).to.include(\"refreshToken\");",
                  "    pm.expect(pm.response.text()).to.include(\"permissions\");",
                  "});",
                  "",
                  "//Permissions",
                  "pm.test(\"Role is Global Tenant Admin\", function () {",
                  "pm.expect(pm.response.text()).to.include(\"\\\"DSP_WRITE\\\"\");",
                  "pm.expect(pm.response.text()).to.include(\"\\\"DSP_READ\\\"\");",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"token\", jsonData.token);"
                ],
                "type": "text/javascript",
                "id": "d50ac09d-88a4-4b72-919a-a3acc831794f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "//Save current time before start",
                  "pm.environment.set(\"startTimestamp\", (new Date()).toISOString());"
                ],
                "type": "text/javascript",
                "id": "740fea84-0d18-43fb-a7a3-ab94628a16b1"
              }
            }
          ],
          "id": "c21d7838-82ea-4cbe-a444-5199fbbe5519",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"7895123\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/auth/login"
          },
          "response": []
        },
        {
          "name": "Create_dsp_RTB",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"externalId\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Demand Partner\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"ACTIVE\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"ortbVersion\\\":\\\"V2_3\");",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"dspIdRTB\", jsonData.id);",
                  "pm.environment.set(\"rtbStatus\", jsonData.status);"
                ],
                "type": "text/javascript",
                "id": "6f7aef89-44c6-4a03-92e9-40bea2cb0c68"
              }
            }
          ],
          "id": "4b8cf39a-148b-47e4-8665-708aa18a8fbd",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Postman: Demand Partner {{currentSprint}} {{startTimestamp}}\",\n  \"auctionMode\": \"FIRST_PRICE\",\n  \"contacts\": {},\n  \"ortbVersion\": \"V2_3\",\n  \"requestFilter\": {\n    \"adTypes\": [],\n     \"countries\": [],\n    \"sizes\": [],\n    \"ssps\": {\n      \"allow\": true,\n      \"values\": []\n    }\n  },\n  \"status\": \"ACTIVE\",\n  \"type\": \"RTB\",\n  \"url\": \"http://qa.com\",\n  \"pricingStrategy\": \"FULL_PRICE\",\n  \"targetingsConj\": \"AND\"\n}"
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps"
          },
          "response": []
        },
        {
          "name": "Create_dsp_TAG",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "// Type",
                  "pm.test(\"Type: TAG\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"TAG\");",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"dspIdTAG\", jsonData.id);",
                  "pm.environment.set(\"tagStatus\", jsonData.status);"
                ],
                "type": "text/javascript",
                "id": "ab82b82b-ab94-4db7-b5f3-9f745f52d44a"
              }
            }
          ],
          "id": "cd678d19-5d99-46a4-bf8a-c0b0ff68785f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Postman: Demand Partner {{currentSprint}} {{startTimestamp}}\",\n  \"auctionMode\": \"FIRST_PRICE\",\n  \"contacts\": {},\n  \"price\": 0,\n  \"ortbVersion\": null,\n  \"requestFilter\": {\n    \"adTypes\": [],\n     \"countries\": [],\n    \"sizes\": [],\n    \"ssps\": {\n      \"allow\": true,\n      \"values\": []\n    }\n  },\n  \"status\": \"ACTIVE\",\n  \"type\": \"TAG\",\n  \"url\": \"http://qa.com\",\n  \"pricingStrategy\": \"FULL_PRICE\",\n  \"targetingsConj\": \"AND\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps"
          },
          "response": []
        },
        {
          "name": "Create_publisher",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Publisher\");",
                  "});",
                  "",
                  "//Set publisherId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"publisherId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "96c0ca63-8173-4da7-8ece-ce5c9fdeeeb1"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "067f3fff-2b14-403f-af3e-0619399120c1"
              }
            }
          ],
          "id": "3a0b9b5d-77c1-46dd-be49-9637abb9538d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Postman: Publisher {{currentSprint}} {{startTimestamp}}\",\n    \"contacts\": {},\n    \"domain\": \"qa.com\",\n    \"paymentDetails\": \"\",\n    \"paymentTerm\": null,\n    \"sellerType\": \"PUBLISHER\",\n    \"status\": \"ACTIVE\",\n    \"type\": \"PUBLISHER\",\n    \"targetingsConj\": \"AND\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps"
          },
          "response": []
        },
        {
          "name": "Create_ssp_exchange",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: SSP\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"EXCHANGE\");",
                  "});",
                  "",
                  "",
                  "//Set publisherId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"sspId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "e49a9138-e505-4f3c-9016-2f091b4b2de7"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "c6e504e1-cfea-4a05-9e5e-f94ace4a7325"
              }
            }
          ],
          "id": "19b9f525-a607-4dbe-8d52-b519303ed2e8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Postman: SSP {{currentSprint}} {{startTimestamp}}\",\n    \"contacts\": {},\n    \"domain\": \"qa.com\",\n    \"paymentDetails\": \"\",\n    \"paymentTerm\": null,\n    \"sellerType\": \"PUBLISHER\",\n    \"status\": \"ACTIVE\",\n    \"type\": \"EXCHANGE\",\n    \"pricingStrategy\": \"FIXED_PRICE\",\n    \"targetingsConj\": \"AND\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps"
          },
          "response": []
        },
        {
          "name": "Create_ad_pod_layout_immediate_1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Ad pod layout\");",
                  "});",
                  "",
                  "//Set publisherId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"adPodId1\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "4023f3e5-87d0-4740-97da-0eb1dac45a83"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "38d905f5-9072-43c5-8727-eaf8c16593e7"
              }
            }
          ],
          "id": "16ba9268-1ac9-4427-aaf7-50a9de368127",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: Ad pod layout {{currentSprint}} {{startTimestamp}}\",\n    \"status\": \"ACTIVE\",\n    \"slots\": [\n        {\n            \"duration\": 15,\n            \"type\": \"IMMEDIATE\"\n        },\n        {\n            \"duration\": null,\n            \"type\": \"IMMEDIATE\"\n        }\n    ],\n    \"type\": \"REGULAR_SLOTS_SMARTPOD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts"
          },
          "response": []
        },
        {
          "name": "Create_ad_pod_layout_immediate_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Ad pod layout\");",
                  "});",
                  "",
                  "//Set publisherId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"adPodId2\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "6e956f8b-1e4a-474d-9039-b787f57eb04c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "8d8c0ff2-cfd2-4a66-9f76-231e4e6ddc59"
              }
            }
          ],
          "id": "22ac235b-bc0a-44ed-8007-207f20357d66",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: Ad pod layout {{currentSprint}} {{startTimestamp}}\",\n    \"status\": \"ACTIVE\",\n    \"slots\": [\n        {\n            \"duration\": 15,\n            \"type\": \"IMMEDIATE\"\n        },\n        {\n            \"duration\": null,\n            \"type\": \"IMMEDIATE\"\n        }\n    ],\n    \"type\": \"REGULAR_SLOTS_SMARTPOD\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts"
          },
          "response": []
        },
        {
          "name": "Create_advertiser_1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Advertiser\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"ACTIVE\");",
                  "});",
                  "",
                  "//Set publisherId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"advertiserId1\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "be1bd1f6-f80f-4a03-b753-757378b1867f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "8538128c-a1e7-47f3-a24c-d15f18164552"
              }
            }
          ],
          "id": "c625cdc5-86b6-4464-bbcb-a81eece8751c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: Advertiser {{currentSprint}} {{startTimestamp}}\",\n    \"balance\": 0,\n    \"contacts\": {\n        \"country\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"responsiblePerson\": null,\n        \"skype\": null\n    },\n    \"domain\": \"qa.com\",\n    \"domains\": null,\n    \"ssps\": null,\n    \"status\": \"ACTIVE\",\n    \"campaigns\": 0,\n    \"creatives\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers"
          },
          "response": []
        },
        {
          "name": "Create_advertiser_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"id\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Advertiser\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"ACTIVE\");",
                  "});",
                  "",
                  "//Set publisherId variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"advertiserId2\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "66df7073-4298-4b49-ab92-1a3000776291"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "aeb4c3fa-ac46-415e-8ccf-1d5116bf273b"
              }
            }
          ],
          "id": "3dd3eea7-e4d9-4c18-9725-e56163adabe5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": null,\n    \"name\": \"Postman: Advertiser {{currentSprint}} {{startTimestamp}}\",\n    \"balance\": 0,\n    \"contacts\": {\n        \"country\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"responsiblePerson\": null,\n        \"skype\": null\n    },\n    \"domain\": \"qa.com\",\n    \"domains\": null,\n    \"ssps\": null,\n    \"status\": \"ACTIVE\",\n    \"campaigns\": 0,\n    \"creatives\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers"
          },
          "response": []
        },
        {
          "name": "Get_dsp_RTB",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"dspIdRTB\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"externalId\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Demand Partner\");",
                  "    pm.expect(pm.response.json().status).to.eql(pm.environment.get(\"status\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"ortbVersion\\\":\\\"V2_3\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"contacts\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"RTB\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"auctionMode\\\":\\\"FIRST_PRICE\");",
                  "        pm.expect(pm.response.text()).to.include(\"\\\"pricingStrategy\\\":\\\"FULL_PRICE\");",
                  "",
                  "    //\"price: 0\" has been passed and \"price: 0E-8\" recieved. Is it OK?",
                  "    //pm.expect(pm.response.text()).to.include(\"\\\"price\\\":\\\"0E-8\");",
                  "",
                  "    //UPD Price is null already, 0E-8 value returns for the \"share\" field ",
                  "",
                  "});"
                ],
                "type": "text/javascript",
                "id": "8e4381ba-589c-4516-9eae-e44ee32db573"
              }
            }
          ],
          "id": "4b5b192b-d3e0-471c-9e27-85710c782bee",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspIdRTB}}"
          },
          "response": []
        },
        {
          "name": "Get_dsp_TAG",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "// Type",
                  "pm.test(\"Type: TAG\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"dspIdTAG\"))",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"TAG\");",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"dspId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "11fabe0f-913a-422c-b6e8-c14923ea1427"
              }
            }
          ],
          "id": "f622d5f7-8ecb-4bc6-9d85-ee4492eb152c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspIdTAG}}"
          },
          "response": []
        },
        {
          "name": "Get_publisher",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"publisherId\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "536105d7-647b-4aa4-83e7-a3422573b265"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "be22302e-161f-4f47-b4da-7ec74a39d73b"
              }
            }
          ],
          "id": "fc450d2c-9095-4d18-8b4f-bedd86d5a1ce",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}}"
          },
          "response": []
        },
        {
          "name": "Get_ssp_exchange",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"sspId\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "e6dd7e21-6f63-402e-b004-6ef570c77343"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "87d95da9-541b-4cff-9d2f-3a31992d58b2"
              }
            }
          ],
          "id": "2f14340b-7539-4926-86a5-fc0e32722fa3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{sspId}}"
          },
          "response": []
        },
        {
          "name": "Get_adpodlayout_1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"adPodId1\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "55bc3944-314c-48b5-8905-c81730c484ec"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "d2824409-95b2-43dd-9c6e-0cb8867a2438"
              }
            }
          ],
          "id": "44211b31-2e35-42b4-b9be-12a99757e218",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId1}}"
          },
          "response": []
        },
        {
          "name": "Get_adpodlayout_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"adPodId2\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "2d362ae6-f2df-4edb-9ea4-572d78c0d48b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "53a337bb-5168-4c30-882e-b9b25d7e0b93"
              }
            }
          ],
          "id": "96d60798-277e-4c58-8c1c-a8371111779d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId2}}"
          },
          "response": []
        },
        {
          "name": "Get_advertiser_1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "083b8f0d-53f3-42f0-ace5-ad1edbf2ecb1"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "947aac00-b1c6-41b9-926b-fffcbb86594f"
              }
            }
          ],
          "id": "b20db40a-487d-45cb-b1ec-5e4658a713e9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/{{advertiserId1}}"
          },
          "response": []
        },
        {
          "name": "Get_advertiser_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "2aad2878-c374-4b81-a72d-2445d2137e27"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "4e7995fa-64ee-4972-86a8-269b8236707d"
              }
            }
          ],
          "id": "ce0288e4-3bef-4417-9b01-0c4d9779e5da",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/{{advertiserId2}}"
          },
          "response": []
        },
        {
          "name": "Edit Demand Status (Bulk)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var statuses = ['ACTIVE','INACTIVE'];\r",
                  "const index = Math.trunc(Math.random() * statuses.length);\r",
                  "pm.environment.set(\"status\", statuses[index])"
                ],
                "type": "text/javascript",
                "id": "d33ddd1d-ee5d-4ba4-81df-82839c0507bf"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "478c2d5a-fbed-4081-92b9-878b8e7d8ca3"
              }
            }
          ],
          "id": "64dce4f9-4d46-462d-b5e0-4264a89c0b79",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\"{{status}}\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspIdRTB}},{{dspIdTAG}}/status"
          },
          "response": []
        },
        {
          "name": "Edit Demand Tmax (Bulk)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var randomValue =  Math.floor(Math.random() * 999) + 1;\r",
                  "pm.environment.set('tmaxValue', randomValue);"
                ],
                "type": "text/javascript",
                "id": "5ca86c9a-760d-402e-b60f-6a6d9aeeeec6"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript",
                "id": "c308f2f7-c285-4892-b200-94aac229b653"
              }
            }
          ],
          "id": "518af480-790f-417b-aeed-1282e1508fc9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"maxTmax\":{{tmaxValue}}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspIdRTB}},{{dspIdTAG}}/tmax"
          },
          "response": []
        },
        {
          "name": "Edit Demand Capping (Bulk)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.environment.set(\"budgetCapping\",pm.variables.replaceIn('{{$randomPrice}}'))\r",
                  "pm.environment.set(\"impCapping\",pm.variables.replaceIn('{{$randomPrice}}'))\r",
                  "pm.environment.set(\"requestCapping\",pm.variables.replaceIn('{{$randomPrice}}'))"
                ],
                "type": "text/javascript",
                "id": "b10bda1c-229f-4db1-ac4e-28d148255113"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "73fc55dc-da76-412a-b9ad-57857be181fc"
              }
            }
          ],
          "id": "60ad55db-e799-4f65-8ea3-c4e3fe88e1b0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"budgetCapping\": {\r\n    \"period\": \"HOUR\",\r\n    \"value\": {{budgetCapping}}\r\n  },\r\n  \"delivery\": \"ASAP\",\r\n  \"impCapping\": {\r\n    \"period\": \"HOUR\",\r\n    \"value\": {{impCapping}}\r\n  },\r\n  \"requestCapping\": {\r\n    \"period\": \"HOUR\",\r\n    \"value\": {{requestCapping}}\r\n  }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspIdRTB}},{{dspIdTAG}}/capping"
          },
          "response": []
        },
        {
          "name": "Edit Supply Status (Bulk)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var statuses = ['ACTIVE','INACTIVE'];\r",
                  "const index = Math.trunc(Math.random() * statuses.length);\r",
                  "//pm.environment.set(\"status\", statuses[index])"
                ],
                "type": "text/javascript",
                "id": "b0c4f8f5-a8d0-4ced-8aab-6c11a451137f"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "898bd12b-81c2-412f-b6f8-5e5f65f79da5"
              }
            }
          ],
          "id": "e9b3be59-d849-4fcf-8e7d-b37be47bb57b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\"{{status}}\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}},{{sspId}}/status"
          },
          "response": []
        },
        {
          "name": "Edit Supply Tmax (Bulk)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var randomValue =  Math.floor(Math.random() * 999) + 1;\r",
                  "//pm.environment.set('tmaxValue', randomValue);"
                ],
                "type": "text/javascript",
                "id": "a1cc21b0-ace8-444e-af46-b6f94d4e751d"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript",
                "id": "db6a727a-5c46-43cc-9f2c-1a64aae8b753"
              }
            }
          ],
          "id": "cd3ac9e5-cb72-47de-bf30-539ab40d4586",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{tmaxValue}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}},{{sspId}}/tmax"
          },
          "response": []
        },
        {
          "name": "Edit Supply Capping (Bulk)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "//pm.environment.set(\"budgetCapping\",pm.variables.replaceIn('{{$randomPrice}}'))\r",
                  "//pm.environment.set(\"impCapping\",pm.variables.replaceIn('{{$randomPrice}}'))\r",
                  "//pm.environment.set(\"requestCapping\",pm.variables.replaceIn('{{$randomPrice}}'))"
                ],
                "type": "text/javascript",
                "id": "c9f1d559-80b4-4ec7-9aef-28624f6912a2"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "0b2c924b-1f47-4b7d-9206-942bd17d713c"
              }
            }
          ],
          "id": "6e2e6562-f6ee-47cd-9e99-b5e0fddb4a6b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"budgetCapping\": {\r\n    \"period\": \"HOUR\",\r\n    \"value\": {{budgetCapping}}\r\n  },\r\n  \"delivery\": \"ASAP\",\r\n  \"impCapping\": {\r\n    \"period\": \"HOUR\",\r\n    \"value\": {{impCapping}}\r\n  },\r\n  \"requestCapping\": {\r\n    \"period\": \"HOUR\",\r\n    \"value\": {{requestCapping}}\r\n  }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}},{{sspId}}/capping"
          },
          "response": []
        },
        {
          "name": "Edit Adpod Layout Status (Bulk)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var statuses = ['ACTIVE','INACTIVE']\r",
                  "const index = Math.trunc(Math.random() * statuses.length);\r",
                  "//pm.environment.set(\"status\", statuses[index])"
                ],
                "type": "text/javascript",
                "id": "fff009f1-94f6-4fec-b9f0-4b2eaf83facb"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "42bfd581-ca29-40d8-9671-5d0e51ea8506"
              }
            }
          ],
          "id": "be4db58f-c4e5-4776-a84c-d6acac54d34f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\"{{status}}\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId1}},{{adPodId2}}/status"
          },
          "response": []
        },
        {
          "name": "Edit Advertiser Status (Bulk)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var statuses = ['ACTIVE','INACTIVE']\r",
                  "const index = Math.trunc(Math.random() * statuses.length);\r",
                  "//pm.environment.set(\"status\", statuses[index])"
                ],
                "type": "text/javascript",
                "id": "a2b3a174-b892-47b4-97d2-474db76b1461"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "c417b2ee-44bb-4294-b232-0f621d2d79c9"
              }
            }
          ],
          "id": "bfcda8a0-5270-4e78-baae-10ff44884c42",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\"{{status}}\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/{{advertiser1}},{{advertiser2}}/status"
          },
          "response": []
        },
        {
          "name": "Get_dsp_RTB",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains: id, name\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"dspIdRTB\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"externalId\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Postman: Demand Partner\");",
                  "    pm.expect(pm.response.json().status).to.eql(pm.environment.get(\"status\"));",
                  "    pm.expect(pm.response.json().maxTmax).to.eql(pm.environment.get(\"tmaxValue\"));",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"ortbVersion\\\":\\\"V2_3\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"contacts\\\"\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"RTB\");",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"auctionMode\\\":\\\"FIRST_PRICE\");",
                  "        pm.expect(pm.response.text()).to.include(\"\\\"pricingStrategy\\\":\\\"FULL_PRICE\");",
                  "",
                  "    //\"price: 0\" has been passed and \"price: 0E-8\" recieved. Is it OK?",
                  "    //pm.expect(pm.response.text()).to.include(\"\\\"price\\\":\\\"0E-8\");",
                  "",
                  "    //UPD Price is null already, 0E-8 value returns for the \"share\" field ",
                  "",
                  "});"
                ],
                "type": "text/javascript",
                "id": "00eabc3d-0cc2-47a2-802e-6ed4a266185d"
              }
            }
          ],
          "id": "fbe2eb70-1918-427c-a61b-0a588fd7c4f8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspIdRTB}}"
          },
          "response": []
        },
        {
          "name": "Get_dsp_TAG",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "// Type",
                  "pm.test(\"Type: TAG\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"dspIdTAG\"))",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"TAG\");",
                  "    pm.expect(pm.response.json().status).to.eql(pm.environment.get(\"status\"));",
                  "    pm.expect(pm.response.json().maxTmax).to.eql(pm.environment.get(\"tmaxValue\"));",
                  "});",
                  "",
                  "//Set token variable",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"dspId\", jsonData.id);"
                ],
                "type": "text/javascript",
                "id": "df1728de-333f-4602-bd53-bf21f7d01d79"
              }
            }
          ],
          "id": "62f5aa7d-e130-4f3d-bab4-226bd5df04b0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspIdTAG}}"
          },
          "response": []
        },
        {
          "name": "Get_publisher",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"publisherId\"));",
                  "    pm.expect(pm.response.json().status).to.eql(pm.environment.get(\"status\"));",
                  "    pm.expect(pm.response.json().tmax).to.eql(pm.environment.get(\"tmaxValue\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "ff99bcb5-a95a-4e5e-b205-a6f5754fe928"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "700aa3ba-b9e3-4ecc-9688-ee67651f0574"
              }
            }
          ],
          "id": "8dc067f1-6c5f-4b83-8218-108cdaaca635",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}}"
          },
          "response": []
        },
        {
          "name": "Get_ssp_exchange",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"sspId\"));",
                  "    pm.expect(pm.response.json().status).to.eql(pm.environment.get(\"status\"));",
                  "    pm.expect(pm.response.json().tmax).to.eql(pm.environment.get(\"tmaxValue\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "dcc15611-d4ea-4d1a-b3ab-4d44585d1bb3"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "362de3a5-efb6-4ce6-adf2-c263546de7f3"
              }
            }
          ],
          "id": "39a42951-de31-4db2-b25f-93fb3a824c85",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{sspId}}"
          },
          "response": []
        },
        {
          "name": "Get_adpodlayout_1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"adPodId1\"));",
                  "    pm.expect(pm.response.json().status).to.eql(pm.environment.get(\"status\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "741ca734-f579-4034-88ae-18c5354f61d4"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "da2ae25c-6d09-4dfd-a99c-c82892fedc8e"
              }
            }
          ],
          "id": "ab813272-e095-4654-8cef-1cc0842fbe10",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId1}}"
          },
          "response": []
        },
        {
          "name": "Get_adpodlayout_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "//Content",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"adPodId2\"));",
                  "    pm.expect(pm.response.json().status).to.eql(pm.environment.get(\"status\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "3308bfcc-544e-41e0-8bb2-8288b90d6f89"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "d9be0965-323b-40f4-97e9-2f4b72bf1daf"
              }
            }
          ],
          "id": "1a589725-7f28-4eb4-98f4-e969a8ff7978",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId2}}"
          },
          "response": []
        },
        {
          "name": "Get_advertiser_1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"advertiserId1\"));",
                  "    pm.expect(pm.response.json().status).to.eql(pm.environment.get(\"status\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "41aa32d0-84b7-43f4-8a80-bedc91f58ebd"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "74a85015-c781-4fed-9ffc-f244bbd8ab1e"
              }
            }
          ],
          "id": "00f500b4-760a-49f5-8d9a-a7eb824b1347",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/{{advertiserId1}}"
          },
          "response": []
        },
        {
          "name": "Get_advertiser_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "",
                  "pm.test(\"Contains\", function () {",
                  "    pm.expect(pm.response.text()).to.include(pm.environment.get(\"advertiserId2\"));",
                  "    pm.expect(pm.response.json().status).to.eql(pm.environment.get(\"status\"));",
                  "});"
                ],
                "type": "text/javascript",
                "id": "417242f7-6ab7-4c39-ba6a-89783c5c1b18"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "43e433a4-2293-4838-ba2d-14d1c5055b57"
              }
            }
          ],
          "id": "c66aa235-87e6-426a-b594-e084e92d6ff0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/{{advertiserId2}}"
          },
          "response": []
        },
        {
          "name": "Delete_dsp_RTB",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "f7055985-998d-4816-b579-d09dc246c4d2"
              }
            }
          ],
          "id": "8aaf7bc4-3235-4071-84d7-f0fb849332b1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspIdRTB}}"
          },
          "response": []
        },
        {
          "name": "Delete_dsp_TAG",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "6207ff89-448c-4ef6-84db-fb0a3111189f"
              }
            }
          ],
          "id": "fe96ffd6-1448-454c-a2bf-7f4a6ad6b38d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspIdTAG}}"
          },
          "response": []
        },
        {
          "name": "Delete_publisher",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "cd761d4e-14f6-44c3-b0f1-234ae3a04f14"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "0ca74229-3daa-419b-b3d3-1ceda7e63ff4"
              }
            }
          ],
          "id": "5a29e459-0337-4507-9d03-db6c19c57ae5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}}"
          },
          "response": []
        },
        {
          "name": "Delete_ssp_exchange",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "098f6e6c-75e2-4d9b-a77a-45b90abdb9db"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "1cb716f2-69c1-470a-a5c9-c14f81e88324"
              }
            }
          ],
          "id": "d36df7c1-fbac-42e5-b4a1-b6c0189e68d1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{sspId}}"
          },
          "response": []
        },
        {
          "name": "Delete_adpodlayout_1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "6c8b97fa-80fe-4d51-a5b5-6524b29fac10"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "26dc8150-1f87-4d1f-92e3-4af682ec0dd8"
              }
            }
          ],
          "id": "4cd45cf8-2939-40c1-9eff-8e49a928af57",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId1}}"
          },
          "response": []
        },
        {
          "name": "Delete_adpopdlayout_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "7b7913b6-d9e5-48e1-a693-f48953e2d529"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "1f0dd7c8-3877-424d-a7a1-3158df294641"
              }
            }
          ],
          "id": "004c41d0-8d1a-489d-bfdf-becb563e87ef",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId2}}"
          },
          "response": []
        },
        {
          "name": "Delete_advertiser_1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "a5b690e4-4337-476d-9846-04784cf7bc94"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "28c75d53-7819-490a-bedb-3393e06934e5"
              }
            }
          ],
          "id": "6d6ef865-1e3a-42dd-9718-49621aecff04",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/{{advertiserId1}}"
          },
          "response": []
        },
        {
          "name": "Delete_advertiser_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ],
                "type": "text/javascript",
                "id": "c0dce7b0-c5bb-457b-9e96-2bb2f5ef3374"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "ac08a686-9ede-47ad-bd56-d740746e22d9"
              }
            }
          ],
          "id": "b32225ff-1faa-48cc-bd0f-89ddca492b9a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/{{advertiserId2}}"
          },
          "response": []
        },
        {
          "name": "Get_dsp_RTB",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "d4bbe34c-4e6d-40ab-8d68-9170bf1dca1c"
              }
            }
          ],
          "id": "c1f4693a-1532-4485-92a9-da1ca4ceb48b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspIdRTB}}"
          },
          "response": []
        },
        {
          "name": "Get_dsp_TAG",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "41a543cf-e171-48bf-ba59-5088d13bd09d"
              }
            }
          ],
          "id": "8af161c4-7e4b-4f17-8f51-b110b3c2f55b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "type": "text",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/dsps/{{dspIdTAG}}"
          },
          "response": []
        },
        {
          "name": "Get_publisher",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "5cb87809-d8b4-40dc-a76a-429702096293"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "3291ce8d-96cf-46cc-8719-ddd76a97294b"
              }
            }
          ],
          "id": "c15da575-f944-47b6-860e-b60d860f5e0b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{publisherId}}"
          },
          "response": []
        },
        {
          "name": "Get_ssp_exchange",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "b3939722-0819-44cb-96e6-d5715bef3312"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "66b27ae6-f5ed-440a-86a1-c881a03eb33f"
              }
            }
          ],
          "id": "de8520c4-e28a-411a-8f2d-617a97f8fd1b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/ssps/{{sspId}}"
          },
          "response": []
        },
        {
          "name": "Get_adpodlayout_1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "7bdd6d9b-7804-4ea8-be11-c9bf6e14cd36"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "245647f7-2557-4711-ae57-3f3f3e60e57e"
              }
            }
          ],
          "id": "584bffcf-0432-430c-ac8a-64c41dd5436e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId1}}"
          },
          "response": []
        },
        {
          "name": "Get_adpodlayout_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "b8ff5b11-11d6-4e83-b01a-359a633a979e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "fc7f130d-24bb-480f-b955-f3110d4a3764"
              }
            }
          ],
          "id": "7cc9446f-632a-455a-bef3-e840982858c9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/adpodlayouts/{{adPodId2}}"
          },
          "response": []
        },
        {
          "name": "Get_advertiser_1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "12c60a68-0b5d-4008-906c-24e805ecf272"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "aae80737-223c-41cc-83c5-86651cf560b1"
              }
            }
          ],
          "id": "31334e09-e8d4-4249-930f-5249cfb42537",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/{{advertiserId1}}"
          },
          "response": []
        },
        {
          "name": "Get_advertiser_2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//Status code",
                  "tests[\"Status code is 404\"] = responseCode.code === 404;"
                ],
                "type": "text/javascript",
                "id": "367827a5-a3c9-4e5b-bcc1-e00a7f2d22da"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "id": "6635bdf6-3bfc-469e-8afc-561b698f662a"
              }
            }
          ],
          "id": "8724971b-9cf1-49f8-ad40-d5be4a97a17f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "X-Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "url": "{{protocol}}{{server}}.{{domain}}/api/{{api_version}}/advertisers/{{advertiserId2}}"
          },
          "response": []
        }
      ],
      "id": "53f79c7e-fe9c-41d9-866e-52e08844bbec"
    }
  ]
}